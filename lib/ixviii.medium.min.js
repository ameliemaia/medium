(function(e,t){'object'==typeof exports&&'object'==typeof module?module.exports=t():'function'==typeof define&&define.amd?define('ixviii.medium',[],t):'object'==typeof exports?exports['ixviii.medium']=t():e['ixviii.medium']=t()})(this,function(){var e=Math.atan2,t=Math.floor,i=Math.ceil,n=Math.sqrt,o=Math.pow,r=Math.round,d=Math.cos,l=Math.sin,c=Math.acos,s=Math.min,u=Math.max,m=Math.abs,f=Math.PI;return function(e){function t(r){if(i[r])return i[r].exports;var a=i[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,t),a.l=!0,a.exports}var i={};return t.m=e,t.c=i,t.d=function(e,i,r){t.o(e,i)||Object.defineProperty(e,i,{configurable:!1,enumerable:!0,get:r})},t.n=function(e){var i=e&&e.__esModule?function(){return e['default']}:function(){return e};return t.d(i,'a',i),i},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p='',t(t.s=47)}([function(e,t,i){'use strict';function r(e,t,i=!1){const r=o.createBuffer(),a=i?o.DYNAMIC_DRAW:o.STATIC_DRAW,n=e===o.ARRAY_BUFFER?Float32Array:Uint16Array;return o.bindBuffer(e,r),o instanceof WebGL2RenderingContext?o.bufferData(e,new n(t),a,0):o.bufferData(e,new n(t),a),o.bindBuffer(e,null),r}function a(e){const t=o.createBuffer();return!!(o instanceof WebGL2RenderingContext)&&(o.bindBuffer(o.UNIFORM_BUFFER,t),o.bufferData(o.UNIFORM_BUFFER,new Float32Array(e),o.DYNAMIC_DRAW),o.bindBuffer(o.UNIFORM_BUFFER,null),t)}Object.defineProperty(t,'__esModule',{value:!0}),t.set=function(e,t){o=e,s=t,d=s===n.WEBGL2_CONTEXT},t.get=function(){return o},i.d(t,'webgl2',function(){return d}),i.d(t,'createBuffer',function(){return r}),i.d(t,'createUniformBuffer',function(){return a});var n=i(3);let o,s,d},function(e,t,i){'use strict';var r=i(6),a=i(48),n=i(49),o=i(29),s=i(30),d=i(31),l=i(50),u=i(51),c=i(32),m=i(33);i.d(t,'a',function(){return o}),i.d(t,'b',function(){return s}),i.d(t,'c',function(){return d}),i.d(t,'d',function(){return u}),i.d(t,'e',function(){return c})},function(e,t,i){'use strict';var r=i(1);class a{constructor(e=0,t=0,i=0){return this.v=r.e.create(),this.set(e,t,i),this}set x(e){this.v[0]=e}get x(){return this.v[0]}set y(e){this.v[1]=e}get y(){return this.v[1]}set z(e){this.v[2]=e}get z(){return this.v[2]}set(e,t,i){return r.e.set(this.v,e,t,i),this}clone(){return new a(this.v[0],this.v[1],this.v[2])}copy(e){return r.e.copy(this.v,e.v),this}add(e){return r.e.add(this.v,this.v,e.v),this}subtract(e){return r.e.subtract(this.v,this.v,e.v),this}subtractVectors(e,t){const i=r.e.create();return r.e.subtract(i,e.v,t.v),i}scale(e){return r.e.scale(this.v,this.v,e),this}distance(e){return r.e.distance(this.v,e.v)}length(){return r.e.length(this.v)}negate(){return r.e.negate(this.v,this.v),this}normalize(){return r.e.normalize(this.v,this.v),this}dot(e){return r.e.dot(this.v,e.v)}cross(e){return r.e.cross(this.v,this.v,e.v),this}crossVectors(e,t){const i=r.e.create();return r.e.cross(i,e.v,t.v),i}lerp(e,t){return r.e.lerp(this.v,this.v,e.v,t),this}equals(e){return r.e.equals(this.v,e.v)}multiply(e){return this.v[0]*=e.v[0],this.v[1]*=e.v[1],this.v[2]*=e.v[2],this}fromArray(e){return r.e.copy(this.v,e)}}t.a=a,a.up=new a(0,1,0)},function(e,t){'use strict';Object.defineProperty(t,'__esModule',{value:!0});t.WEBGL_CONTEXT='webgl';const i='webgl2';t.WEBGL2_CONTEXT=i;t.RENDERER_DEFAULT_CONTEXT=i;const r=1280;t.RENDERER_DEFAULT_WIDTH=r;const a=720;t.RENDERER_DEFAULT_HEIGHT=a;t.RENDERER_DEFAULT_RATIO=r/a;t.PRECISION='highp';t.CULL_NONE=-1;t.CULL_BACK=1029;t.CULL_FRONT=1028;t.CULL_FRONT_AND_BACK=1032;t.DRAW_POINTS=0;t.DRAW_LINES=1;t.DRAW_LINE_LOOP=2;t.DRAW_LINE_STRIP=3;t.DRAW_TRIANGLES=4;t.UNIFORM_PROJECTION_VIEW_LOCATION=0;t.UNIFORM_AMBIENT_LIGHT_LOCATION=1;t.UNIFORM_DIRECTIONAL_LIGHTS_LOCATION=2;t.UNIFORM_POINT_LIGHTS_LOCATION=3;t.MATERIAL_BASIC='basic';t.MATERIAL_LAMBERT='lambert';t.MATERIAL_PHONG='phong';t.LIGHT_AMBIENT='ambient';t.LIGHT_DIRECTIONAL='directional';t.LIGHT_POINT='point'},function(e,t){'use strict';t.a='#version 300 es'},function(e,t,i){'use strict';function r(e,t){if('highp'===t){if(0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision)return'highp';t='mediump'}return'mediump'===t&&0<e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision&&0<e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision?'mediump':'lowp'}function a(e){let t=s.PRECISION;const i=r(e,t);i!==t&&(Object(o.b)('Capabilities:',t,'not supported, using',i,'instead.'),t=i);const a=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),n=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=e.getParameter(e.MAX_TEXTURE_SIZE),l=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),u=e.getParameter(e.MAX_VERTEX_ATTRIBS),c=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),m=e.getParameter(e.MAX_VARYING_VECTORS),f=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS);return{maxAttributes:u,maxCubemapSize:l,maxFragmentUniforms:f,maxPrecision:i,maxTextures:a,maxTextureSize:d,maxVertexTextures:n,maxVertexUniforms:c,maxVaryings:m,precision:t}}function n(e){const t=d.webgl2||e.getExtension('OES_vertex_array_object')||!1,i=e.getExtension('ANGLE_instanced_arrays')||!1,r=e.getExtension('OES_texture_float')||!1;return{angleInstancedArrays:i,textureFloat:r,vertexArrayObject:t}}Object.defineProperty(t,'__esModule',{value:!0}),t.set=function(e){l=a(e),u=n(e)},i.d(t,'capabilities',function(){return l}),i.d(t,'extensions',function(){return u});var o=i(14),s=i(3),d=i(0);let l={},u={}},function(e,t,i){'use strict';i.d(t,'a',function(){return a});const r=1e-6;t.b=r;let a='undefined'==typeof Float32Array?Array:Float32Array;const n=Math.random;t.c=n},function(e,t,i){'use strict';var r=i(0),n=i(12),o=i(2),a=i(40),s=i(41),d=i(72);let l;t.a=class{constructor(e,t,i,a,n){l=r.get(),this.bufferVertices=e,this.bufferIndices=t,this.bufferNormals=i,this.bufferUvs=a,this.bufferColors=n,this.attributes={},this.attributesInstanced={},this.bufferVertices&&(this.addAttribute('aVertexPosition',l.ARRAY_BUFFER,this.bufferVertices,3),this.generateVertices()),this.bufferIndices&&(this.addAttribute('aIndex',l.ELEMENT_ARRAY_BUFFER,this.bufferIndices,1,!1),this.generateFaces()),this.bufferNormals&&this.addAttribute('aVertexNormal',l.ARRAY_BUFFER,this.bufferNormals,3),this.bufferUvs&&(this.addAttribute('aUv',l.ARRAY_BUFFER,this.bufferUvs,2),this.generateUvs()),this.bufferColors&&this.addAttribute('aVertexColor',l.ARRAY_BUFFER,this.bufferColors,3)}addAttribute(e,t,i,r,a){this.attributes[e]=new s.a(t,i,r,a)}addInstancedBufferAttribute(e,t,i){this.attributesInstanced[e]=new s.a(l.ARRAY_BUFFER,t,i)}generateVertices(){this.vertices=[];for(let e=0;e<this.bufferVertices.length;e+=3){const t=this.bufferVertices[e],i=this.bufferVertices[e+1],r=this.bufferVertices[e+2],a=new o.a(t,i,r);this.vertices.push(a)}}generateFaces(){this.faces=[];for(let e=0;e<this.bufferIndices.length;e+=3){const t=this.bufferIndices[e],i=this.bufferIndices[e+1],r=this.bufferIndices[e+2],n=this.vertices[t],a=this.vertices[i],o=this.vertices[r],s=new d.a(t,i,r,n,a,o);this.faces.push(s)}}generateUvs(){this.uvs=[];for(let e=0;e<this.bufferUvs.length;e+=2){const t=this.bufferUvs[e],i=this.bufferUvs[e+1],r=new n.a(t,i);this.uvs.push(r)}}updateVertices(){l=r.get(),this.vertices.forEach((e,t)=>{this.bufferVertices.set(e.v,t*e.v.length)}),this.attributes.aVertexPosition.update(this.bufferVertices)}updateNormals(){const e=[];this.faces.forEach((t)=>{t.updateFaceNormal(),e[t.indices[0]]=t.normal.v,e[t.indices[1]]=t.normal.v,e[t.indices[2]]=t.normal.v}),this.bufferNormals.set(Object(a.flatten)(e)),this.attributes.aVertexNormal.update(this.bufferNormals)}dispose(){l=r.get(),Object.keys(this.attributes).forEach((e)=>{this.attributes[e].dispose(l),delete this.attributes[e]}),Object.keys(this.attributesInstanced).forEach((e)=>{this.attributesInstanced[e].dispose(l),delete this.attributesInstanced[e]}),delete this.attributes,delete this.attributesInstanced,this.bufferVertices=null,this.bufferIndices=null,this.bufferNormals=null,this.bufferUvs=null,this.bufferColors=null}}},function(e,t,i){'use strict';Object.defineProperty(t,'__esModule',{value:!0}),t.degToRad=function(e){return e*(f/180)},t.radToDeg=function(e){return e*(180/f)},t.clamp=function(e,t,i){return u(s(e,i),t)},t.lerp=function(e,t,i){return e+(t-e)*i},t.barycoordFromPoint=function(e,t,i,r){const a=n.e.create(),o=n.e.create(),s=n.e.create();n.e.sub(a,r,t),n.e.sub(o,i,t),n.e.sub(s,e,t);const d=n.e.dot(a,a),l=n.e.dot(a,o),c=n.e.dot(a,s),f=n.e.dot(o,o),p=n.e.dot(o,s),g=d*f-l*l,x=new m.a;if(0==g)return x.set(-2,-1,-1);const b=1/g,h=(f*c-l*p)*b,u=(d*p-l*c)*b;return x.set(1-h-u,u,h)},t.randomSpherePoint=function(e,t,i,r){const a=Math.random(),n=Math.random(),o=2*f*a,s=c(2*n-1),u=e+r*l(s)*d(o),m=t+r*l(s)*l(o),p=i+r*d(s);return[u,m,p]},t.from3DTo2D=function(e,t){const i=e.x,r=e.y,n=e.z,o=t[0]*i+t[4]*r+t[8]*n+t[12],s=t[1]*i+t[5]*r+t[9]*n+t[13],d=t[3]*i+t[7]*r+t[11]*n+t[15],l=new a.a;return l.x=(o/d+1)/2,l.y=1-(s/d+1)/2,l},t.lookAt=function(e,t,i){const r=n.c.create(),a=n.e.create(),o=n.e.create(),s=n.e.create();return n.e.sub(s,e,t),0===n.e.squaredLength(s)&&(s[2]=1),n.e.normalize(s,s),n.e.cross(a,i,s),0===n.e.squaredLength(a)&&(s[2]+=1e-4,n.e.cross(a,i,s)),n.e.normalize(a,a),n.e.cross(o,s,a),n.c.setAxes(r,s,a,o),n.c.invert(r,r),r},t.isPowerOf2=function(e){return 0==(e&e-1)},t.nearestPowerOf2=function(e){return o(2,r(Math.log(e)/0.6931471805599453))},t.addLineNumbers=function(e){let t='';return e.split('\n').forEach((e,i)=>{t+=`${10>i?`0${i}`:i}| ${e}\n`}),t};var n=i(1),a=i(12),m=i(2)},function(e,t,i){'use strict';var r=i(17),a=i(5),n=i(0),o=i(34),s=i(35);let d;class l extends o.a{constructor(e,t){super(),this.geometry=e,this.material=t,this.vao=new s.a,this.visible=!0,this.instanceCount=0,this.material.program.created||this.material.create(this.geometry),this.isInstanced=!1,d=n.get(),this.vao.bind(),this.bindAttributes(),this.bindAttributesInstanced(),this.bindIndexBuffer(),this.vao.unbind()}setInstanceCount(e){d=n.get(),this.instanceCount=e,this.isInstanced=!0}bindAttributes(){Object.keys(this.geometry.attributes).forEach((e)=>{'aIndex'!==e&&(this.material.program.setAttributeLocation(e),this.geometry.attributes[e].bind(),this.material.program.setAttributePointer(e,this.geometry.attributes[e].itemSize))})}bindAttributesInstanced(){Object.keys(this.geometry.attributesInstanced).forEach((e)=>{'aIndex'!==e&&(this.material.program.setAttributeLocation(e),this.geometry.attributesInstanced[e].bind(),this.material.program.setAttributeInstancedPointer(e,this.geometry.attributesInstanced[e].itemSize),d instanceof WebGL2RenderingContext?d.vertexAttribDivisor(this.material.program.attributeLocations[e],1):a.extensions.angleInstancedArrays.vertexAttribDivisorANGLE(this.material.program.attributeLocations[e],1))})}bindIndexBuffer(){this.geometry.bufferIndices&&this.geometry.attributes.aIndex.bind()}draw(e){this.visible&&this.material.program.created&&(d=n.get(),this.updateMatrix(e),this.material.program.bind(),-1!==this.material.culling&&(d.enable(d.CULL_FACE),d.cullFace(this.material.culling)),this.material.setUniforms(e.projectionMatrix,this.modelViewMatrix,this.modelMatrix,e),a.extensions.vertexArrayObject?this.vao.bind():(this.bindAttributes(),this.bindAttributesInstanced(),this.bindIndexBuffer()),this.geometry.attributes.aIndex?d.drawElements(this.material.drawType,this.geometry.attributes.aIndex.numItems,d.UNSIGNED_SHORT,0):d.drawArrays(this.material.drawType,0,this.geometry.attributes.aVertexPosition.numItems),a.extensions.vertexArrayObject&&this.vao.unbind(),-1!==this.material.culling&&d.disable(d.CULL_FACE))}drawInstance(e){this.visible&&this.material.program.created&&(d=n.get(),this.updateMatrix(e),this.material.program.bind(),this.material.setUniforms(e.projectionMatrix,this.modelViewMatrix,this.modelMatrix,e),-1!==this.material.culling&&(d.enable(d.CULL_FACE),d.cullFace(this.material.culling)),this.material.blending&&(d.enable(d.BLEND),d.blendFunc(this.material.blendFunc[0],this.material.blendFunc[1])),a.extensions.vertexArrayObject?this.vao.bind():(this.bindAttributes(),this.bindAttributesInstanced(),this.bindIndexBuffer()),d instanceof WebGL2RenderingContext?d.drawElementsInstanced(this.material.drawType,this.geometry.attributes.aIndex.numItems,d.UNSIGNED_SHORT,0,this.instanceCount):a.extensions.angleInstancedArrays.drawElementsInstancedANGLE(this.material.drawType,this.geometry.attributes.aIndex.numItems,d.UNSIGNED_SHORT,0,this.instanceCount),a.extensions.vertexArrayObject&&this.vao.unbind(),-1!==this.material.culling&&d.disable(d.CULL_FACE),this.material.blending&&d.disable(d.BLEND))}computeBoundingSphere(){this.boundingSphere=new r.a;let e=0,t;this.geometry.vertices.forEach((i)=>{t=i.distance(this.boundingSphere.center),t>e&&(e=t)}),this.boundingSphere.radius=e}dispose(){this.material.dispose(),this.geometry.dispose(),this.vao.dispose(),this.geometry=null,this.material=null,super.dispose()}}t.a=l},function(e,t,i){'use strict';var r=i(1),a=i(13),n=i(59),o=i(60),s=i(61),d=i(63),l=i(64),u=i(5),c=i(3),m=i(0),f=i(65),p=i(16);let g;const x=r.a.create(),b=r.b.create();t.a=class{constructor(e={}){const t=m.webgl2?d.b:d.a;let i;switch(e.type||''){case c.MATERIAL_LAMBERT:{i=m.webgl2?o.b:o.a;break}case c.MATERIAL_PHONG:{i=m.webgl2?s.b:s.a;break}default:i=m.webgl2?n.b:n.a;}g=m.get(),this.name='',this.type=c.MATERIAL_BASIC,this.uniforms={},this.hookVertexPre='',this.hookVertexMain='',this.hookVertexEnd='',this.hookFragmentPre='',this.hookFragmentMain='',this.hookFragmentEnd='',this.vertexShader=t,this.fragmentShader=i,this.drawType=c.DRAW_TRIANGLES,this.directionalLights=void 0,this.pointLights=void 0,this.culling=c.CULL_NONE,this.blending=!1,this.blendFunc=[g.SRC_ALPHA,g.ONE],Object.assign(this,e),this.program=new f.a}create(e,t){g=m.get(),this.vertexShader=this._processShader(this.vertexShader,'vertex',e),this.fragmentShader=this._processShader(this.fragmentShader,'fragment',e),this.program.link(this.vertexShader,this.fragmentShader,t),this.customUniforms=this.uniforms||{},m.webgl2&&this.program.setUniformBlockLocation('ProjectionView',p['default'].projectionView.buffer,c.UNIFORM_PROJECTION_VIEW_LOCATION),this.ambientLight&&(m.webgl2?this.program.setUniformBlockLocation('AmbientLight',this.ambientLight.uniformBuffer.buffer,c.UNIFORM_AMBIENT_LIGHT_LOCATION):this.ambientLight.get().forEach((e)=>{Object.keys(e.uniforms).forEach((t)=>{const i=e.uniforms[t];this.customUniforms[`uAmbientLight.${t}`]=i})})),this.directionalLights&&(m.webgl2?this.program.setUniformBlockLocation('DirectionalLights',this.directionalLights.uniformBuffer.buffer,c.UNIFORM_DIRECTIONAL_LIGHTS_LOCATION):this.directionalLights.get().forEach((e,t)=>{Object.keys(e.uniforms).forEach((i)=>{const r=e.uniforms[i];this.customUniforms[`uDirectionalLights[${t}].${i}`]=r})})),this.pointLights&&(m.webgl2?this.program.setUniformBlockLocation('PointLights',this.pointLights.uniformBuffer.buffer,c.UNIFORM_POINT_LIGHTS_LOCATION):this.pointLights.get().forEach((e,t)=>{Object.keys(e.uniforms).forEach((i)=>{const r=e.uniforms[i];this.customUniforms[`uPointLights[${t}].${i}`]=r})}));const n=[g.TEXTURE0,g.TEXTURE1,g.TEXTURE2,g.TEXTURE3,g.TEXTURE4,g.TEXTURE5];Object.keys(this.uniforms).forEach((e,t)=>{switch(this.uniforms[e].type){case't':case'tc':case't3d':{this.uniforms[e].textureIndex=t,this.uniforms[e].activeTexture=n[t];break}default:}}),this.uniforms.uCameraPosition===void 0&&this.pointLights&&(this.uniforms.uCameraPosition={type:'3f',value:[0,0,0]});const i=m.webgl2?{}:{uProjectionMatrix:{location:null,type:'4fv',value:r.b.create()}};this.uniforms=Object.assign({uDiffuse:{location:null,type:'3f',value:new a.a().v},uModelMatrix:{location:null,type:'4fv',value:r.b.create()},uModelViewMatrix:{location:null,type:'4fv',value:r.b.create()},uNormalMatrix:{location:null,type:'4fv',value:r.b.create()}},this.customUniforms,i),Object.keys(this.uniforms).forEach((e)=>{this.program.setUniformLocation(this.uniforms,e)})}_processShader(e,t,i){function r(e){a+=`#define ${e} \n`}g=m.get();let a='';const n=`precision ${u.capabilities.precision} float;`;return i.bufferUvs&&r('uv'),i.bufferColors&&r('vertexColors'),i.bufferNormals&&r('normals'),this.ambientLight&&r('ambientLight'),this.directionalLights&&r('directionalLights'),this.pointLights&&r('pointLights'),e=e.replace(/#HOOK_PRECISION/g,n),e=e.replace(/#HOOK_DEFINES/g,a),e=e.replace(/#HOOK_VERTEX_PRE/g,this.hookVertexPre),e=e.replace(/#HOOK_VERTEX_MAIN/g,this.hookVertexMain),e=e.replace(/#HOOK_VERTEX_END/g,this.hookVertexEnd),e=e.replace(/#HOOK_FRAGMENT_PRE/g,this.hookFragmentPre),e=e.replace(/#HOOK_FRAGMENT_MAIN/g,this.hookFragmentMain),e=e.replace(/#HOOK_FRAGMENT_END/g,this.hookFragmentEnd),this.pointLights&&(e=e.replace(/#HOOK_POINT_LIGHTS/g,this.pointLights.length+'')),this.directionalLights&&(e=e.replace(/#HOOK_DIRECTIONAL_LIGHTS/g,this.directionalLights.length+'')),Object(l.a)(e,t)}setUniforms(e,t,i,a){g=m.get(),Object.keys(this.customUniforms).forEach((e)=>{const t=this.uniforms[e];switch(t.type){case't':{g.uniform1i(t.location,t.textureIndex),g.activeTexture(t.activeTexture),g.bindTexture(g.TEXTURE_2D,t.value);break}case'tc':{g.uniform1i(t.location,t.textureIndex),g.activeTexture(t.activeTexture),g.bindTexture(g.TEXTURE_CUBE_MAP,t.value);break}case't3d':{g instanceof WebGL2RenderingContext&&(g.uniform1i(t.location,t.textureIndex),g.activeTexture(t.activeTexture),g.bindTexture(g.TEXTURE_3D,t.value));break}case'i':{g.uniform1i(t.location,t.value);break}case'f':{g.uniform1f(t.location,t.value);break}case'2f':{g.uniform2f(t.location,t.value[0],t.value[1]);break}case'3f':{g.uniform3f(t.location,t.value[0],t.value[1],t.value[2]);break}case'4f':{g.uniform4f(t.location,t.value[0],t.value[1],t.value[2],t.value[3]);break}case'1iv':{g.uniform1iv(t.location,t.value);break}case'2iv':{g.uniform2iv(t.location,t.value);break}case'1fv':{g.uniform1fv(t.location,t.value);break}case'2fv':{g.uniform2fv(t.location,t.value);break}case'3fv':{g.uniform3fv(t.location,t.value);break}case'4fv':{g.uniform4fv(t.location,t.value);break}case'Matrix3fv':{g.uniformMatrix3fv(t.location,!1,t.value);break}case'Matrix4fv':{g.uniformMatrix4fv(t.location,!1,t.value);break}default:}}),m.webgl2||g.uniformMatrix4fv(this.uniforms.uProjectionMatrix.location,!1,e),g.uniformMatrix4fv(this.uniforms.uModelViewMatrix.location,!1,t),g.uniformMatrix4fv(this.uniforms.uModelMatrix.location,!1,i),r.b.identity(b),r.b.invert(b,i),r.a.identity(x),r.a.fromMat4(x,b),r.a.transpose(x,x),g.uniformMatrix3fv(this.uniforms.uNormalMatrix.location,!1,x),g.uniform3f(this.uniforms.uDiffuse.location,this.uniforms.uDiffuse.value[0],this.uniforms.uDiffuse.value[1],this.uniforms.uDiffuse.value[2]),a&&this.uniforms.uCameraPosition&&g.uniform3f(this.uniforms.uCameraPosition.location,a.position.v[0],a.position.v[1],a.position.v[2])}dispose(){Object.keys(this.customUniforms).forEach((e)=>{const t=this.uniforms[e];switch(t.type){case't':case'tc':{g.deleteTexture(t.value);break}default:}}),this.program.dispose()}}},function(e,t){'use strict';t.a=`
	uniform ProjectionView {
		mat4 projectionMatrix;
	} uProjectionView;
`},function(e,t,i){'use strict';var r=i(1);class a{constructor(e=0,t=0){return this.v=r.d.create(),this.set(e,t),this}set x(e){this.v[0]=e}get x(){return this.v[0]}set y(e){this.v[1]=e}get y(){return this.v[1]}set(e,t){return r.d.set(this.v,e,t),this}clone(){return new a(this.v[0],this.v[1])}copy(e){return r.d.copy(this.v,e.v),this}add(e){return r.d.add(this.v,this.v,e.v),this}subtract(e){return r.d.subtract(this.v,this.v,e.v),this}subtractVectors(e,t){const i=r.d.create();return r.d.subtract(i,e.v,t.v),i}scale(e){return r.d.scale(this.v,this.v,e),this}distance(e){return r.d.distance(this.v,e.v)}length(){return r.d.length(this.v)}negate(){return r.d.negate(this.v,this.v),this}normalize(){return r.d.normalize(this.v,this.v),this}lerp(e,t){return r.d.lerp(this.v,this.v,e.v,t),this}equals(e){return r.d.equals(this.v,e.v)}multiply(e){return this.v[0]*=e.v[0],this.v[1]*=e.v[1],this}fromArray(e){return r.d.copy(this.v,e)}}t.a=a},function(e,t,i){'use strict';var a=i(1);class r{constructor(e=16777215){return this.v=a.e.create(),this.convert(e),this}set r(e){this.v[0]=e}get r(){return this.v[0]}set g(e){this.v[1]=e}get g(){return this.v[1]}set b(e){this.v[2]=e}get b(){return this.v[2]}set(e,t,i){return a.e.set(this.v,e,t,i),this}copy(e){return a.e.copy(this.v,a.e.fromValues(e[0],e[1],e[2])),this}convert(e){let t;return'number'==typeof e&&(t=this.hexIntToRgb(e)),'string'==typeof e&&(t=this.hexStringToRgb(e)),a.e.copy(this.v,this.normalize(t)),this}normalize(e){return a.e.fromValues(e[0]/255,e[1]/255,e[2]/255)}fromArray(e){this.set(e[0],e[1],e[2])}componentToHex(e){const t=e.toString(16);return 1===t.length?`0${t}`:t}rgbToHex(e,t,i){const r=this.componentToHex(e),a=this.componentToHex(t),n=this.componentToHex(i);return`#${r}${a}${n}`}hexIntToRgb(e){return a.e.fromValues(e>>16,255&e>>8,255&e)}hexStringToRgb(e){const t=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);return t?a.e.fromValues(parseInt(t[1],16),parseInt(t[2],16),parseInt(t[3],16)):null}}t.a=r},function(e,t){'use strict';const i=(()=>{return window.console&&console.log?Function.prototype.bind.call(console.log,console):()=>{}})();t.a=i;const r=(()=>{return window.console&&console.clear?Function.prototype.bind.call(console.clear,console):()=>{}})(),a=(()=>{return window.console&&console.debug?Function.prototype.bind.call(console.debug,console):()=>{}})(),n=(()=>{return window.console&&console.info?Function.prototype.bind.call(console.info,console):()=>{}})(),o=(()=>{return window.console&&console.warn?Function.prototype.bind.call(console.warn,console):()=>{}})();t.b=o;(()=>{return window.console&&console.error?Function.prototype.bind.call(console.error,console):()=>{}})()},function(e,t){'use strict';t.a=class{on(e,t){this.validate(t),this.init(e).push(t)}off(e,t){const i=this.init(e);i.splice(i.indexOf(t),1)}once(e,t){this.validate(t);const i=()=>{this.off(e,i),t.apply(this,arguments)};this.on(e,i)}emit(e,...t){const r=this.init(e).slice(0);for(const a in r)r[a].apply(this,[].slice.call(arguments,1))}validate(e){if(!(e&&e instanceof Function))throw new Error(e+' is not a Function')}init(e){const t=this.listeners||(this.listeners=[]);return t[e]||(t[e]=[])}}},function(e,t,i){'use strict';Object.defineProperty(t,'__esModule',{value:!0}),t.setup=function(){const e=new Float32Array(r.b.create());n.projectionView=new a.a(e)},t.updateProjectionView=function(e,t){e.bindBufferBase(e.UNIFORM_BUFFER,0,n.projectionView.buffer),e.bindBuffer(e.UNIFORM_BUFFER,n.projectionView.buffer);const i=[...t];n.projectionView.data.set(i,0),e.bufferSubData(e.UNIFORM_BUFFER,0,n.projectionView.data),e.bindBuffer(e.UNIFORM_BUFFER,null)};var r=i(1),a=i(19);const n={};t['default']=n},function(e,t,i){'use strict';var r=i(1),a=i(2);t.a=class{constructor(e=new a.a,t=0){this.center=e,this.radius=t}copy(e){this.center.copy(e.center),this.radius=e.radius}applyMatrix(e){r.e.transformMat4(this.center.v,this.center.v,e);const t=r.b.getScaling(r.e.create(),e);this.radius*=u(t[0],t[1],t[2])}}},function(e,t,i){'use strict';var r=i(1),a=i(3),n=i(2);t.a=class{constructor(e){this.projectionMatrix=r.b.create(),this.worldInverseMatrix=r.b.create(),this.isCamera=!0,this.isPespectiveCamera=!1,this.isOrthographicCamera=!1,this.near=0.1,this.far=100,this.fov=70,this.aspect=a.RENDERER_DEFAULT_RATIO,this.position=new n.a,this.target=new n.a,this.up=new n.a(0,1,0),Object.assign(this,e)}lookAt(e=0,t=0,i=0){this.target.set(e,t,i)}updateMatrixWorld(){r.b.identity(this.worldInverseMatrix),r.b.lookAt(this.worldInverseMatrix,this.position.v,this.target.v,this.up.v)}updateProjectionMatrix(){}}},function(e,t,i){'use strict';var r=i(0);t.a=class{constructor(e){this.data=e,this.buffer=Object(r.createUniformBuffer)(e)}setValues(e,t=0){this.data.set(e,t)}}},function(e,t,i){'use strict';Object.defineProperty(t,'__esModule',{value:!0}),i.d(t,'ambientLightEs300',function(){return r}),i.d(t,'ambientLightEs100',function(){return a});const r=`
	uniform AmbientLight {
		vec4 color;
		vec4 intensity;
	} uAmbientLight;
`,a=`
	struct AmbientLight {
		vec3 color;
		float intensity;
	};
	uniform AmbientLight uAmbientLight;
`},function(e,t,i){'use strict';Object.defineProperty(t,'__esModule',{value:!0}),i.d(t,'directionalLightsEs300',function(){return r}),i.d(t,'directionalLightsEs100',function(){return a});const r=`
	struct DirectionalLight {
		vec4 position;
		vec4 color;
		vec4 intensity;
	};
	uniform DirectionalLights {
		DirectionalLight uDirectionalLights[#HOOK_DIRECTIONAL_LIGHTS];
	};
`,a=`
	struct DirectionalLight {
		vec3 position;
		vec3 color;
		float intensity;
	};
	uniform DirectionalLight uDirectionalLights[#HOOK_DIRECTIONAL_LIGHTS];
`},function(e,t,i){'use strict';Object.defineProperty(t,'__esModule',{value:!0}),i.d(t,'lambertEs300',function(){return r}),i.d(t,'lambertEs100',function(){return a});const r=`
	vec3 CalculateDirectionalLight(DirectionalLight light, vec3 normal) {
		vec3 lightDirection = normalize(light.position.xyz);
		// diffuse shading
		float diff = max(dot(lightDirection, normal), 0.0);

		vec3 ambientColor = vec3(0.5);
		float ambientIntensity = 0.5;

		#ifdef ambientLight
		ambientColor = uAmbientLight.color.rgb;
		ambientIntensity = uAmbientLight.intensity.x;
		#endif

		// combine results
		vec3 ambient = (ambientColor * ambientIntensity) * vDiffuse;
		vec3 diffuse = light.color.rgb * diff * vDiffuse;
		return (ambient + diffuse * light.intensity.x);
	}
`,a=`
	vec3 CalculateDirectionalLight(DirectionalLight light, vec3 normal) {
		vec3 lightDirection = normalize(light.position);
		// diffuse shading
		float diff = max(dot(lightDirection, normal), 0.0);

			vec3 ambientColor = vec3(0.5);
			float ambientIntensity = 0.5;

			#ifdef ambientLight
			ambientColor = uAmbientLight.color;
			ambientIntensity = uAmbientLight.intensity;
			#endif

			// combine results
		vec3 ambient = (ambientColor * ambientIntensity) * vDiffuse;
			vec3 diffuse = light.color * diff * vDiffuse;
		return (ambient + diffuse * light.intensity);
	}
`},function(e,t,i){'use strict';t.a=function(e){return new Promise((t,i)=>{const r=new XMLHttpRequest;r.responseType='arraybuffer',r.onreadystatechange=()=>{if(4===r.readyState)if(4===r.readyState&&200===r.status){const e=a()(r.response),i=new n.a(e.shape[0],e.shape[1],e.data);t(i)}else i(r.status)},r.open('GET',e,!0),r.send()})};var r=i(67),a=i.n(r),n=i(24)},function(e,t){'use strict';t.a=class{constructor(e,t,i){this.width=e,this.height=t,this.data=i}}},function(e,t){'use strict';t.a=function(e){return new Promise((t,i)=>{const r=new Image;r.onload=()=>{t(r)},r.onerror=()=>{i(`Failed to load ${e}`)},r.src=e})}},function(e,t){'use strict';t.a=function(e=1,t=1){const i=document.createElement('canvas'),r=i.getContext('2d');return i.width=e,i.height=t,{canvas:i,ctx:r}}},function(e,t){'use strict';t.a=class{update(){}setValues(e,t=0){this.data.set(e,t)}}},function(e,t){'use strict';t.a=function(e,t){return new Promise((i,r)=>{const a=new XMLHttpRequest;a.responseType=t||'',a.onreadystatechange=()=>{4!==a.readyState||(4===a.readyState&&200===a.status?i(a.response,a.status):r(a.status))},a.open('GET',e,!0),a.send()})}},function(e,t,i){'use strict';function r(e,t,i){let r=t[0],a=t[1],n=t[2],o=t[3],s=t[4],d=t[5],l=t[6],u=t[7],c=t[8],m=i[0],f=i[1],p=i[2],g=i[3],x=i[4],b=i[5],h=i[6],E=i[7],v=i[8];return e[0]=m*r+f*o+p*l,e[1]=m*a+f*s+p*u,e[2]=m*n+f*d+p*c,e[3]=g*r+x*o+b*l,e[4]=g*a+x*s+b*u,e[5]=g*n+x*d+b*c,e[6]=h*r+E*o+v*l,e[7]=h*a+E*s+v*u,e[8]=h*n+E*d+v*c,e}function a(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e[3]=t[3]-i[3],e[4]=t[4]-i[4],e[5]=t[5]-i[5],e[6]=t[6]-i[6],e[7]=t[7]-i[7],e[8]=t[8]-i[8],e}Object.defineProperty(t,'__esModule',{value:!0}),t.create=function(){let e=new s.a(9);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},t.fromMat4=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[4],e[4]=t[5],e[5]=t[6],e[6]=t[8],e[7]=t[9],e[8]=t[10],e},t.clone=function(e){let t=new s.a(9);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t},t.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},t.fromValues=function(e,t,i,r,a,n,o,d,l){let u=new s.a(9);return u[0]=e,u[1]=t,u[2]=i,u[3]=r,u[4]=a,u[5]=n,u[6]=o,u[7]=d,u[8]=l,u},t.set=function(e,t,i,r,a,n,o,s,d,l){return e[0]=t,e[1]=i,e[2]=r,e[3]=a,e[4]=n,e[5]=o,e[6]=s,e[7]=d,e[8]=l,e},t.identity=function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},t.transpose=function(e,t){if(e===t){let i=t[1],r=t[2],a=t[5];e[1]=t[3],e[2]=t[6],e[3]=i,e[5]=t[7],e[6]=r,e[7]=a}else e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8];return e},t.invert=function(e,t){let i=t[0],r=t[1],a=t[2],n=t[3],o=t[4],s=t[5],d=t[6],l=t[7],u=t[8],c=u*o-s*l,m=-u*n+s*d,f=l*n-o*d,p=i*c+r*m+a*f;return p?(p=1/p,e[0]=c*p,e[1]=(-u*r+a*l)*p,e[2]=(s*r-a*o)*p,e[3]=m*p,e[4]=(u*i-a*d)*p,e[5]=(-s*i+a*n)*p,e[6]=f*p,e[7]=(-l*i+r*d)*p,e[8]=(o*i-r*n)*p,e):null},t.adjoint=function(e,t){let i=t[0],r=t[1],a=t[2],n=t[3],o=t[4],s=t[5],d=t[6],l=t[7],u=t[8];return e[0]=o*u-s*l,e[1]=a*l-r*u,e[2]=r*s-a*o,e[3]=s*d-n*u,e[4]=i*u-a*d,e[5]=a*n-i*s,e[6]=n*l-o*d,e[7]=r*d-i*l,e[8]=i*o-r*n,e},t.determinant=function(e){let t=e[0],i=e[1],r=e[2],a=e[3],n=e[4],o=e[5],s=e[6],d=e[7],l=e[8];return t*(l*n-o*d)+i*(-l*a+o*s)+r*(d*a-n*s)},t.multiply=r,t.translate=function(e,t,i){let r=t[0],a=t[1],n=t[2],o=t[3],s=t[4],d=t[5],l=t[6],u=t[7],c=t[8],m=i[0],f=i[1];return e[0]=r,e[1]=a,e[2]=n,e[3]=o,e[4]=s,e[5]=d,e[6]=m*r+f*o+l,e[7]=m*a+f*s+u,e[8]=m*n+f*d+c,e},t.rotate=function(e,t,i){let r=t[0],a=t[1],n=t[2],o=t[3],u=t[4],m=t[5],f=t[6],p=t[7],g=t[8],x=l(i),s=d(i);return e[0]=s*r+x*o,e[1]=s*a+x*u,e[2]=s*n+x*m,e[3]=s*o-x*r,e[4]=s*u-x*a,e[5]=s*m-x*n,e[6]=f,e[7]=p,e[8]=g,e},t.scale=function(e,t,i){let r=i[0],a=i[1];return e[0]=r*t[0],e[1]=r*t[1],e[2]=r*t[2],e[3]=a*t[3],e[4]=a*t[4],e[5]=a*t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e},t.fromTranslation=function(e,t){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=1,e[5]=0,e[6]=t[0],e[7]=t[1],e[8]=1,e},t.fromRotation=function(e,t){let i=l(t),r=d(t);return e[0]=r,e[1]=i,e[2]=0,e[3]=-i,e[4]=r,e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},t.fromScaling=function(e,t){return e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=t[1],e[5]=0,e[6]=0,e[7]=0,e[8]=1,e},t.fromMat2d=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=0,e[3]=t[2],e[4]=t[3],e[5]=0,e[6]=t[4],e[7]=t[5],e[8]=1,e},t.fromQuat=function(e,t){let i=t[0],r=t[1],a=t[2],n=t[3],o=i+i,s=r+r,d=a+a,l=i*o,u=r*o,c=r*s,m=a*o,f=a*s,p=a*d,g=n*o,x=n*s,b=n*d;return e[0]=1-c-p,e[3]=u-b,e[6]=m+x,e[1]=u+b,e[4]=1-l-p,e[7]=f-g,e[2]=m-x,e[5]=f+g,e[8]=1-l-c,e},t.normalFromMat4=function(e,t){let i=t[0],r=t[1],a=t[2],n=t[3],o=t[4],s=t[5],d=t[6],l=t[7],u=t[8],c=t[9],m=t[10],f=t[11],p=t[12],g=t[13],x=t[14],b=t[15],h=i*s-r*o,E=i*d-a*o,v=i*l-n*o,_=r*d-a*s,y=r*l-n*s,T=a*l-n*d,R=u*g-c*p,A=u*x-m*p,L=u*b-f*p,I=c*x-m*g,M=c*b-f*g,U=m*b-f*x,w=h*U-E*M+v*I+_*L-y*A+T*R;return w?(w=1/w,e[0]=(s*U-d*M+l*I)*w,e[1]=(d*L-o*U-l*A)*w,e[2]=(o*M-s*L+l*R)*w,e[3]=(a*M-r*U-n*I)*w,e[4]=(i*U-a*L+n*A)*w,e[5]=(r*L-i*M-n*R)*w,e[6]=(g*T-x*y+b*_)*w,e[7]=(x*v-p*T-b*E)*w,e[8]=(p*y-g*v+b*h)*w,e):null},t.projection=function(e,t,i){return e[0]=2/t,e[1]=0,e[2]=0,e[3]=0,e[4]=-2/i,e[5]=0,e[6]=-1,e[7]=1,e[8]=1,e},t.str=function(e){return'mat3('+e[0]+', '+e[1]+', '+e[2]+', '+e[3]+', '+e[4]+', '+e[5]+', '+e[6]+', '+e[7]+', '+e[8]+')'},t.frob=function(e){return n(o(e[0],2)+o(e[1],2)+o(e[2],2)+o(e[3],2)+o(e[4],2)+o(e[5],2)+o(e[6],2)+o(e[7],2)+o(e[8],2))},t.add=function(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e[3]=t[3]+i[3],e[4]=t[4]+i[4],e[5]=t[5]+i[5],e[6]=t[6]+i[6],e[7]=t[7]+i[7],e[8]=t[8]+i[8],e},t.subtract=a,t.multiplyScalar=function(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[7]=t[7]*i,e[8]=t[8]*i,e},t.multiplyScalarAndAdd=function(e,t,i,r){return e[0]=t[0]+i[0]*r,e[1]=t[1]+i[1]*r,e[2]=t[2]+i[2]*r,e[3]=t[3]+i[3]*r,e[4]=t[4]+i[4]*r,e[5]=t[5]+i[5]*r,e[6]=t[6]+i[6]*r,e[7]=t[7]+i[7]*r,e[8]=t[8]+i[8]*r,e},t.exactEquals=function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]},t.equals=function(e,t){let i=e[0],r=e[1],a=e[2],n=e[3],o=e[4],d=e[5],l=e[6],c=e[7],f=e[8],p=t[0],g=t[1],x=t[2],b=t[3],h=t[4],E=t[5],v=t[6],_=t[7],y=t[8];return m(i-p)<=s.b*u(1,m(i),m(p))&&m(r-g)<=s.b*u(1,m(r),m(g))&&m(a-x)<=s.b*u(1,m(a),m(x))&&m(n-b)<=s.b*u(1,m(n),m(b))&&m(o-h)<=s.b*u(1,m(o),m(h))&&m(d-E)<=s.b*u(1,m(d),m(E))&&m(l-v)<=s.b*u(1,m(l),m(v))&&m(c-_)<=s.b*u(1,m(c),m(_))&&m(f-y)<=s.b*u(1,m(f),m(y))};var s=i(6);t.mul=r;t.sub=a},function(e,t,i){'use strict';function r(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function a(e,t,i){let r=t[0],a=t[1],n=t[2],o=t[3],s=t[4],d=t[5],l=t[6],u=t[7],c=t[8],m=t[9],f=t[10],p=t[11],g=t[12],x=t[13],b=t[14],h=t[15],E=i[0],v=i[1],_=i[2],y=i[3];return e[0]=E*r+v*s+_*c+y*g,e[1]=E*a+v*d+_*m+y*x,e[2]=E*n+v*l+_*f+y*b,e[3]=E*o+v*u+_*p+y*h,E=i[4],v=i[5],_=i[6],y=i[7],e[4]=E*r+v*s+_*c+y*g,e[5]=E*a+v*d+_*m+y*x,e[6]=E*n+v*l+_*f+y*b,e[7]=E*o+v*u+_*p+y*h,E=i[8],v=i[9],_=i[10],y=i[11],e[8]=E*r+v*s+_*c+y*g,e[9]=E*a+v*d+_*m+y*x,e[10]=E*n+v*l+_*f+y*b,e[11]=E*o+v*u+_*p+y*h,E=i[12],v=i[13],_=i[14],y=i[15],e[12]=E*r+v*s+_*c+y*g,e[13]=E*a+v*d+_*m+y*x,e[14]=E*n+v*l+_*f+y*b,e[15]=E*o+v*u+_*p+y*h,e}function s(e,t,i){let r=t[0],a=t[1],n=t[2],o=t[3],s=r+r,d=a+a,l=n+n,u=r*s,c=r*d,m=r*l,f=a*d,p=a*l,g=n*l,x=o*s,b=o*d,h=o*l;return e[0]=1-(f+g),e[1]=c+h,e[2]=m-b,e[3]=0,e[4]=c-h,e[5]=1-(u+g),e[6]=p+x,e[7]=0,e[8]=m+b,e[9]=p-x,e[10]=1-(u+f),e[11]=0,e[12]=i[0],e[13]=i[1],e[14]=i[2],e[15]=1,e}function c(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e[3]=t[3]-i[3],e[4]=t[4]-i[4],e[5]=t[5]-i[5],e[6]=t[6]-i[6],e[7]=t[7]-i[7],e[8]=t[8]-i[8],e[9]=t[9]-i[9],e[10]=t[10]-i[10],e[11]=t[11]-i[11],e[12]=t[12]-i[12],e[13]=t[13]-i[13],e[14]=t[14]-i[14],e[15]=t[15]-i[15],e}var p=Math.tan;Object.defineProperty(t,'__esModule',{value:!0}),t.create=function(){let e=new g.a(16);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},t.clone=function(e){let t=new g.a(16);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t[4]=e[4],t[5]=e[5],t[6]=e[6],t[7]=e[7],t[8]=e[8],t[9]=e[9],t[10]=e[10],t[11]=e[11],t[12]=e[12],t[13]=e[13],t[14]=e[14],t[15]=e[15],t},t.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},t.fromValues=function(e,t,i,r,a,n,o,s,d,l,u,c,m,f,p,x){let b=new g.a(16);return b[0]=e,b[1]=t,b[2]=i,b[3]=r,b[4]=a,b[5]=n,b[6]=o,b[7]=s,b[8]=d,b[9]=l,b[10]=u,b[11]=c,b[12]=m,b[13]=f,b[14]=p,b[15]=x,b},t.set=function(e,t,i,r,a,n,o,s,d,l,u,c,m,f,p,g,x){return e[0]=t,e[1]=i,e[2]=r,e[3]=a,e[4]=n,e[5]=o,e[6]=s,e[7]=d,e[8]=l,e[9]=u,e[10]=c,e[11]=m,e[12]=f,e[13]=p,e[14]=g,e[15]=x,e},t.identity=r,t.transpose=function(e,t){if(e===t){let i=t[1],r=t[2],a=t[3],n=t[6],o=t[7],s=t[11];e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=i,e[6]=t[9],e[7]=t[13],e[8]=r,e[9]=n,e[11]=t[14],e[12]=a,e[13]=o,e[14]=s}else e[0]=t[0],e[1]=t[4],e[2]=t[8],e[3]=t[12],e[4]=t[1],e[5]=t[5],e[6]=t[9],e[7]=t[13],e[8]=t[2],e[9]=t[6],e[10]=t[10],e[11]=t[14],e[12]=t[3],e[13]=t[7],e[14]=t[11],e[15]=t[15];return e},t.invert=function(e,t){let i=t[0],r=t[1],a=t[2],n=t[3],o=t[4],s=t[5],d=t[6],l=t[7],u=t[8],c=t[9],m=t[10],f=t[11],p=t[12],g=t[13],x=t[14],b=t[15],h=i*s-r*o,E=i*d-a*o,v=i*l-n*o,_=r*d-a*s,y=r*l-n*s,T=a*l-n*d,R=u*g-c*p,A=u*x-m*p,L=u*b-f*p,I=c*x-m*g,M=c*b-f*g,U=m*b-f*x,w=h*U-E*M+v*I+_*L-y*A+T*R;return w?(w=1/w,e[0]=(s*U-d*M+l*I)*w,e[1]=(a*M-r*U-n*I)*w,e[2]=(g*T-x*y+b*_)*w,e[3]=(m*y-c*T-f*_)*w,e[4]=(d*L-o*U-l*A)*w,e[5]=(i*U-a*L+n*A)*w,e[6]=(x*v-p*T-b*E)*w,e[7]=(u*T-m*v+f*E)*w,e[8]=(o*M-s*L+l*R)*w,e[9]=(r*L-i*M-n*R)*w,e[10]=(p*y-g*v+b*h)*w,e[11]=(c*v-u*y-f*h)*w,e[12]=(s*A-o*I-d*R)*w,e[13]=(i*I-r*A+a*R)*w,e[14]=(g*E-p*_-x*h)*w,e[15]=(u*_-c*E+m*h)*w,e):null},t.adjoint=function(e,t){let i=t[0],r=t[1],a=t[2],n=t[3],o=t[4],s=t[5],d=t[6],l=t[7],u=t[8],c=t[9],m=t[10],f=t[11],p=t[12],g=t[13],x=t[14],b=t[15];return e[0]=s*(m*b-f*x)-c*(d*b-l*x)+g*(d*f-l*m),e[1]=-(r*(m*b-f*x)-c*(a*b-n*x)+g*(a*f-n*m)),e[2]=r*(d*b-l*x)-s*(a*b-n*x)+g*(a*l-n*d),e[3]=-(r*(d*f-l*m)-s*(a*f-n*m)+c*(a*l-n*d)),e[4]=-(o*(m*b-f*x)-u*(d*b-l*x)+p*(d*f-l*m)),e[5]=i*(m*b-f*x)-u*(a*b-n*x)+p*(a*f-n*m),e[6]=-(i*(d*b-l*x)-o*(a*b-n*x)+p*(a*l-n*d)),e[7]=i*(d*f-l*m)-o*(a*f-n*m)+u*(a*l-n*d),e[8]=o*(c*b-f*g)-u*(s*b-l*g)+p*(s*f-l*c),e[9]=-(i*(c*b-f*g)-u*(r*b-n*g)+p*(r*f-n*c)),e[10]=i*(s*b-l*g)-o*(r*b-n*g)+p*(r*l-n*s),e[11]=-(i*(s*f-l*c)-o*(r*f-n*c)+u*(r*l-n*s)),e[12]=-(o*(c*x-m*g)-u*(s*x-d*g)+p*(s*m-d*c)),e[13]=i*(c*x-m*g)-u*(r*x-a*g)+p*(r*m-a*c),e[14]=-(i*(s*x-d*g)-o*(r*x-a*g)+p*(r*d-a*s)),e[15]=i*(s*m-d*c)-o*(r*m-a*c)+u*(r*d-a*s),e},t.determinant=function(e){let t=e[0],i=e[1],r=e[2],a=e[3],n=e[4],o=e[5],s=e[6],d=e[7],l=e[8],u=e[9],c=e[10],m=e[11],f=e[12],p=e[13],g=e[14],x=e[15];return(t*o-i*n)*(c*x-m*g)-(t*s-r*n)*(u*x-m*p)+(t*d-a*n)*(u*g-c*p)+(i*s-r*o)*(l*x-m*f)-(i*d-a*o)*(l*g-c*f)+(r*d-a*s)*(l*p-u*f)},t.multiply=a,t.translate=function(e,t,i){let r=i[0],a=i[1],n=i[2],o,s,d,l,u,c,m,f,p,g,x,b;return t===e?(e[12]=t[0]*r+t[4]*a+t[8]*n+t[12],e[13]=t[1]*r+t[5]*a+t[9]*n+t[13],e[14]=t[2]*r+t[6]*a+t[10]*n+t[14],e[15]=t[3]*r+t[7]*a+t[11]*n+t[15]):(o=t[0],s=t[1],d=t[2],l=t[3],u=t[4],c=t[5],m=t[6],f=t[7],p=t[8],g=t[9],x=t[10],b=t[11],e[0]=o,e[1]=s,e[2]=d,e[3]=l,e[4]=u,e[5]=c,e[6]=m,e[7]=f,e[8]=p,e[9]=g,e[10]=x,e[11]=b,e[12]=o*r+u*a+p*n+t[12],e[13]=s*r+c*a+g*n+t[13],e[14]=d*r+m*a+x*n+t[14],e[15]=l*r+f*a+b*n+t[15]),e},t.scale=function(e,t,i){let r=i[0],a=i[1],n=i[2];return e[0]=t[0]*r,e[1]=t[1]*r,e[2]=t[2]*r,e[3]=t[3]*r,e[4]=t[4]*a,e[5]=t[5]*a,e[6]=t[6]*a,e[7]=t[7]*a,e[8]=t[8]*n,e[9]=t[9]*n,e[10]=t[10]*n,e[11]=t[11]*n,e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15],e},t.rotate=function(e,i,r,a){let o=a[0],u=a[1],m=a[2],f=n(o*o+u*u+m*m),p,s,c,t,x,b,h,E,v,_,y,T,R,A,L,I,M,U,w,N,S,D,F,O;return f<g.b?null:(f=1/f,o*=f,u*=f,m*=f,p=l(r),s=d(r),c=1-s,t=i[0],x=i[1],b=i[2],h=i[3],E=i[4],v=i[5],_=i[6],y=i[7],T=i[8],R=i[9],A=i[10],L=i[11],I=o*o*c+s,M=u*o*c+m*p,U=m*o*c-u*p,w=o*u*c-m*p,N=u*u*c+s,S=m*u*c+o*p,D=o*m*c+u*p,F=u*m*c-o*p,O=m*m*c+s,e[0]=t*I+E*M+T*U,e[1]=x*I+v*M+R*U,e[2]=b*I+_*M+A*U,e[3]=h*I+y*M+L*U,e[4]=t*w+E*N+T*S,e[5]=x*w+v*N+R*S,e[6]=b*w+_*N+A*S,e[7]=h*w+y*N+L*S,e[8]=t*D+E*F+T*O,e[9]=x*D+v*F+R*O,e[10]=b*D+_*F+A*O,e[11]=h*D+y*F+L*O,i!==e&&(e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15]),e)},t.rotateX=function(e,t,i){let r=l(i),a=d(i),n=t[4],o=t[5],s=t[6],u=t[7],c=t[8],m=t[9],f=t[10],p=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=n*a+c*r,e[5]=o*a+m*r,e[6]=s*a+f*r,e[7]=u*a+p*r,e[8]=c*a-n*r,e[9]=m*a-o*r,e[10]=f*a-s*r,e[11]=p*a-u*r,e},t.rotateY=function(e,t,i){let r=l(i),a=d(i),n=t[0],o=t[1],s=t[2],u=t[3],c=t[8],m=t[9],f=t[10],p=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=n*a-c*r,e[1]=o*a-m*r,e[2]=s*a-f*r,e[3]=u*a-p*r,e[8]=n*r+c*a,e[9]=o*r+m*a,e[10]=s*r+f*a,e[11]=u*r+p*a,e},t.rotateZ=function(e,t,i){let r=l(i),a=d(i),n=t[0],o=t[1],s=t[2],u=t[3],c=t[4],m=t[5],f=t[6],p=t[7];return t!==e&&(e[8]=t[8],e[9]=t[9],e[10]=t[10],e[11]=t[11],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=n*a+c*r,e[1]=o*a+m*r,e[2]=s*a+f*r,e[3]=u*a+p*r,e[4]=c*a-n*r,e[5]=m*a-o*r,e[6]=f*a-s*r,e[7]=p*a-u*r,e},t.fromTranslation=function(e,t){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=t[0],e[13]=t[1],e[14]=t[2],e[15]=1,e},t.fromScaling=function(e,t){return e[0]=t[0],e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=t[1],e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=t[2],e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},t.fromRotation=function(e,i,r){let a=r[0],o=r[1],u=r[2],m=n(a*a+o*o+u*u),f,s,c;return m<g.b?null:(m=1/m,a*=m,o*=m,u*=m,f=l(i),s=d(i),c=1-s,e[0]=a*a*c+s,e[1]=o*a*c+u*f,e[2]=u*a*c-o*f,e[3]=0,e[4]=a*o*c-u*f,e[5]=o*o*c+s,e[6]=u*o*c+a*f,e[7]=0,e[8]=a*u*c+o*f,e[9]=o*u*c-a*f,e[10]=u*u*c+s,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e)},t.fromXRotation=function(e,t){let i=l(t),r=d(t);return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=r,e[6]=i,e[7]=0,e[8]=0,e[9]=-i,e[10]=r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},t.fromYRotation=function(e,t){let i=l(t),r=d(t);return e[0]=r,e[1]=0,e[2]=-i,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=i,e[9]=0,e[10]=r,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},t.fromZRotation=function(e,t){let i=l(t),r=d(t);return e[0]=r,e[1]=i,e[2]=0,e[3]=0,e[4]=-i,e[5]=r,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},t.fromRotationTranslation=s,t.fromQuat2=function(e,t){let i=new g.a(3),r=-t[0],a=-t[1],n=-t[2],o=t[3],d=t[4],l=t[5],u=t[6],c=t[7],m=r*r+a*a+n*n+o*o;return 0<m?(i[0]=2*(d*o+c*r+l*n-u*a)/m,i[1]=2*(l*o+c*a+u*r-d*n)/m,i[2]=2*(u*o+c*n+d*a-l*r)/m):(i[0]=2*(d*o+c*r+l*n-u*a),i[1]=2*(l*o+c*a+u*r-d*n),i[2]=2*(u*o+c*n+d*a-l*r)),s(e,t,i),e},t.getTranslation=function(e,t){return e[0]=t[12],e[1]=t[13],e[2]=t[14],e},t.getScaling=function(e,t){let i=t[0],r=t[1],a=t[2],o=t[4],s=t[5],d=t[6],l=t[8],u=t[9],c=t[10];return e[0]=n(i*i+r*r+a*a),e[1]=n(o*o+s*s+d*d),e[2]=n(l*l+u*u+c*c),e},t.getRotation=function(e,t){let i=t[0]+t[5]+t[10],r=0;return 0<i?(r=2*n(i+1),e[3]=0.25*r,e[0]=(t[6]-t[9])/r,e[1]=(t[8]-t[2])/r,e[2]=(t[1]-t[4])/r):t[0]>t[5]&&t[0]>t[10]?(r=2*n(1+t[0]-t[5]-t[10]),e[3]=(t[6]-t[9])/r,e[0]=0.25*r,e[1]=(t[1]+t[4])/r,e[2]=(t[8]+t[2])/r):t[5]>t[10]?(r=2*n(1+t[5]-t[0]-t[10]),e[3]=(t[8]-t[2])/r,e[0]=(t[1]+t[4])/r,e[1]=0.25*r,e[2]=(t[6]+t[9])/r):(r=2*n(1+t[10]-t[0]-t[5]),e[3]=(t[1]-t[4])/r,e[0]=(t[8]+t[2])/r,e[1]=(t[6]+t[9])/r,e[2]=0.25*r),e},t.fromRotationTranslationScale=function(e,t,i,r){let a=t[0],n=t[1],o=t[2],s=t[3],d=a+a,l=n+n,u=o+o,c=a*d,m=a*l,f=a*u,p=n*l,g=n*u,x=o*u,b=s*d,h=s*l,E=s*u,v=r[0],_=r[1],y=r[2];return e[0]=(1-(p+x))*v,e[1]=(m+E)*v,e[2]=(f-h)*v,e[3]=0,e[4]=(m-E)*_,e[5]=(1-(c+x))*_,e[6]=(g+b)*_,e[7]=0,e[8]=(f+h)*y,e[9]=(g-b)*y,e[10]=(1-(c+p))*y,e[11]=0,e[12]=i[0],e[13]=i[1],e[14]=i[2],e[15]=1,e},t.fromRotationTranslationScaleOrigin=function(e,t,i,r,a){let n=t[0],o=t[1],s=t[2],d=t[3],l=n+n,u=o+o,c=s+s,m=n*l,f=n*u,p=n*c,g=o*u,x=o*c,b=s*c,h=d*l,E=d*u,v=d*c,_=r[0],y=r[1],T=r[2],R=a[0],A=a[1],L=a[2],I=(1-(g+b))*_,M=(f+v)*_,U=(p-E)*_,w=(f-v)*y,N=(1-(m+b))*y,S=(x+h)*y,D=(p+E)*T,F=(x-h)*T,O=(1-(m+g))*T;return e[0]=I,e[1]=M,e[2]=U,e[3]=0,e[4]=w,e[5]=N,e[6]=S,e[7]=0,e[8]=D,e[9]=F,e[10]=O,e[11]=0,e[12]=i[0]+R-(I*R+w*A+D*L),e[13]=i[1]+A-(M*R+N*A+F*L),e[14]=i[2]+L-(U*R+S*A+O*L),e[15]=1,e},t.fromQuat=function(e,t){let i=t[0],r=t[1],a=t[2],n=t[3],o=i+i,s=r+r,d=a+a,l=i*o,u=r*o,c=r*s,m=a*o,f=a*s,p=a*d,g=n*o,x=n*s,b=n*d;return e[0]=1-c-p,e[1]=u+b,e[2]=m-x,e[3]=0,e[4]=u-b,e[5]=1-l-p,e[6]=f+g,e[7]=0,e[8]=m+x,e[9]=f-g,e[10]=1-l-c,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e},t.frustum=function(e,t,i,r,a,n,o){let s=1/(i-t),d=1/(a-r),l=1/(n-o);return e[0]=2*n*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=2*n*d,e[6]=0,e[7]=0,e[8]=(i+t)*s,e[9]=(a+r)*d,e[10]=(o+n)*l,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*(o*n)*l,e[15]=0,e},t.perspective=function(e,t,i,r,a){let n=1/p(t/2),o=1/(r-a);return e[0]=n/i,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=n,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=(a+r)*o,e[11]=-1,e[12]=0,e[13]=0,e[14]=2*a*r*o,e[15]=0,e},t.perspectiveFromFieldOfView=function(e,t,i,r){let a=p(t.upDegrees*f/180),n=p(t.downDegrees*f/180),o=p(t.leftDegrees*f/180),s=p(t.rightDegrees*f/180),d=2/(o+s),l=2/(a+n);return e[0]=d,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=l,e[6]=0,e[7]=0,e[8]=-(0.5*((o-s)*d)),e[9]=0.5*((a-n)*l),e[10]=r/(i-r),e[11]=-1,e[12]=0,e[13]=0,e[14]=r*i/(i-r),e[15]=0,e},t.ortho=function(e,t,i,r,a,n,o){let s=1/(t-i),d=1/(r-a),l=1/(n-o);return e[0]=-2*s,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=-2*d,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=2*l,e[11]=0,e[12]=(t+i)*s,e[13]=(a+r)*d,e[14]=(o+n)*l,e[15]=1,e},t.lookAt=function(e,t,i,a){let o=t[0],s=t[1],d=t[2],l=a[0],u=a[1],c=a[2],f=i[0],p=i[1],x=i[2],b,h,E,v,_,y,T,R,A,L;return m(o-f)<g.b&&m(s-p)<g.b&&m(d-x)<g.b?r(e):(T=o-f,R=s-p,A=d-x,L=1/n(T*T+R*R+A*A),T*=L,R*=L,A*=L,b=u*A-c*R,h=c*T-l*A,E=l*R-u*T,L=n(b*b+h*h+E*E),L?(L=1/L,b*=L,h*=L,E*=L):(b=0,h=0,E=0),v=R*E-A*h,_=A*b-T*E,y=T*h-R*b,L=n(v*v+_*_+y*y),L?(L=1/L,v*=L,_*=L,y*=L):(v=0,_=0,y=0),e[0]=b,e[1]=v,e[2]=T,e[3]=0,e[4]=h,e[5]=_,e[6]=R,e[7]=0,e[8]=E,e[9]=y,e[10]=A,e[11]=0,e[12]=-(b*o+h*s+E*d),e[13]=-(v*o+_*s+y*d),e[14]=-(T*o+R*s+A*d),e[15]=1,e)},t.targetTo=function(e,t,i,r){let a=t[0],o=t[1],s=t[2],d=r[0],l=r[1],u=r[2],c=a-i[0],m=o-i[1],f=s-i[2],p=c*c+m*m+f*f;0<p&&(p=1/n(p),c*=p,m*=p,f*=p);let g=l*f-u*m,x=u*c-d*f,b=d*m-l*c;return p=g*g+x*x+b*b,0<p&&(p=1/n(p),g*=p,x*=p,b*=p),e[0]=g,e[1]=x,e[2]=b,e[3]=0,e[4]=m*b-f*x,e[5]=f*g-c*b,e[6]=c*x-m*g,e[7]=0,e[8]=c,e[9]=m,e[10]=f,e[11]=0,e[12]=a,e[13]=o,e[14]=s,e[15]=1,e},t.str=function(e){return'mat4('+e[0]+', '+e[1]+', '+e[2]+', '+e[3]+', '+e[4]+', '+e[5]+', '+e[6]+', '+e[7]+', '+e[8]+', '+e[9]+', '+e[10]+', '+e[11]+', '+e[12]+', '+e[13]+', '+e[14]+', '+e[15]+')'},t.frob=function(e){return n(o(e[0],2)+o(e[1],2)+o(e[2],2)+o(e[3],2)+o(e[4],2)+o(e[5],2)+o(e[6],2)+o(e[7],2)+o(e[8],2)+o(e[9],2)+o(e[10],2)+o(e[11],2)+o(e[12],2)+o(e[13],2)+o(e[14],2)+o(e[15],2))},t.add=function(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e[3]=t[3]+i[3],e[4]=t[4]+i[4],e[5]=t[5]+i[5],e[6]=t[6]+i[6],e[7]=t[7]+i[7],e[8]=t[8]+i[8],e[9]=t[9]+i[9],e[10]=t[10]+i[10],e[11]=t[11]+i[11],e[12]=t[12]+i[12],e[13]=t[13]+i[13],e[14]=t[14]+i[14],e[15]=t[15]+i[15],e},t.subtract=c,t.multiplyScalar=function(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e[4]=t[4]*i,e[5]=t[5]*i,e[6]=t[6]*i,e[7]=t[7]*i,e[8]=t[8]*i,e[9]=t[9]*i,e[10]=t[10]*i,e[11]=t[11]*i,e[12]=t[12]*i,e[13]=t[13]*i,e[14]=t[14]*i,e[15]=t[15]*i,e},t.multiplyScalarAndAdd=function(e,t,i,r){return e[0]=t[0]+i[0]*r,e[1]=t[1]+i[1]*r,e[2]=t[2]+i[2]*r,e[3]=t[3]+i[3]*r,e[4]=t[4]+i[4]*r,e[5]=t[5]+i[5]*r,e[6]=t[6]+i[6]*r,e[7]=t[7]+i[7]*r,e[8]=t[8]+i[8]*r,e[9]=t[9]+i[9]*r,e[10]=t[10]+i[10]*r,e[11]=t[11]+i[11]*r,e[12]=t[12]+i[12]*r,e[13]=t[13]+i[13]*r,e[14]=t[14]+i[14]*r,e[15]=t[15]+i[15]*r,e},t.exactEquals=function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]&&e[4]===t[4]&&e[5]===t[5]&&e[6]===t[6]&&e[7]===t[7]&&e[8]===t[8]&&e[9]===t[9]&&e[10]===t[10]&&e[11]===t[11]&&e[12]===t[12]&&e[13]===t[13]&&e[14]===t[14]&&e[15]===t[15]},t.equals=function(e,t){let i=e[0],r=e[1],a=e[2],n=e[3],o=e[4],s=e[5],d=e[6],l=e[7],c=e[8],f=e[9],p=e[10],x=e[11],b=e[12],h=e[13],E=e[14],v=e[15],_=t[0],y=t[1],T=t[2],R=t[3],A=t[4],L=t[5],I=t[6],M=t[7],U=t[8],w=t[9],N=t[10],S=t[11],D=t[12],F=t[13],O=t[14],P=t[15];return m(i-_)<=g.b*u(1,m(i),m(_))&&m(r-y)<=g.b*u(1,m(r),m(y))&&m(a-T)<=g.b*u(1,m(a),m(T))&&m(n-R)<=g.b*u(1,m(n),m(R))&&m(o-A)<=g.b*u(1,m(o),m(A))&&m(s-L)<=g.b*u(1,m(s),m(L))&&m(d-I)<=g.b*u(1,m(d),m(I))&&m(l-M)<=g.b*u(1,m(l),m(M))&&m(c-U)<=g.b*u(1,m(c),m(U))&&m(f-w)<=g.b*u(1,m(f),m(w))&&m(p-N)<=g.b*u(1,m(p),m(N))&&m(x-S)<=g.b*u(1,m(x),m(S))&&m(b-D)<=g.b*u(1,m(b),m(D))&&m(h-F)<=g.b*u(1,m(h),m(F))&&m(E-O)<=g.b*u(1,m(E),m(O))&&m(v-P)<=g.b*u(1,m(v),m(P))};var g=i(6);t.mul=a;t.sub=c},function(e,t,i){'use strict';function r(){let e=new p.a(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e}function o(e,t,i){i*=0.5;let r=l(i);return e[0]=r*t[0],e[1]=r*t[1],e[2]=r*t[2],e[3]=d(i),e}function a(e,t,i){let r=t[0],a=t[1],n=t[2],o=t[3],s=i[0],d=i[1],l=i[2],u=i[3];return e[0]=r*u+o*s+a*l-n*d,e[1]=a*u+o*d+n*s-r*l,e[2]=n*u+o*l+r*d-a*s,e[3]=o*u-r*s-a*d-n*l,e}function s(e,i,r,a){let t=i[0],n=i[1],o=i[2],s=i[3],d=r[0],u=r[1],m=r[2],f=r[3],p,g,x,b,h;return g=t*d+n*u+o*m+s*f,0>g&&(g=-g,d=-d,u=-u,m=-m,f=-f),1e-6<1-g?(p=c(g),x=l(p),b=l((1-a)*p)/x,h=l(a*p)/x):(b=1-a,h=a),e[0]=b*t+h*d,e[1]=b*n+h*u,e[2]=b*o+h*m,e[3]=b*s+h*f,e}function u(e,t){let i=t[0]+t[4]+t[8],r;if(0<i)r=n(i+1),e[3]=0.5*r,r=0.5/r,e[0]=(t[5]-t[7])*r,e[1]=(t[6]-t[2])*r,e[2]=(t[1]-t[3])*r;else{let a=0;t[4]>t[0]&&(a=1),t[8]>t[3*a+a]&&(a=2);let i=(a+1)%3,o=(a+2)%3;r=n(t[3*a+a]-t[3*i+i]-t[3*o+o]+1),e[a]=0.5*r,r=0.5/r,e[3]=(t[3*i+o]-t[3*o+i])*r,e[i]=(t[3*i+a]+t[3*a+i])*r,e[o]=(t[3*o+a]+t[3*a+o])*r}return e}Object.defineProperty(t,'__esModule',{value:!0}),t.create=r,t.identity=function(e){return e[0]=0,e[1]=0,e[2]=0,e[3]=1,e},t.setAxisAngle=o,t.getAxisAngle=function(e,t){let i=2*c(t[3]),r=l(i/2);return 0==r?(e[0]=1,e[1]=0,e[2]=0):(e[0]=t[0]/r,e[1]=t[1]/r,e[2]=t[2]/r),i},t.multiply=a,t.rotateX=function(e,t,i){i*=0.5;let r=t[0],a=t[1],n=t[2],o=t[3],s=l(i),u=d(i);return e[0]=r*u+o*s,e[1]=a*u+n*s,e[2]=n*u-a*s,e[3]=o*u-r*s,e},t.rotateY=function(e,t,i){i*=0.5;let r=t[0],a=t[1],n=t[2],o=t[3],s=l(i),u=d(i);return e[0]=r*u-n*s,e[1]=a*u+o*s,e[2]=n*u+r*s,e[3]=o*u-a*s,e},t.rotateZ=function(e,t,i){i*=0.5;let r=t[0],a=t[1],n=t[2],o=t[3],s=l(i),u=d(i);return e[0]=r*u+a*s,e[1]=a*u-r*s,e[2]=n*u+o*s,e[3]=o*u-n*s,e},t.calculateW=function(e,t){let i=t[0],r=t[1],a=t[2];return e[0]=i,e[1]=r,e[2]=a,e[3]=n(m(1-i*i-r*r-a*a)),e},t.slerp=s,t.invert=function(e,t){let i=t[0],r=t[1],a=t[2],n=t[3],o=i*i+r*r+a*a+n*n,s=o?1/o:0;return e[0]=-i*s,e[1]=-r*s,e[2]=-a*s,e[3]=n*s,e},t.conjugate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e[3]=t[3],e},t.fromMat3=u,t.fromEuler=function(e,t,i,r){let a=0.5*f/180;t*=a,i*=a,r*=a;let n=l(t),o=d(t),s=l(i),u=d(i),c=l(r),m=d(r);return e[0]=n*u*m-o*s*c,e[1]=o*s*m+n*u*c,e[2]=o*u*c-n*s*m,e[3]=o*u*m+n*s*c,e},t.str=function(e){return'quat('+e[0]+', '+e[1]+', '+e[2]+', '+e[3]+')'};var p=i(6),g=i(29),x=i(32),b=i(33);const h=b.b;t.clone=h;const E=b.g;t.fromValues=E;const v=b.c;t.copy=v;const _=b.l;t.set=_;const y=b.a;t.add=y;t.mul=a;const T=b.k;t.scale=T;const R=b.d;t.dot=R;const A=b.i;t.lerp=A;const L=b.h;t.length=L;t.len=L;const I=b.m;t.squaredLength=I;t.sqrLen=I;const M=b.j;t.normalize=M;const U=b.f;t.exactEquals=U;const w=b.e;t.equals=w;const N=function(){let e=x.create(),t=x.fromValues(1,0,0),i=x.fromValues(0,1,0);return function(r,n,a){let s=x.dot(n,a);return-0.999999>s?(x.cross(e,t,n),1e-6>x.len(e)&&x.cross(e,i,n),x.normalize(e,e),o(r,e,Math.PI),r):0.999999<s?(r[0]=0,r[1]=0,r[2]=0,r[3]=1,r):(x.cross(e,n,a),r[0]=e[0],r[1]=e[1],r[2]=e[2],r[3]=1+s,M(r,r))}}();t.rotationTo=N;const S=function(){let e=r(),i=r();return function(r,n,a,o,l,d){return s(e,n,l,d),s(i,a,o,d),s(r,e,i,2*d*(1-d)),r}}();t.sqlerp=S;const D=function(){let e=g.create();return function(t,i,r,a){return e[0]=r[0],e[3]=r[1],e[6]=r[2],e[1]=a[0],e[4]=a[1],e[7]=a[2],e[2]=-i[0],e[5]=-i[1],e[8]=-i[2],M(t,u(t,e))}}();t.setAxes=D},function(e,a,o){'use strict';function p(){let e=new A.a(3);return e[0]=0,e[1]=0,e[2]=0,e}function g(e){let t=e[0],i=e[1],r=e[2];return n(t*t+i*i+r*r)}function x(e,t,i){let r=new A.a(3);return r[0]=e,r[1]=t,r[2]=i,r}function b(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e[2]=t[2]-i[2],e}function h(e,t,i){return e[0]=t[0]*i[0],e[1]=t[1]*i[1],e[2]=t[2]*i[2],e}function E(e,t,i){return e[0]=t[0]/i[0],e[1]=t[1]/i[1],e[2]=t[2]/i[2],e}function v(e,t){let i=t[0]-e[0],r=t[1]-e[1],a=t[2]-e[2];return n(i*i+r*r+a*a)}function _(e,t){let i=t[0]-e[0],r=t[1]-e[1],a=t[2]-e[2];return i*i+r*r+a*a}function y(e){let t=e[0],i=e[1],r=e[2];return t*t+i*i+r*r}function T(e,t){let i=t[0],r=t[1],a=t[2],o=i*i+r*r+a*a;return 0<o&&(o=1/n(o),e[0]=t[0]*o,e[1]=t[1]*o,e[2]=t[2]*o),e}function R(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]}Object.defineProperty(a,'__esModule',{value:!0}),a.create=p,a.clone=function(e){var t=new A.a(3);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t},a.length=g,a.fromValues=x,a.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e},a.set=function(e,t,i,r){return e[0]=t,e[1]=i,e[2]=r,e},a.add=function(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e},a.subtract=b,a.multiply=h,a.divide=E,a.ceil=function(e,t){return e[0]=i(t[0]),e[1]=i(t[1]),e[2]=i(t[2]),e},a.floor=function(e,i){return e[0]=t(i[0]),e[1]=t(i[1]),e[2]=t(i[2]),e},a.min=function(e,t,i){return e[0]=s(t[0],i[0]),e[1]=s(t[1],i[1]),e[2]=s(t[2],i[2]),e},a.max=function(e,t,i){return e[0]=u(t[0],i[0]),e[1]=u(t[1],i[1]),e[2]=u(t[2],i[2]),e},a.round=function(e,t){return e[0]=r(t[0]),e[1]=r(t[1]),e[2]=r(t[2]),e},a.scale=function(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e},a.scaleAndAdd=function(e,t,i,r){return e[0]=t[0]+i[0]*r,e[1]=t[1]+i[1]*r,e[2]=t[2]+i[2]*r,e},a.distance=v,a.squaredDistance=_,a.squaredLength=y,a.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e[2]=-t[2],e},a.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e[2]=1/t[2],e},a.normalize=T,a.dot=R,a.cross=function(e,t,i){let r=t[0],a=t[1],n=t[2],o=i[0],s=i[1],d=i[2];return e[0]=a*d-n*s,e[1]=n*o-r*d,e[2]=r*s-a*o,e},a.lerp=function(e,i,r,a){let t=i[0],n=i[1],o=i[2];return e[0]=t+a*(r[0]-t),e[1]=n+a*(r[1]-n),e[2]=o+a*(r[2]-o),e},a.hermite=function(e,i,r,a,n,o){let t=o*o,s=t*(2*o-3)+1,d=t*(o-2)+o,l=t*(o-1),u=t*(3-2*o);return e[0]=i[0]*s+r[0]*d+a[0]*l+n[0]*u,e[1]=i[1]*s+r[1]*d+a[1]*l+n[1]*u,e[2]=i[2]*s+r[2]*d+a[2]*l+n[2]*u,e},a.bezier=function(e,i,r,a,n,o){let t=1-o,s=t*t,d=o*o,l=s*t,u=3*o*s,c=3*d*t,m=d*o;return e[0]=i[0]*l+r[0]*u+a[0]*c+n[0]*m,e[1]=i[1]*l+r[1]*u+a[1]*c+n[1]*m,e[2]=i[2]*l+r[2]*u+a[2]*c+n[2]*m,e},a.random=function(e,t){t=t||1;let i=2*A.c()*f,r=2*A.c()-1,a=n(1-r*r)*t;return e[0]=d(i)*a,e[1]=l(i)*a,e[2]=r*t,e},a.transformMat4=function(e,t,i){let r=t[0],a=t[1],n=t[2],o=i[3]*r+i[7]*a+i[11]*n+i[15];return o=o||1,e[0]=(i[0]*r+i[4]*a+i[8]*n+i[12])/o,e[1]=(i[1]*r+i[5]*a+i[9]*n+i[13])/o,e[2]=(i[2]*r+i[6]*a+i[10]*n+i[14])/o,e},a.transformMat3=function(e,t,i){let r=t[0],a=t[1],n=t[2];return e[0]=r*i[0]+a*i[3]+n*i[6],e[1]=r*i[1]+a*i[4]+n*i[7],e[2]=r*i[2]+a*i[5]+n*i[8],e},a.transformQuat=function(e,t,i){let r=i[0],a=i[1],n=i[2],o=i[3],s=t[0],d=t[1],l=t[2],u=a*l-n*d,c=n*s-r*l,m=r*d-a*s,f=a*m-n*c,p=n*u-r*m,g=r*c-a*u,x=2*o;return u*=x,c*=x,m*=x,f*=2,p*=2,g*=2,e[0]=s+u+f,e[1]=d+c+p,e[2]=l+m+g,e},a.rotateX=function(e,t,i,a){let n=[],o=[];return n[0]=t[0]-i[0],n[1]=t[1]-i[1],n[2]=t[2]-i[2],o[0]=n[0],o[1]=n[1]*d(a)-n[2]*l(a),o[2]=n[1]*l(a)+n[2]*d(a),e[0]=o[0]+i[0],e[1]=o[1]+i[1],e[2]=o[2]+i[2],e},a.rotateY=function(e,t,i,a){let n=[],o=[];return n[0]=t[0]-i[0],n[1]=t[1]-i[1],n[2]=t[2]-i[2],o[0]=n[2]*l(a)+n[0]*d(a),o[1]=n[1],o[2]=n[2]*d(a)-n[0]*l(a),e[0]=o[0]+i[0],e[1]=o[1]+i[1],e[2]=o[2]+i[2],e},a.rotateZ=function(e,t,i,a){let n=[],o=[];return n[0]=t[0]-i[0],n[1]=t[1]-i[1],n[2]=t[2]-i[2],o[0]=n[0]*d(a)-n[1]*l(a),o[1]=n[0]*l(a)+n[1]*d(a),o[2]=n[2],e[0]=o[0]+i[0],e[1]=o[1]+i[1],e[2]=o[2]+i[2],e},a.angle=function(e,t){let i=x(e[0],e[1],e[2]),r=x(t[0],t[1],t[2]);T(i,i),T(r,r);let a=R(i,r);return 1<a?0:-1>a?f:c(a)},a.str=function(e){return'vec3('+e[0]+', '+e[1]+', '+e[2]+')'},a.exactEquals=function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]},a.equals=function(e,t){let i=e[0],r=e[1],a=e[2],n=t[0],o=t[1],s=t[2];return m(i-n)<=A.b*u(1,m(i),m(n))&&m(r-o)<=A.b*u(1,m(r),m(o))&&m(a-s)<=A.b*u(1,m(a),m(s))};var A=o(6);a.sub=b;a.mul=h;a.div=E;a.dist=v;a.sqrDist=_;a.len=g;a.sqrLen=y;const L=function(){let e=p();return function(t,r,a,n,o,d){let u,i;for(r||(r=3),a||(a=0),i=n?s(n*r+a,t.length):t.length,u=a;u<i;u+=r)e[0]=t[u],e[1]=t[u+1],e[2]=t[u+2],o(e,e,d),t[u]=e[0],t[u+1]=e[1],t[u+2]=e[2];return t}}();a.forEach=L},function(e,t,i){'use strict';function r(){let e=new d.a(4);return e[0]=0,e[1]=0,e[2]=0,e[3]=0,e}function a(e){let t=e[0],i=e[1],r=e[2],a=e[3];return n(t*t+i*i+r*r+a*a)}function o(e){let t=e[0],i=e[1],r=e[2],a=e[3];return t*t+i*i+r*r+a*a}t.b=function(e){let t=new d.a(4);return t[0]=e[0],t[1]=e[1],t[2]=e[2],t[3]=e[3],t},t.g=function(e,t,i,r){let a=new d.a(4);return a[0]=e,a[1]=t,a[2]=i,a[3]=r,a},t.c=function(e,t){return e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e},t.l=function(e,t,i,r,a){return e[0]=t,e[1]=i,e[2]=r,e[3]=a,e},t.a=function(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e[2]=t[2]+i[2],e[3]=t[3]+i[3],e},t.k=function(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e[2]=t[2]*i,e[3]=t[3]*i,e},t.h=a,t.m=o,t.j=function(e,t){let i=t[0],r=t[1],a=t[2],o=t[3],s=i*i+r*r+a*a+o*o;return 0<s&&(s=1/n(s),e[0]=i*s,e[1]=r*s,e[2]=a*s,e[3]=o*s),e},t.d=function(e,t){return e[0]*t[0]+e[1]*t[1]+e[2]*t[2]+e[3]*t[3]},t.i=function(e,i,r,a){let t=i[0],n=i[1],o=i[2],s=i[3];return e[0]=t+a*(r[0]-t),e[1]=n+a*(r[1]-n),e[2]=o+a*(r[2]-o),e[3]=s+a*(r[3]-s),e},t.f=function(e,t){return e[0]===t[0]&&e[1]===t[1]&&e[2]===t[2]&&e[3]===t[3]},t.e=function(e,t){let i=e[0],r=e[1],a=e[2],n=e[3],o=t[0],s=t[1],l=t[2],c=t[3];return m(i-o)<=d.b*u(1,m(i),m(o))&&m(r-s)<=d.b*u(1,m(r),m(s))&&m(a-l)<=d.b*u(1,m(a),m(l))&&m(n-c)<=d.b*u(1,m(n),m(c))};var d=i(6);(function(){let e=r();return function(t,r,a,n,o,d){let u,i;for(r||(r=4),a||(a=0),i=n?s(n*r+a,t.length):t.length,u=a;u<i;u+=r)e[0]=t[u],e[1]=t[u+1],e[2]=t[u+2],e[3]=t[u+3],o(e,e,d),t[u]=e[0],t[u+1]=e[1],t[u+2]=e[2],t[u+3]=e[3];return t}})()},function(e,t,i){'use strict';var r=i(1),a=i(8),n=i(2);let o=0;const s=r.e.create();t.a=class{constructor(){this.children=[],this.localMatrix=r.b.create(),this.modelMatrix=r.b.create(),this.modelViewMatrix=r.b.create(),this.matrixAutoUpdate=!0,this.position=new n.a,this.rotation=new n.a,this.scale=new n.a(1,1,1),this.isObject3D=!0,this.quaternion=r.c.create(),this.quaternionLookAt=r.c.create(),this.lookAtUp=r.e.create()}updateMatrix(e){r.b.identity(this.modelViewMatrix),this.matrixAutoUpdate&&(r.b.identity(this.localMatrix),r.b.identity(this.modelMatrix),r.c.identity(this.quaternion),this.parent&&(r.b.copy(this.localMatrix,this.parent.modelMatrix),r.b.multiply(this.modelMatrix,this.modelMatrix,this.localMatrix)),r.c.copy(this.quaternion,this.quaternionLookAt),r.b.translate(this.modelMatrix,this.modelMatrix,this.position.v),r.c.rotateX(this.quaternion,this.quaternion,this.rotation.x),r.c.rotateY(this.quaternion,this.quaternion,this.rotation.y),r.c.rotateZ(this.quaternion,this.quaternion,this.rotation.z),o=r.c.getAxisAngle(s,this.quaternion),r.b.rotate(this.modelMatrix,this.modelMatrix,o,s),r.b.scale(this.modelMatrix,this.modelMatrix,this.scale.v)),e&&r.b.multiply(this.modelViewMatrix,e.worldInverseMatrix,this.modelMatrix)}lookAt(e){r.c.identity(this.quaternionLookAt),this.quaternionLookAt=Object(a.lookAt)(this.position.v,e.v,this.lookAtUp)}setParent(e){this.unParent(),e.isObject3D&&(e.children.push(this),this.parent=e)}unParent(){if(void 0!==this.parent){const e=this.parent.children.indexOf(this);-1!==e&&(this.parent.children.splice(e,1),this.parent=null)}}dispose(){this.unParent(),this.children=[],this.localMatrix=null,this.modelMatrix=null,this.position=null,this.rotation=null,this.scale=null,this.quaternion=null,this.isObject3D=null}}},function(e,t,i){'use strict';var r=i(5),a=i(0);let n;t.a=class{constructor(){n=a.get(),n instanceof WebGL2RenderingContext?this.vao=n.createVertexArray():r.extensions.vertexArrayObject&&(this.vao=r.extensions.vertexArrayObject.createVertexArrayOES())}bind(){n instanceof WebGL2RenderingContext?n.bindVertexArray(this.vao):r.extensions.vertexArrayObject&&r.extensions.vertexArrayObject.bindVertexArrayOES(this.vao)}unbind(){n instanceof WebGL2RenderingContext?n.bindVertexArray(null):r.extensions.vertexArrayObject&&r.extensions.vertexArrayObject.bindVertexArrayOES(null)}dispose(){n instanceof WebGL2RenderingContext?n.deleteVertexArray(this.vao):r.extensions.vertexArrayObject&&r.extensions.vertexArrayObject.deleteVertexArrayOES(this.vao),this.vao=null}}},function(e,t,i){'use strict';var r=i(1),o=i(2);const s=r.e.create(),d=r.e.create(),l=r.e.create(),u=r.e.create(),a=r.e.create();t.a=class{constructor(){this.origin=new o.a,this.direction=new o.a}set(e,t){this.origin.copy(e),this.direction.copy(t)}intersectTriangle(e,t,i,a=!0){r.e.sub(d,t.v,e.v),r.e.sub(l,i.v,e.v),r.e.cross(u,d,l);let n=r.e.dot(this.direction.v,u),c;if(0<n){if(a)return null;c=1}else if(0>n)c=-1,n=-n;else return null;r.e.sub(s,this.origin.v,e.v),r.e.cross(l,s,l);const m=c*r.e.dot(this.direction.v,l);if(0>m)return null;r.e.cross(d,d,s);const f=c*r.e.dot(this.direction.v,d);if(0>f)return null;if(m+f>n)return null;const p=-c*r.e.dot(s,u);if(0>p)return null;const g=new o.a;return g.copy(this.direction).scale(p/n).add(this.origin),g}at(e){const t=r.e.fromValues(this.direction.v[0],this.direction.v[1],this.direction.v[2]);r.e.scale(t,t,e),r.e.add(t,t,this.origin.v)}intersectsSphere(e){return this.distanceToPoint(e.center)<=e.radius}distanceToPoint(e){return n(this.distanceSqToPoint(e))}distanceSqToPoint(e){r.e.subtract(a,e.v,this.origin.v);const t=r.e.dot(a,this.direction.v);return 0>t?r.e.squaredDistance(this.origin.v,e.v):(r.e.copy(a,this.direction.v),r.e.scale(a,a,t),r.e.add(a,a,this.origin.v),r.e.squaredDistance(a,e.v))}}},function(e,t){'use strict';t.a=function(){try{const e=WebGLRenderingContext,t=document.createElement('canvas'),i=document.createElement('canvas'),r=i.getContext('webgl2'),a=t.getContext('webgl')||t.getContext('experimental-webgl');return void 0!==e&&{webgl:!!a,webgl2:!!r}}catch(e){return!1}}},function(e,t,i){'use strict';Object.defineProperty(t,'__esModule',{value:!0}),i.d(t,'pointLightsEs300',function(){return r}),i.d(t,'pointLightsEs100',function(){return a});const r=`
	struct PointLight {
		vec4 position;
		vec4 color;
		vec4 specularColor;
		vec4 shininess;
		vec4 intensity;
	};
	uniform PointLights {
		PointLight uPointLights[#HOOK_POINT_LIGHTS];
	};
`,a=`
	struct PointLight {
		vec3 position;
		vec3 color;
		vec3 specularColor;
		float shininess;
		float intensity;
	};
	uniform PointLight uPointLights[#HOOK_POINT_LIGHTS];
`},function(e,t){'use strict';const i=`
#define PI 3.141592653589793
`;t.b=i;const r=`
#define TWO_PI 6.283185307179586
`;t.c=r;const a=`
float mapLinear(float value, float in_min, float in_max, float out_min, float out_max) {
	return (value - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;
}
`;t.a={definePI:i,definePITwo:r,mapLinear:a}},function(e,t,i){'use strict';Object.defineProperty(t,'__esModule',{value:!0}),t.flatten=function(e){return e.reduce((e,t)=>{return t instanceof r.a||t instanceof n.a?e.concat(...t.v):e.concat(t)},[])};var r=i(12),n=i(2)},function(e,t,i){'use strict';var r=i(0);let a;t.a=class{constructor(e,t,i,a=!0){this.type=e,this.itemSize=i,this.numItems=t.length/i,this.buffer=r.createBuffer(e,t),this.shaderAttribute=a}bind(){a=r.get(),a.bindBuffer(this.type,this.buffer)}unbind(){a=r.get(),a.bindBuffer(this.type,null)}update(e){this.bind(),a=r.get(),a.bufferSubData(this.type,0,e),this.unbind()}dispose(){a=r.get(),a.deleteBuffer(this.buffer),this.buffer=null}}},function(e,t,i){'use strict';var r=i(7);class a extends r.a{constructor(e){const t=[];let r=0,a=0;const n=e.length/3;for(let o=0;o<n;o+=1)r=3*o,a=6*o,o<n-1&&(t[a]=e[r],t[a+1]=e[r+1],t[a+2]=e[r+2],t[a+3]=e[r+3],t[a+4]=e[r+4],t[a+5]=e[r+5]);super(new Float32Array(t))}}t.a=a},function(e,t,i){'use strict';var r=i(7);class a extends r.a{constructor(e=1,t=8,i=8,r){const a=[],n=[],o=[];for(let s=0;s<=t;s+=1){const r=s*f/t,c=l(r),m=d(r);for(let r=0;r<=i;r+=1){const p=2*r*f/i,g=l(p),b=d(p),h=b*c,x=m,E=g*c,_=1-r/i,u=1-s/t;n.push(h),n.push(x),n.push(E),o.push(_),o.push(u),a.push(e*h),a.push(e*x),a.push(e*E)}}const s=[];for(let a=0;a<t;a+=1)for(let e=0;e<i;e+=1){const t=a*(i+1)+e,r=t+i+1;s.push(t),s.push(r),s.push(t+1),s.push(r),s.push(r+1),s.push(t+1)}super(new Float32Array(a),new Uint16Array(s),new Float32Array(n),new Float32Array(o),r)}}t.a=a},function(e,t,i){(function(){'use strict';function r(e,i,r,a,n){'undefined'==typeof n&&(n=0.5);var o=x.projectionratio(n,e),d=1-o,l={x:o*i.x+d*a.x,y:o*i.y+d*a.y},u=x.abcratio(n,e),s={x:r.x+(r.x-l.x)/u,y:r.y+(r.y-l.y)/u};return{A:s,B:r,C:l}}var t=m,a=s,o=u,l=n,g={x:0,y:0,z:0},x=i(45),d=i(95),b=function(e){var i=e&&e.forEach?e:[].slice.call(arguments),r=!1;if('object'==typeof i[0]){r=i.length;var a=[];i.forEach(function(e){['x','y','z'].forEach(function(t){'undefined'!=typeof e[t]&&a.push(e[t])})}),i=a}var n=!1,o=i.length;if(r){if(4<r){if(1!==arguments.length)throw new Error('Only new Bezier(point[]) is accepted for 4th and higher order curves');n=!0}}else if(6!==o&&8!==o&&9!==o&&12!==o&&1!==arguments.length)throw new Error('Only new Bezier(point[]) is accepted for 4th and higher order curves');var s=!n&&(9===o||12===o)||e&&e[0]&&'undefined'!=typeof e[0].z;this._3d=s;for(var d=[],l=0,u=s?3:2,c;l<o;l+=u)c={x:i[l],y:i[l+1]},s&&(c.z=i[l+2]),d.push(c);this.order=d.length-1,this.points=d;var m=['x','y'];s&&m.push('z'),this.dims=m,this.dimlen=m.length,function(e){for(var r=e.order,n=e.points,o=x.align(n,{p1:n[0],p2:n[r]}),a=0;a<o.length;a++)if(1e-4<t(o[a].y))return void(e._linear=!1);e._linear=!0}(this),this._t1=0,this._t2=1,this.update()};b.fromSVG=function(e){var t=e.match(/[-+]?\d*\.?\d+(?:[eE][-+]?\d+)?/g).map(parseFloat),i=/[cq]/.test(e);return i?(t=t.map(function(e,r){return 2>r?e:e+t[r%2]}),new b(t)):new b(t)},b.quadraticFromPoints=function(e,i,a,n){if('undefined'==typeof n&&(n=0.5),0===n)return new b(i,i,a);if(1===n)return new b(e,i,i);var o=r(2,e,i,a,n);return new b(e,o.A,a)},b.cubicFromPoints=function(e,i,a,n,o){'undefined'==typeof n&&(n=0.5);var s=r(3,e,i,a,n);'undefined'==typeof o&&(o=x.dist(i,s.C));var d=o*(1-n)/n,l=x.dist(e,a),u=(a.x-e.x)/l,c=(a.y-e.y)/l,m=o*u,f=o*c,p={x:i.x-m,y:i.y-f},g={x:i.x+d*u,y:i.y+d*c},h=s.A,E={x:h.x+(p.x-h.x)/(1-n),y:h.y+(p.y-h.y)/(1-n)},v={x:h.x+(g.x-h.x)/n,y:h.y+(g.y-h.y)/n},_={x:e.x+(E.x-e.x)/n,y:e.y+(E.y-e.y)/n},y={x:a.x+(v.x-a.x)/(1-n),y:a.y+(v.y-a.y)/(1-n)};return new b(e,_,y,a)};var p=function(){return x};b.getUtils=p,b.prototype={getUtils:p,valueOf:function(){return this.toString()},toString:function(){return x.pointsToString(this.points)},toSVG:function(){if(this._3d)return!1;for(var e=this.points,t=e[0].x,r=e[0].y,a=['M',t,r,2===this.order?'Q':'C'],n=1,i=e.length;n<i;n++)a.push(e[n].x),a.push(e[n].y);return a.join(' ')},update:function(){this.dpoints=[];for(var e=this.points,t=e.length,i=t-1,r;1<t;t--,i--){r=[];for(var a=0,n;a<i;a++)n={x:i*(e[a+1].x-e[a].x),y:i*(e[a+1].y-e[a].y)},this._3d&&(n.z=i*(e[a+1].z-e[a].z)),r.push(n);this.dpoints.push(r),e=r}this.computedirection()},computedirection:function(){var e=this.points,t=x.angle(e[0],e[this.order],e[1]);this.clockwise=0<t},length:function(){return x.length(this.derivative.bind(this))},_lut:[],getLUT:function(e){if(e=e||100,this._lut.length===e)return this._lut;this._lut=[];for(var i=0;i<=e;i++)this._lut.push(this.compute(i/e));return this._lut},on:function(e,r){r=r||5;for(var a=this.getLUT(),n=[],o=0,t=0,i;t<a.length;t++)i=a[t],x.dist(i,e)<r&&(n.push(i),o+=t/a.length);return!!n.length&&(o/=n.length)},project:function(e){var i=this.getLUT(),r=i.length-1,a=x.closest(i,e),n=a.mdist,o=a.mpos;if(0===o||o===r){var s=o/r,t=this.compute(s);return t.t=s,t.d=n,t}var l=0.1/r,u,s,c,m;for(n+=1,s=(o-1)/r,u=s;s<(o+1)/r+l;s+=l)c=this.compute(s),m=x.dist(e,c),m<n&&(n=m,u=s);return c=this.compute(u),c.t=u,c.d=n,c},get:function(e){return this.compute(e)},point:function(e){return this.points[e]},compute:function(e){if(0===e)return this.points[0];if(1===e)return this.points[this.order];var t=this.points,r=1-e;if(1===this.order)return u={x:r*t[0].x+e*t[1].x,y:r*t[0].y+e*t[1].y},this._3d&&(u.z=r*t[0].z+e*t[1].z),u;if(4>this.order){var n=r*r,o=e*e,s=0,d,a,l;2===this.order?(t=[t[0],t[1],t[2],g],d=n,a=2*(r*e),l=o):3===this.order&&(d=n*r,a=3*(n*e),l=3*(r*o),s=e*o);var u={x:d*t[0].x+a*t[1].x+l*t[2].x+s*t[3].x,y:d*t[0].y+a*t[1].y+l*t[2].y+s*t[3].y};return this._3d&&(u.z=d*t[0].z+a*t[1].z+l*t[2].z+s*t[3].z),u}for(var c=JSON.parse(JSON.stringify(this.points));1<c.length;){for(var m=0;m<c.length-1;m++)c[m]={x:c[m].x+(c[m+1].x-c[m].x)*e,y:c[m].y+(c[m+1].y-c[m].y)*e},'undefined'!=typeof c[m].z&&(c[m]=c[m].z+(c[m+1].z-c[m].z)*e);c.splice(c.length-1,1)}return c[0]},raise:function(){for(var e=this.points,t=[e[0]],r=e.length,a=1,a,i,n;a<r;a++)i=e[a],n=e[a-1],t[a]={x:(r-a)/r*i.x+a/r*n.x,y:(r-a)/r*i.y+a/r*n.y};return t[r]=e[r-1],new b(t)},derivative:function(e){var t=1-e,i=0,r=this.dpoints[0],n,a;2===this.order&&(r=[r[0],r[1],g],n=t,a=e),3===this.order&&(n=t*t,a=2*(t*e),i=e*e);var o={x:n*r[0].x+a*r[1].x+i*r[2].x,y:n*r[0].y+a*r[1].y+i*r[2].y};return this._3d&&(o.z=n*r[0].z+a*r[1].z+i*r[2].z),o},inflections:function(){return x.inflections(this.points)},normal:function(e){return this._3d?this.__normal3(e):this.__normal2(e)},__normal2:function(e){var t=this.derivative(e),i=l(t.x*t.x+t.y*t.y);return{x:-t.y/i,y:t.x/i}},__normal3:function(e){var t=this.derivative(e),i=this.derivative(e+0.01),r=l(t.x*t.x+t.y*t.y+t.z*t.z),a=l(i.x*i.x+i.y*i.y+i.z*i.z);t.x/=r,t.y/=r,t.z/=r,i.x/=a,i.y/=a,i.z/=a;var o={x:i.y*t.z-i.z*t.y,y:i.z*t.x-i.x*t.z,z:i.x*t.y-i.y*t.x},s=l(o.x*o.x+o.y*o.y+o.z*o.z);o.x/=s,o.y/=s,o.z/=s;var d=[o.x*o.x,o.x*o.y-o.z,o.x*o.z+o.y,o.x*o.y+o.z,o.y*o.y,o.y*o.z-o.x,o.x*o.z-o.y,o.y*o.z+o.x,o.z*o.z],u={x:d[0]*t.x+d[1]*t.y+d[2]*t.z,y:d[3]*t.x+d[4]*t.y+d[5]*t.z,z:d[6]*t.x+d[7]*t.y+d[8]*t.z};return u},hull:function(e){var t=this.points,r=[],a=[],n=0,o=0,i=0,s;for(a[n++]=t[0],a[n++]=t[1],a[n++]=t[2],3===this.order&&(a[n++]=t[3]);1<t.length;){for(r=[],o=0,i=t.length-1;o<i;o++)s=x.lerp(e,t[o],t[o+1]),a[n++]=s,r.push(s);t=r}return a},split:function(e,t){if(0===e&&!!t)return this.split(t).left;if(1===t)return this.split(e).right;var i=this.hull(e),r={left:2===this.order?new b([i[0],i[3],i[5]]):new b([i[0],i[4],i[7],i[9]]),right:2===this.order?new b([i[5],i[4],i[2]]):new b([i[9],i[8],i[6],i[3]]),span:i};if(r.left._t1=x.map(0,0,1,this._t1,this._t2),r.left._t2=x.map(e,0,1,this._t1,this._t2),r.right._t1=x.map(e,0,1,this._t1,this._t2),r.right._t2=x.map(1,0,1,this._t1,this._t2),!t)return r;t=x.map(t,e,1,0,1);var a=r.right.split(t);return a.left},extrema:function(){var e=this.dims,t={},i=[],r,a;return e.forEach(function(e){a=function(t){return t[e]},r=this.dpoints[0].map(a),t[e]=x.droots(r),3===this.order&&(r=this.dpoints[1].map(a),t[e]=t[e].concat(x.droots(r))),t[e]=t[e].filter(function(e){return 0<=e&&1>=e}),i=i.concat(t[e].sort())}.bind(this)),i=i.sort().filter(function(e,t){return i.indexOf(e)===t}),t.values=i,t},bbox:function(){var e=this.extrema(),t={};return this.dims.forEach(function(i){t[i]=x.getminmax(this,i,e[i])}.bind(this)),t},overlaps:function(e){var t=this.bbox(),i=e.bbox();return x.bboxoverlap(t,i)},offset:function(e,t){if('undefined'!=typeof t){var i=this.get(e),r=this.normal(e),a={c:i,n:r,x:i.x+r.x*t,y:i.y+r.y*t};return this._3d&&(a.z=i.z+r.z*t),a}if(this._linear){var o=this.normal(0),s=this.points.map(function(t){var i={x:t.x+e*o.x,y:t.y+e*o.y};return t.z&&r.z&&(i.z=t.z+e*o.z),i});return[new b(s)]}var l=this.reduce();return l.map(function(t){return t.scale(e)})},simple:function(){if(3===this.order){var e=x.angle(this.points[0],this.points[3],this.points[1]),i=x.angle(this.points[0],this.points[3],this.points[2]);if(0<e&&0>i||0>e&&0<i)return!1}var r=this.normal(0),a=this.normal(1),n=r.x*a.x+r.y*a.y;this._3d&&(n+=r.z*a.z);var o=t(c(n));return o<f/3},reduce:function(){var e=0,r=0,a=0.01,n=[],o=[],s=this.extrema().values,d,i;for(-1===s.indexOf(0)&&(s=[0].concat(s)),-1===s.indexOf(1)&&s.push(1),(e=s[0],d=1);d<s.length;d++)r=s[d],i=this.split(e,r),i._t1=e,i._t2=r,n.push(i),e=r;return n.forEach(function(n){for(e=0,r=0;1>=r;)for(r=e+a;r<=1+a;r+=a)if(i=n.split(e,r),!i.simple()){if(r-=a,t(e-r)<a)return[];i=n.split(e,r),i._t1=x.map(e,0,1,n._t1,n._t2),i._t2=x.map(r,0,1,n._t1,n._t2),o.push(i),e=r;break}1>e&&(i=n.split(e,1),i._t1=x.map(e,0,1,n._t1,n._t2),i._t2=n._t2,o.push(i))}),o},scale:function(e){var i=this.order,r=!1;if('function'==typeof e&&(r=e),r&&2===i)return this.raise().scale(r);var a=this.clockwise,n=r?r(0):e,s=r?r(1):e,u=[this.offset(0,10),this.offset(1,10)],c=x.lli4(u[0],u[0].c,u[1],u[1].c);if(!c)throw new Error('cannot scale this curve. Try reducing it first.');var f=this.points,g=[];return([0,1].forEach(function(e){var t=g[e*i]=x.copy(f[e*i]);t.x+=(e?s:n)*u[e].n.x,t.y+=(e?s:n)*u[e].n.y}.bind(this)),!r)?([0,1].forEach(function(e){if(2!==this.order||!e){var r=g[e*i],a=this.derivative(e),n={x:r.x+a.x,y:r.y+a.y};g[e+1]=x.lli4(r,n,c,f[e+1])}}.bind(this)),new b(g)):([0,1].forEach(function(n){if(2!==this.order||!n){var o=f[n+1],s={x:o.x-c.x,y:o.y-c.y},d=r?r((n+1)/i):e;r&&!a&&(d=-d);var u=l(s.x*s.x+s.y*s.y);s.x/=u,s.y/=u,g[n+1]={x:o.x+d*s.x,y:o.y+d*s.y}}}.bind(this)),new b(g))},outline:function(e,t,i,r){function a(t,i,e,r,a){return function(n){var o=i-t;return x.map(n,0,1,t+r/e*o,t+(r+a)/e*o)}}t='undefined'==typeof t?e:t;var n=this.reduce(),o=n.length,s=[],l=[],u=0,c=this.length(),m;n.forEach(function(n){_=n.length(),'undefined'!=typeof i&&'undefined'!=typeof r?(s.push(n.scale(a(e,i,c,u,_))),l.push(n.scale(a(-t,-r,c,u,_)))):(s.push(n.scale(e)),l.push(n.scale(-t))),u+=_}),l=l.map(function(e){return m=e.points,e.points=m[3]?[m[3],m[2],m[1],m[0]]:[m[2],m[1],m[0]],e}).reverse();var f=s[0].points[0],p=s[o-1].points[s[o-1].points.length-1],g=l[o-1].points[l[o-1].points.length-1],b=l[0].points[0],h=x.makeline(g,f),E=x.makeline(p,b),v=[h].concat(s).concat([E]).concat(l),_=v.length;return new d(v)},outlineshapes:function(e,t,r){t=t||e;for(var a=this.outline(e,t).curves,n=[],o=1,i=a.length,s;o<i/2;o++)s=x.makeshape(a[o],a[i-o],r),s.startcap.virtual=1<o,s.endcap.virtual=o<i/2-1,n.push(s);return n},intersects:function(e,t){return e?e.p1&&e.p2?this.lineIntersects(e):(e instanceof b&&(e=e.reduce()),this.curveintersects(this.reduce(),e,t)):this.selfintersects(t)},lineIntersects:function(e){var i=a(e.p1.x,e.p2.x),r=a(e.p1.y,e.p2.y),n=o(e.p1.x,e.p2.x),s=o(e.p1.y,e.p2.y),d=this;return x.roots(this.points,e).filter(function(e){var t=d.get(e);return x.between(t.x,i,n)&&x.between(t.y,r,s)})},selfintersects:function(e){var t=this.reduce(),r=t.length-2,a=[],n,i,o,s;for(n=0;n<r;n++)o=t.slice(n,n+1),s=t.slice(n+2),i=this.curveintersects(o,s,e),a=a.concat(i);return a},curveintersects:function(e,t,i){var a=[];e.forEach(function(e){t.forEach(function(t){e.overlaps(t)&&a.push({left:e,right:t})})});var r=[];return a.forEach(function(e){var t=x.pairiteration(e.left,e.right,i);0<t.length&&(r=r.concat(t))}),r},arcs:function(e){e=e||0.5;return this._iterate(e,[])},_error:function(i,r,a,n){var e=(n-a)/4,o=this.get(a+e),s=this.get(n-e),d=x.dist(i,r),l=x.dist(i,o),u=x.dist(i,s);return t(l-d)+t(u-d)},_iterate:function(t,i){var r=0,a=1,n;do{n=0,a=1;var o=this.get(r),d=!1,l=!1,u=a,c=1,m=0,f,p,g,b,h;do{l=d,b=g,u=(r+a)/2,m++,f=this.get(u),p=this.get(a),g=x.getccenter(o,f,p),g.interval={start:r,end:a};var E=this._error(g,o,r,a);if(d=E<=t,h=l&&!d,h||(c=a),d){if(1<=a){g.interval.end=c=1,b=g;break}a+=(a-r)/2}else a=u}while(!h&&100>n++);if(100<=n)break;b=b?b:g,i.push(b),r=c}while(1>a);return i}},e.exports=b})()},function(t,i,r){(function(){'use strict';var s=m,i=d,u=l,p=e,g=n,a=o,x=function(e){return 0>e?-a(-e,1/3):a(e,1/3)},b=f,h=2*b,E=b/2,v=Number.MAX_SAFE_INTEGER,_=Number.MIN_SAFE_INTEGER,y={Tvalues:[-0.06405689286260563,0.06405689286260563,-0.1911188674736163,0.1911188674736163,-0.3150426796961634,0.3150426796961634,-0.4337935076260451,0.4337935076260451,-0.5454214713888396,0.5454214713888396,-0.6480936519369755,0.6480936519369755,-0.7401241915785544,0.7401241915785544,-0.820001985973903,0.820001985973903,-0.8864155270044011,0.8864155270044011,-0.9382745520027328,0.9382745520027328,-0.9747285559713095,0.9747285559713095,-0.9951872199970213,0.9951872199970213],Cvalues:[0.12793819534675216,0.12793819534675216,0.1258374563468283,0.1258374563468283,0.12167047292780339,0.12167047292780339,0.1155056680537256,0.1155056680537256,0.10744427011596563,0.10744427011596563,0.09761865210411388,0.09761865210411388,0.08619016153195327,0.08619016153195327,0.0733464814110803,0.0733464814110803,0.05929858491543678,0.05929858491543678,0.04427743881741981,0.04427743881741981,0.028531388628933663,0.028531388628933663,0.0123412297999872,0.0123412297999872],arcfn:function(e,t){var i=t(e),r=i.x*i.x+i.y*i.y;return'undefined'!=typeof i.z&&(r+=i.z*i.z),g(r)},between:function(e,t,i){return t<=e&&e<=i||y.approximately(e,t)||y.approximately(e,i)},approximately:function(e,t,i){return s(e-t)<=(i||1e-6)},length:function(e){var r=0.5,a=0,n=y.Tvalues.length,o,i;for(o=0;o<n;o++)i=r*y.Tvalues[o]+r,a+=y.Cvalues[o]*y.arcfn(i,e);return r*a},map:function(e,t,i,r,a){return r+(a-r)*((e-t)/(i-t))},lerp:function(e,t,i){var r={x:t.x+e*(i.x-t.x),y:t.y+e*(i.y-t.y)};return!t.z||!i.z||(r.z=t.z+e*(i.z-t.z)),r},pointToString:function(e){var t=e.x+'/'+e.y;return'undefined'!=typeof e.z&&(t+='/'+e.z),t},pointsToString:function(e){return'['+e.map(y.pointToString).join(', ')+']'},copy:function(e){return JSON.parse(JSON.stringify(e))},angle:function(e,t,i){var r=t.x-e.x,a=t.y-e.y,n=i.x-e.x,o=i.y-e.y;return p(r*o-a*n,r*n+a*o)},round:function(e,t){var i=''+e,r=i.indexOf('.');return parseFloat(i.substring(0,r+1+t))},dist:function(e,t){var i=e.x-t.x,r=e.y-t.y;return g(i*i+r*r)},closest:function(e,t){var i=a(2,63),r,n;return e.forEach(function(e,a){n=y.dist(t,e),n<i&&(i=n,r=a)}),{mdist:i,mpos:r}},abcratio:function(e,i){if(2!==i&&3!==i)return!1;if('undefined'==typeof e)e=0.5;else if(0===e||1===e)return e;var r=a(e,i)+a(1-e,i);return s((r-1)/r)},projectionratio:function(e,i){if(2!==i&&3!==i)return!1;if('undefined'==typeof e)e=0.5;else if(0===e||1===e)return e;var r=a(1-e,i),n=a(e,i)+r;return r/n},lli8:function(e,t,i,r,a,n,o,s){var l=(e-i)*(n-s)-(t-r)*(a-o);return 0!=l&&{x:((e*r-t*i)*(a-o)-(e-i)*(a*s-n*o))/l,y:((e*r-t*i)*(n-s)-(t-r)*(a*s-n*o))/l}},lli4:function(e,t,i,r){var a=e.x,n=e.y,o=t.x,s=t.y,d=i.x,l=i.y,u=r.x,c=r.y;return y.lli8(a,n,o,s,d,l,u,c)},lli:function(e,t){return y.lli4(e,e.c,t,t.c)},makeline:function(e,t){var i=r(44),a=e.x,n=e.y,o=t.x,s=t.y,d=(o-a)/3,l=(s-n)/3;return new i(a,n,a+d,n+l,a+2*d,n+2*l,o,s)},findbbox:function(e){var t=v,i=v,r=_,a=_;return e.forEach(function(e){var n=e.bbox();t>n.x.min&&(t=n.x.min),i>n.y.min&&(i=n.y.min),r<n.x.max&&(r=n.x.max),a<n.y.max&&(a=n.y.max)}),{x:{min:t,mid:(t+r)/2,max:r,size:r-t},y:{min:i,mid:(i+a)/2,max:a,size:a-i}}},shapeintersections:function(e,t,i,r,a){if(!y.bboxoverlap(t,r))return[];var n=[],o=[e.startcap,e.forward,e.back,e.endcap],s=[i.startcap,i.forward,i.back,i.endcap];return o.forEach(function(t){t.virtual||s.forEach(function(r){if(!r.virtual){var o=t.intersects(r,a);0<o.length&&(o.c1=t,o.c2=r,o.s1=e,o.s2=i,n.push(o))}})}),n},makeshape:function(e,t,i){var r=t.points.length,a=e.points.length,n=y.makeline(t.points[r-1],e.points[0]),o=y.makeline(e.points[a-1],t.points[0]),s={startcap:n,forward:e,back:t,endcap:o,bbox:y.findbbox([n,e,t,o])};return s.intersections=function(e){return y.shapeintersections(s,s.bbox,e,e.bbox,i)},s},getminmax:function(e,r,a){if(!a)return{min:0,max:0};var n=v,o=_,s,t;-1===a.indexOf(0)&&(a=[0].concat(a)),-1===a.indexOf(1)&&a.push(1);for(var d=0,i=a.length;d<i;d++)s=a[d],t=e.get(s),t[r]<n&&(n=t[r]),t[r]>o&&(o=t[r]);return{min:n,mid:(n+o)/2,max:o,size:o-n}},align:function(e,t){var r=t.p1.x,n=t.p1.y,o=-p(t.p2.y-n,t.p2.x-r);return e.map(function(e){return{x:(e.x-r)*i(o)-(e.y-n)*u(o),y:(e.x-r)*u(o)+(e.y-n)*i(o)}})},roots:function(e,n){n=n||{p1:{x:0,y:0},p2:{x:1,y:0}};var o=e.length-1,s=y.align(e,n),l=function(e){return 0<=e&&1>=e};if(2==o){var u=s[0].y,m=s[1].y,f=s[2].y,b=u-2*m+f;if(0!==b){var d=-g(m*m-u*f),E=-u+m,v=-(d+E)/b;return[v,-(-d+E)/b].filter(l)}return m!==f&&0===b?[(2*m-f)/2*(m-f)].filter(l):[]}var _=s[0].y,T=s[1].y,R=s[2].y,A=s[3].y,b=-_+3*T-3*R+A,u=(3*_-6*T+3*R)/b,m=(-3*_+3*T)/b,f=_/b,s=(3*m-u*u)/3,L=s/3,I=(2*u*u*u-9*u*m+27*f)/27,M=I/2,U=M*M+L*L*L,w,v,N,S,D;if(0>U){var F=-s/3,O=g(F*F*F),r=-I/(2*O),t=-1>r?-1:1<r?1:r,P=c(t),C=x(O),B=2*C;return N=B*i(P/3)-u/3,S=B*i((P+h)/3)-u/3,D=B*i((P+2*h)/3)-u/3,[N,S,D].filter(l)}if(0==U)return w=0>M?x(-M):-x(M),N=2*w-u/3,S=-w-u/3,[N,S].filter(l);var z=g(U);return w=x(-M+z),v=x(M+z),[w-v-u/3].filter(l)},droots:function(e){if(3===e.length){var t=e[0],i=e[1],r=e[2],n=t-2*i+r;if(0!==n){var o=-g(i*i-t*r),s=-t+i;return[-(o+s)/n,-(-o+s)/n]}return i!==r&&0===n?[(2*i-r)/(2*(i-r))]:[]}if(2===e.length){var t=e[0],i=e[1];return t===i?[]:[t/(t-i)]}},inflections:function(e){if(4>e.length)return[];var i=y.align(e,{p1:e[0],p2:e.slice(-1)[0]}),r=i[2].x*i[1].y,a=i[3].x*i[1].y,o=i[1].x*i[2].y,s=i[3].x*i[2].y,d=18*(-3*r+2*a+3*o-s),l=18*(3*r-a-3*o),u=18*(o-r);if(y.approximately(d,0)){if(!y.approximately(l,0)){var c=-u/l;if(0<=c&&1>=c)return[c]}return[]}var t=n(l*l-4*d*u),s=2*d;return y.approximately(s,0)?[]:[(t-l)/s,-(l+t)/s].filter(function(e){return 0<=e&&1>=e})},bboxoverlap:function(e,r){var a=['x','y'],n=a.length,o,i,u,l,t;for(o=0;o<n;o++)if(i=a[o],u=e[i].mid,l=r[i].mid,t=(e[i].size+r[i].size)/2,s(u-l)>=t)return!1;return!0},expandbox:function(e,t){t.x.min<e.x.min&&(e.x.min=t.x.min),t.y.min<e.y.min&&(e.y.min=t.y.min),t.z&&t.z.min<e.z.min&&(e.z.min=t.z.min),t.x.max>e.x.max&&(e.x.max=t.x.max),t.y.max>e.y.max&&(e.y.max=t.y.max),t.z&&t.z.max>e.z.max&&(e.z.max=t.z.max),e.x.mid=(e.x.min+e.x.max)/2,e.y.mid=(e.y.min+e.y.max)/2,e.z&&(e.z.mid=(e.z.min+e.z.max)/2),e.x.size=e.x.max-e.x.min,e.y.size=e.y.max-e.y.min,e.z&&(e.z.size=e.z.max-e.z.min)},pairiteration:function(e,t,i){var a=e.bbox(),n=t.bbox(),o=1e5,r=i||0.5;if(a.x.size+a.y.size<r&&n.x.size+n.y.size<r)return[(0|o*(e._t1+e._t2)/2)/o+'/'+(0|o*(t._t1+t._t2)/2)/o];var s=e.split(0.5),d=t.split(0.5),l=[{left:s.left,right:d.left},{left:s.left,right:d.right},{left:s.right,right:d.right},{left:s.right,right:d.left}];l=l.filter(function(e){return y.bboxoverlap(e.left.bbox(),e.right.bbox())});var u=[];return 0===l.length?u:(l.forEach(function(e){u=u.concat(y.pairiteration(e.left,e.right,r))}),u=u.filter(function(e,t){return u.indexOf(e)===t}),u)},getccenter:function(t,a,n){var o=a.x-t.x,d=a.y-t.y,l=n.x-a.x,c=n.y-a.y,f=o*i(E)-d*u(E),g=o*u(E)+d*i(E),x=l*i(E)-c*u(E),b=l*u(E)+c*i(E),v=(t.x+a.x)/2,T=(t.y+a.y)/2,R=(a.x+n.x)/2,A=(a.y+n.y)/2,L=y.lli8(v,T,v+f,T+g,R,A,R+x,A+b),I=y.dist(L,t),r=p(t.y-L.y,t.x-L.x),s=p(a.y-L.y,a.x-L.x),m=p(n.y-L.y,n.x-L.x),e;return r<m?((r>s||s>m)&&(r+=h),r>m&&(e=m,m=r,r=e)):m<s&&s<r?(e=m,m=r,r=e):m+=h,L.s=r,L.e=m,L.r=I,L}};t.exports=y})()},function(e,t,i){'use strict';var r=i(101),a=i.n(r);t.a=function(e){const t=new a.a.Mesh(e);return{vertices:new Float32Array(t.vertices),normals:new Float32Array(t.vertexNormals),indices:new Uint16Array(t.indices),uvs:new Float32Array(t.textures)}}},function(e,t,i){'use strict';Object.defineProperty(t,'__esModule',{value:!0});var r=i(5);i.d(t,'Capabilities',function(){return r});var a=i(3);i.d(t,'Constants',function(){return a});var n=i(0);i.d(t,'GL',function(){return n});var o=i(9);i.d(t,'Mesh',function(){return o.a});var s=i(34);i.d(t,'Object3D',function(){return s.a});var d=i(18);i.d(t,'Camera',function(){return d.a});var l=i(52);i.d(t,'OrthographicCamera',function(){return l.a});var u=i(53);i.d(t,'PerspectiveCamera',function(){return u.a});var c=i(54);i.d(t,'RayCaster',function(){return c.a});var m=i(55);i.d(t,'Renderer',function(){return m.a});var f=i(57);i.d(t,'RenderTarget',function(){return f.a});var p=i(58);i.d(t,'Scene',function(){return p.a});var g=i(10);i.d(t,'Material',function(){return g.a});var x=i(66);i.d(t,'Texture',function(){return x.a});var b=i(68);i.d(t,'Texture3d',function(){return b.a});var h=i(69);i.d(t,'TextureCube',function(){return h.a});var E=i(70);i.d(t,'TextureVideo',function(){return E.a});var v=i(19);i.d(t,'UniformBuffer',function(){return v.a});var _=i(16);i.d(t,'UniformBuffers',function(){return _});var y=i(35);i.d(t,'Vao',function(){return y.a});var T=i(71);i.d(t,'BoxGeometry',function(){return T.a});var R=i(41);i.d(t,'BufferAttribute',function(){return R.a});var A=i(7);i.d(t,'Geometry',function(){return A.a});var L=i(42);i.d(t,'LineGeometry',function(){return L.a});var I=i(73);i.d(t,'PlaneGeometry',function(){return I.a});var M=i(43);i.d(t,'SphereGeometry',function(){return M.a});var U=i(74);i.d(t,'AxisHelper',function(){return U.a});var w=i(75);i.d(t,'CameraHelper',function(){return w.a});var N=i(76);i.d(t,'GridHelper',function(){return N.a});var S=i(77);i.d(t,'NormalsHelper',function(){return S.a});var D=i(78);i.d(t,'VerticesHelper',function(){return D.a});var F=i(79);i.d(t,'Lights',function(){return F.a});var O=i(80);i.d(t,'AmbientLight',function(){return O.a});var P=i(81);i.d(t,'DirectionalLight',function(){return P.a});var C=i(82);i.d(t,'PointLight',function(){return C.a});var B=i(13);i.d(t,'Color',function(){return B.a});var z=i(2);i.d(t,'Vector3',function(){return z.a});var V=i(12);i.d(t,'Vector2',function(){return V.a});var X=i(36);i.d(t,'Ray',function(){return X.a});var k=i(17);i.d(t,'Sphere',function(){return k.a});var j=i(8);i.d(t,'MathUtils',function(){return j});var G=i(83);i.d(t,'ShaderChunks',function(){return G.a});var H=i(40);i.d(t,'ArrayUtils',function(){return H});var q=i(93);i.d(t,'CameraDolly',function(){return q.a});var W=i(100);i.d(t,'Clock',function(){return W.a});var Y=i(37);i.d(t,'Detect',function(){return Y.a});var Z=i(46);i.d(t,'ObjParser',function(){return Z.a});var K=i(102);i.d(t,'OrbitControls',function(){return K.a});var Q=i(28);i.d(t,'FileLoader',function(){return Q.a});var J=i(23);i.d(t,'HdrLoader',function(){return J.a});var $=i(25);i.d(t,'ImageLoader',function(){return $.a});var ee=i(103);i.d(t,'JsonLoader',function(){return ee.a});var te=i(104);i.d(t,'ObjLoader',function(){return te.a}),window.WebGL2RenderingContext===void 0&&(window.WebGL2RenderingContext=function(){return this})},function(e,t,i){'use strict';var r=i(6)},function(e,t,i){'use strict';var r=i(6)},function(e,t,i){'use strict';var r=i(6),a=i(31),n=i(30);const o=a.copy,s=a.copy,d=a.dot,l=a.length,u=a.squaredLength},function(e,a,o){'use strict';function p(){let e=new T.a(2);return e[0]=0,e[1]=0,e}function g(e,t,i){return e[0]=t[0]-i[0],e[1]=t[1]-i[1],e}function x(e,t,i){return e[0]=t[0]*i[0],e[1]=t[1]*i[1],e}function b(e,t,i){return e[0]=t[0]/i[0],e[1]=t[1]/i[1],e}function h(e,t){var i=t[0]-e[0],r=t[1]-e[1];return n(i*i+r*r)}function E(e,t){var i=t[0]-e[0],r=t[1]-e[1];return i*i+r*r}function v(e){var t=e[0],i=e[1];return n(t*t+i*i)}function _(e){var t=e[0],i=e[1];return t*t+i*i}Object.defineProperty(a,'__esModule',{value:!0}),a.create=p,a.clone=function(e){let t=new T.a(2);return t[0]=e[0],t[1]=e[1],t},a.fromValues=function(e,t){let i=new T.a(2);return i[0]=e,i[1]=t,i},a.copy=function(e,t){return e[0]=t[0],e[1]=t[1],e},a.set=function(e,t,i){return e[0]=t,e[1]=i,e},a.add=function(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e},a.subtract=g,a.multiply=x,a.divide=b,a.ceil=function(e,t){return e[0]=i(t[0]),e[1]=i(t[1]),e},a.floor=function(e,i){return e[0]=t(i[0]),e[1]=t(i[1]),e},a.min=function(e,t,i){return e[0]=s(t[0],i[0]),e[1]=s(t[1],i[1]),e},a.max=function(e,t,i){return e[0]=u(t[0],i[0]),e[1]=u(t[1],i[1]),e},a.round=function(e,t){return e[0]=r(t[0]),e[1]=r(t[1]),e},a.scale=function(e,t,i){return e[0]=t[0]*i,e[1]=t[1]*i,e},a.scaleAndAdd=function(e,t,i,r){return e[0]=t[0]+i[0]*r,e[1]=t[1]+i[1]*r,e},a.distance=h,a.squaredDistance=E,a.length=v,a.squaredLength=_,a.negate=function(e,t){return e[0]=-t[0],e[1]=-t[1],e},a.inverse=function(e,t){return e[0]=1/t[0],e[1]=1/t[1],e},a.normalize=function(e,t){var i=t[0],r=t[1],a=i*i+r*r;return 0<a&&(a=1/n(a),e[0]=t[0]*a,e[1]=t[1]*a),e},a.dot=function(e,t){return e[0]*t[0]+e[1]*t[1]},a.cross=function(e,t,i){var r=t[0]*i[1]-t[1]*i[0];return e[0]=e[1]=0,e[2]=r,e},a.lerp=function(e,i,r,a){var t=i[0],n=i[1];return e[0]=t+a*(r[0]-t),e[1]=n+a*(r[1]-n),e},a.random=function(e,t){t=t||1;var i=2*T.c()*f;return e[0]=d(i)*t,e[1]=l(i)*t,e},a.transformMat2=function(e,t,i){var r=t[0],a=t[1];return e[0]=i[0]*r+i[2]*a,e[1]=i[1]*r+i[3]*a,e},a.transformMat2d=function(e,t,i){var r=t[0],a=t[1];return e[0]=i[0]*r+i[2]*a+i[4],e[1]=i[1]*r+i[3]*a+i[5],e},a.transformMat3=function(e,t,i){var r=t[0],a=t[1];return e[0]=i[0]*r+i[3]*a+i[6],e[1]=i[1]*r+i[4]*a+i[7],e},a.transformMat4=function(e,t,i){let r=t[0],a=t[1];return e[0]=i[0]*r+i[4]*a+i[12],e[1]=i[1]*r+i[5]*a+i[13],e},a.rotate=function(e,t,i,r){let a=t[0]-i[0],n=t[1]-i[1],o=l(r),s=d(r);return e[0]=a*s-n*o+i[0],e[1]=a*o+n*s+i[1],e},a.angle=function(e,t){let i=e[0],r=e[1],a=t[0],o=t[1],s=i*i+r*r;0<s&&(s=1/n(s));let d=a*a+o*o;0<d&&(d=1/n(d));let l=(i*a+r*o)*s*d;return 1<l?0:-1>l?f:c(l)},a.str=function(e){return'vec2('+e[0]+', '+e[1]+')'},a.exactEquals=function(e,t){return e[0]===t[0]&&e[1]===t[1]},a.equals=function(e,t){let i=e[0],r=e[1],a=t[0],n=t[1];return m(i-a)<=T.b*u(1,m(i),m(a))&&m(r-n)<=T.b*u(1,m(r),m(n))};var T=o(6);a.len=v;a.sub=g;a.mul=x;a.div=b;a.dist=h;a.sqrDist=E;a.sqrLen=_;const y=function(){let e=p();return function(t,r,a,n,o,d){let u,i;for(r||(r=2),a||(a=0),i=n?s(n*r+a,t.length):t.length,u=a;u<i;u+=r)e[0]=t[u],e[1]=t[u+1],o(e,e,d),t[u]=e[0],t[u+1]=e[1];return t}}();a.forEach=y},function(e,t,i){'use strict';var r=i(1),a=i(18);class n extends a.a{constructor(e={}){super(e),this.left=e.left||-1,this.right=e.right||1,this.bottom=e.bottom||-1,this.top=e.top||1,this.isOrthographicCamera=!0}updateProjectionMatrix(){r.b.ortho(this.projectionMatrix,this.left,this.right,this.bottom,this.top,this.near,this.far)}}t.a=n},function(e,t,i){'use strict';var r=i(1),a=i(18);class n extends a.a{constructor(e){super(e),this.isPespectiveCamera=!0}updateProjectionMatrix(){r.b.perspective(this.projectionMatrix,this.fov,this.aspect,this.near,this.far)}}t.a=n},function(e,t,i){'use strict';var r=i(1),a=i(36),n=i(17),o=i(8),s=i(12),d=i(2);const l=r.b.create(),u=r.e.create(),c=new d.a;let m;const p=new d.a,g=new d.a,x=new d.a,b=new s.a,h=new s.a,E=new s.a,f=new n.a;t.a=class{constructor(e,t,i,r){this.ray=new a.a,this.near=i||0,this.far=r||Infinity}setFromCamera(e,t,i){i&&i.isPespectiveCamera&&(this.ray.origin.copy(i.position),r.e.copy(u,[e.x,e.y,0.5]),r.b.multiply(l,i.projectionMatrix,i.worldInverseMatrix),r.b.invert(l,l),r.e.transformMat4(u,u,l),r.e.sub(u,u,i.position.v),r.e.normalize(u,u),c.set(u[0],u[1],u[2]),this.ray.direction.copy(c))}uvIntersection(e,t,i,r){return m=Object(o.barycoordFromPoint)(e.v,t.v,i.v,r.v),b.scale(m.x),h.scale(m.y),E.scale(m.z),b.add(h).add(E),b.clone()}intersectObject(e){if(!e.visible)return;let t,i,a;if(void 0===e.boundingSphere&&e.computeBoundingSphere(),f.copy(e.boundingSphere),f.applyMatrix(e.modelMatrix),!!this.ray.intersectsSphere(f)){for(const n of e.geometry.faces)if(r.e.copy(p.v,n.vertices[0].v),r.e.copy(g.v,n.vertices[1].v),r.e.copy(x.v,n.vertices[2].v),r.e.transformMat4(p.v,p.v,e.modelMatrix),r.e.transformMat4(g.v,g.v,e.modelMatrix),r.e.transformMat4(x.v,x.v,e.modelMatrix),t=this.ray.intersectTriangle(p,g,x),t){r.d.copy(b.v,e.geometry.uvs[n.uvs[0]].v),r.d.copy(h.v,e.geometry.uvs[n.uvs[1]].v),r.d.copy(E.v,e.geometry.uvs[n.uvs[2]].v),a=n,i=this.uvIntersection(t,p,g,x);break}return t?{point:t,uv:i,face:a}:null}}}},function(e,t,i){'use strict';var r=i(14),a=i(37),n=i(5),o=i(3),s=i(0),d=i(16);const l=i(56);let u;t.a=class{constructor(e){this.width=o.RENDERER_DEFAULT_WIDTH,this.height=o.RENDERER_DEFAULT_HEIGHT,this.ratio=o.RENDERER_DEFAULT_WIDTH/o.RENDERER_DEFAULT_HEIGHT,this.preserveDrawingBuffer=!1,this.pixelRatio=1,this.prefferedContext=o.RENDERER_DEFAULT_CONTEXT,this.autoClear=!0,this.clearColor={r:0,g:0,b:0,a:1},Object.assign(this,e),this.canvas=document.createElement('canvas'),this.canvas.width=this.width,this.canvas.height=this.height;const t={preserveDrawingBuffer:this.preserveDrawingBuffer},i=Object(a.a)();if(i){let e;if(i.webgl2&&this.prefferedContext===o.WEBGL2_CONTEXT){e=o.WEBGL2_CONTEXT;const i=this.canvas.getContext('webgl2',t);s.set(i,e)}else{e=o.WEBGL_CONTEXT;const i=this.canvas.getContext('webgl',t)||this.canvas.getContext('experimental-webgl',t);s.set(i,e)}}else return void Object(r.b)('Webgl not supported');Object(r.a)(`%c${l.name} ${l.version} webgl${s.webgl2?2:''}`,'padding: 1px; background: #222; color: #ff00ff'),u=s.get(),n.set(u),s.webgl2&&d.setup(),this.viewport={x:0,y:0,width:u.drawingBufferWidth,height:u.drawingBufferHeight},this.setClearColor(),u.enable(u.DEPTH_TEST)}setClearColor(e=0,t=0,i=0,r=1){this.clearColor.r=e,this.clearColor.g=t,this.clearColor.b=i,this.clearColor.a=r}setSize(e,t){const i=e*this.pixelRatio,r=t*this.pixelRatio;(i!==this.width||r!==this.height)&&(this.width=e*this.pixelRatio,this.height=t*this.pixelRatio,this.ratio=this.width/this.height,this.canvas.width=this.width,this.canvas.height=this.height,this.canvas.style.width=`${e}px`,this.canvas.style.height=`${t}px`,this.setViewport(0,0,e,t))}setDevicePixelRatio(e=1){this.pixelRatio=e||1,this.setSize(this.width,this.height)}setSissorTest(e=!1){u=s.get(),e?u.enable(u.SCISSOR_TEST):u.disable(u.SCISSOR_TEST)}setSissor(e,t,i,r){u=s.get(),u.scissor(e*this.pixelRatio,t*this.pixelRatio,i*this.pixelRatio,r*this.pixelRatio)}setViewport(e,t,i,r){this.viewport.x=e*this.pixelRatio,this.viewport.y=t*this.pixelRatio,this.viewport.width=i*this.pixelRatio,this.viewport.height=r*this.pixelRatio}render(e,t){u=s.get(),u.viewport(this.viewport.x,this.viewport.y,this.viewport.width,this.viewport.height),u.clearColor(this.clearColor.r,this.clearColor.g,this.clearColor.b,this.clearColor.a),this.autoClear&&u.clear(u.COLOR_BUFFER_BIT|u.DEPTH_BUFFER_BIT),e.update(),u instanceof WebGL2RenderingContext&&d.updateProjectionView(u,t.projectionMatrix),e.objects.forEach((e)=>{e.isInstanced?e.drawInstance(t):e.draw(t)})}}},function(e){e.exports={name:'ixviii.medium',version:'0.4.3',description:'Progressive WebGL toolkit for art.',main:'lib/ixviii.medium.js',scripts:{start:'concurrently \'npm run server\' \'npm run examples:js\' \'npm run examples:html\'',server:'live-server ./examples --quiet --port=3000 --watch=\'js/*,assets/**/*,*.html\' --ignore=\'src\'',"examples:js":'webpack --config webpack.config.examples.js --colors --watch',"examples:html":'node ./pug.config.js',"examples:build":'NODE_ENV=production webpack --config webpack.config.examples.js --colors; node ./pug.config.js',build:'NODE_ENV=production npm run lint; webpack --config webpack.config.build.js --colors; NODE_ENV=production webpack --config webpack.config.build.js --colors',prepublish:'npm run build',formatting:'prettier --write --single-quote --print-width 80 \'./src/**/*.ts\'',"formatting:examples":'prettier --write --single-quote --print-width 80 \'./examples/src/js/**/*.js\'',"lint:src":'tslint --fix ./src/**/*.ts',"lint:examples":'eslint --fix --ext .js ./examples/src ./internals --cache',lint:'npm run lint:src; npm run lint:examples;',precommit:'npm run lint'},repository:{type:'git',url:'https://github.com/amelierosser/medium.git'},author:'Amelie Rosser <amelierosser1986@gmail.com> (https://www.ixviii.io)',license:'MIT',bugs:{url:'https://github.com/amelierosser/medium/issues'},homepage:'https://github.com/amelierosser/medium',devDependencies:{"@types/gl-matrix":'^2.3.0',"@types/node":'^10.5.2',"@types/webgl2":'^0.0.2',"babel-cli":'^6.26.0',"babel-eslint":'^8.0.0',"babel-loader":'^7.1.2',"babel-plugin-module-resolver":'^2.7.1',"babel-plugin-transform-class-properties":'^6.24.1',"babel-preset-env":'^1.6.0',"babel-preset-minify":'^0.2.0',"babili-webpack-plugin":'^0.1.2',concurrently:'^3.5.0',eslint:'^4.6.1',"eslint-config-airbnb":'^15.1.0',"eslint-config-airbnb-base":'^12.0.0',"eslint-config-prettier":'^2.4.0',"eslint-plugin-import":'^2.7.0',"eslint-plugin-prettier":'^2.2.0',husky:'^0.14.3',install:'^0.10.1',"json-loader":'^0.5.7',"live-server":'^1.2.0',prettier:'^1.6.1',"pug-cli":'^1.0.0-alpha6',"stats-js":'^1.0.0-alpha1',"ts-loader":'^2.3.7',tslint:'^5.7.0',"tslint-config-prettier":'^1.5.0',typescript:'^2.5.2',webpack:'^3.5.6'},dependencies:{"@types/dat-gui":'^0.6.3',"bezier-js":'^2.2.3',"dat-gui":'^0.5.0',"file-name":'^0.1.0',"gl-matrix":'^2.4.0',"parse-hdr":'^1.0.0',"query-string":'^5.0.0',shelljs:'^0.7.8',"simplex-noise":'^2.3.0',uuid:'^3.1.0',"webgl-obj-loader":'^0.1.1'}}},function(e,t,i){'use strict';var r=i(0),a=i(16);let n;t.a=class{constructor(e){this.pixelRatio=e.pixelRatio||1,this.width=e.width*this.pixelRatio,this.height=e.height*this.pixelRatio,this.ratio=this.width/this.height,this.viewport={x:0,y:0,width:this.width,height:this.height},this.autoClear=!0,this.clearColor={r:0,g:0,b:0,a:1},n=r.get(),this.frameBuffer=n.createFramebuffer(),n.bindFramebuffer(n.FRAMEBUFFER,this.frameBuffer),this.texture=n.createTexture(),n.bindTexture(n.TEXTURE_2D,this.texture),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.LINEAR),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.LINEAR),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,this.width,this.height,0,n.RGBA,n.UNSIGNED_BYTE,null),this.renderBuffer=n.createRenderbuffer(),n.bindRenderbuffer(n.RENDERBUFFER,this.renderBuffer),n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_COMPONENT16,this.width,this.height),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,this.texture,0),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,this.renderBuffer),n.bindTexture(n.TEXTURE_2D,null),n.bindRenderbuffer(n.RENDERBUFFER,null),n.bindFramebuffer(n.FRAMEBUFFER,null)}setClearColor(e=0,t=0,i=0,r=1){this.clearColor.r=e,this.clearColor.g=t,this.clearColor.b=i,this.clearColor.a=r}setSize(e,t){const i=e*this.pixelRatio,r=t*this.pixelRatio;(i!==this.width||r!==this.height)&&(this.width=e*this.pixelRatio,this.height=t*this.pixelRatio,this.ratio=this.width/this.height,n.bindTexture(n.TEXTURE_2D,this.texture),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,this.width,this.height,0,n.RGBA,n.UNSIGNED_BYTE,null),n.bindTexture(n.TEXTURE_2D,null),n.bindRenderbuffer(n.RENDERBUFFER,this.renderBuffer),n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_COMPONENT16,this.width,this.height),n.bindRenderbuffer(n.RENDERBUFFER,null),this.setViewport(0,0,e,t))}setSissorTest(e=!1){n=r.get(),e?n.enable(n.SCISSOR_TEST):n.disable(n.SCISSOR_TEST)}setSissor(e,t,i,a){n=r.get(),n.scissor(e*this.pixelRatio,t*this.pixelRatio,i*this.pixelRatio,a*this.pixelRatio)}setViewport(e,t,i,r){this.viewport.x=e*this.pixelRatio,this.viewport.y=t*this.pixelRatio,this.viewport.width=i*this.pixelRatio,this.viewport.height=r*this.pixelRatio}render(e,t){n=r.get(),n.viewport(this.viewport.x,this.viewport.y,this.viewport.width,this.viewport.height),n.bindFramebuffer(n.FRAMEBUFFER,this.frameBuffer),this.autoClear&&(n.clearColor(this.clearColor.r,this.clearColor.g,this.clearColor.b,this.clearColor.a),n.clear(n.COLOR_BUFFER_BIT|n.DEPTH_BUFFER_BIT)),e.update(),n instanceof WebGL2RenderingContext&&a.updateProjectionView(n,t.projectionMatrix),e.objects.forEach((e)=>{e.isInstanced?e.drawInstance(t):e.draw(t)}),n.bindTexture(n.TEXTURE_2D,this.texture),n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null)}}},function(e,t){'use strict';t.a=class{constructor(){this.objects=[],this.pointLights=void 0,this.directionalLights=void 0}add(e){this.objects.push(e)}remove(e,t=!1){const i=this.objects.indexOf(e);-1!==i&&(this.objects.splice(i,1),t&&(e.dispose(),e=void 0))}update(){this.ambientLight&&(this.ambientLight.update(),this.ambientLight.bind()),this.directionalLights&&(this.directionalLights.update(),this.directionalLights.bind()),this.pointLights&&(this.pointLights.update(),this.pointLights.bind())}}},function(e,t,i){'use strict';i.d(t,'b',function(){return a}),i.d(t,'a',function(){return n});var r=i(4);const a=`${r.a}
	#HOOK_PRECISION
	#HOOK_DEFINES

	layout(std140) uniform;

	in vec3 vDiffuse;
	in vec3 vPosition;

	#ifdef normals
	in vec3 vNormal;
	#endif

	#ifdef uv
	in vec2 vUv;
	#endif

	out vec4 outgoingColor;

	#HOOK_FRAGMENT_PRE

	void main(void){

		vec3 color = vDiffuse;

		#ifdef normals
		vec3 normal = normalize(vNormal);
		#endif

		#HOOK_FRAGMENT_MAIN

		outgoingColor = vec4(color.rgb, 1.0);

		#HOOK_FRAGMENT_END
	}
`,n=`
	#HOOK_PRECISION
	#HOOK_DEFINES

	varying vec3 vDiffuse;
	varying vec3 vPosition;

	#ifdef normals
	varying vec3 vNormal;
	#endif

	#ifdef uv
	varying vec2 vUv;
	#endif

	#HOOK_FRAGMENT_PRE

	void main(void){

		vec3 color = vDiffuse;

		#ifdef normals
		vec3 normal = normalize(vNormal);
		#endif

		#HOOK_FRAGMENT_MAIN

		gl_FragColor = vec4(color.rgb, 1.0);

		#HOOK_FRAGMENT_END
	}
`},function(e,t,i){'use strict';i.d(t,'b',function(){return s}),i.d(t,'a',function(){return d});var r=i(20),a=i(21),n=i(4),o=i(22);const s=`${n.a}
	#HOOK_PRECISION
	#HOOK_DEFINES

	layout(std140) uniform;

	in vec3 vDiffuse;
	in vec3 vPosition;

	#ifdef normals
	in vec3 vNormal;
	#endif

	#ifdef uv
	in vec2 vUv;
	#endif

	#ifdef ambientLight
	${r.ambientLightEs300}
	#endif

	#ifdef directionalLights
	${a.directionalLightsEs300}
	${o.lambertEs300}
	#endif

	out vec4 outgoingColor;


	#HOOK_FRAGMENT_PRE

	void main(void){

		vec3 color = vec3(0.0);

		#ifdef normals
		vec3 normal = normalize(vNormal);
		#endif

		#HOOK_FRAGMENT_MAIN

		#ifdef directionalLights
		for (int i = 0; i < #HOOK_DIRECTIONAL_LIGHTS; i++) {
			color += CalculateDirectionalLight(uDirectionalLights[i], normal);
		}
		#endif

		outgoingColor = vec4(color.rgb, 1.0);

		#HOOK_FRAGMENT_END
	}
`,d=`
	#HOOK_PRECISION
	#HOOK_DEFINES

	varying vec3 vDiffuse;
	varying vec3 vPosition;

	#ifdef normals
	varying vec3 vNormal;
	#endif

	#ifdef uv
	varying vec2 vUv;
	#endif

	#ifdef ambientLight
	${r.ambientLightEs100}
	#endif

	#ifdef directionalLights
	${a.directionalLightsEs100}
	${o.lambertEs100}
	#endif

	#HOOK_FRAGMENT_PRE

	void main(void){

		vec3 color = vec3(0.0);

		#ifdef normals
		vec3 normal = normalize(vNormal);
		#endif

		#HOOK_FRAGMENT_MAIN

		#ifdef directionalLights
		for (int i = 0; i < #HOOK_DIRECTIONAL_LIGHTS; i++) {
			color += CalculateDirectionalLight(uDirectionalLights[i], normal);
		}
		#endif

		gl_FragColor = vec4(color.rgb, 1.0);

		#HOOK_FRAGMENT_END
	}
`},function(e,t,i){'use strict';i.d(t,'b',function(){return l}),i.d(t,'a',function(){return u});var r=i(20),a=i(21),n=i(4),o=i(22),s=i(62),d=i(38);const l=`${n.a}
	#HOOK_PRECISION
	#HOOK_DEFINES

	layout(std140) uniform;

	in vec3 vDiffuse;
	in vec3 vPosition;
	in vec4 vWorldPosition;

	uniform vec3 uCameraPosition;

	#ifdef normals
	in vec3 vNormal;
	#endif

	#ifdef uv
	in vec2 vUv;
	#endif

	#ifdef ambientLight
	${r.ambientLightEs300}
	#endif

	#ifdef directionalLights
	${a.directionalLightsEs300}
	${o.lambertEs300}
	#endif

	#ifdef pointLights
	${d.pointLightsEs300}
	${s.b}
	#endif

	out vec4 outgoingColor;

	#HOOK_FRAGMENT_PRE

	void main(void){

		vec3 color = vec3(0.0);

		#ifdef normals
		vec3 normal = normalize(vNormal);
		#endif

		#HOOK_FRAGMENT_MAIN

		#ifdef directionalLights
		for (int i = 0; i < #HOOK_DIRECTIONAL_LIGHTS; i++) {
			color += CalculateDirectionalLight(uDirectionalLights[i], normal);
		}
		#endif

		#ifdef pointLights
		for (int i = 0; i < #HOOK_POINT_LIGHTS; i++) {
			color += CalculatePointLight(uPointLights[i], normal);
		}
		#endif

		outgoingColor = vec4(color.rgb, 1.0);

		#HOOK_FRAGMENT_END
	}
`,u=`
	#HOOK_PRECISION
	#HOOK_DEFINES

	varying vec3 vDiffuse;
	varying vec3 vPosition;
	varying vec4 vWorldPosition;

	#ifdef normals
	varying vec3 vNormal;
	#endif

	#ifdef uv
	varying vec2 vUv;
	#endif

	#ifdef ambientLight
	${r.ambientLightEs100}
	#endif

	#ifdef directionalLights
	${a.directionalLightsEs100}
	${o.lambertEs100}
	#endif

	#ifdef pointLights
	${d.pointLightsEs100}
	${s.a}
	#endif

	#HOOK_FRAGMENT_PRE

	void main(void){

		vec3 color = vec3(0.0);

		#ifdef normals
		vec3 normal = normalize(vNormal);
		#endif

		#HOOK_FRAGMENT_MAIN

		#ifdef directionalLights
		for (int i = 0; i < #HOOK_DIRECTIONAL_LIGHTS; i++) {
			color += CalculateDirectionalLight(uDirectionalLights[i], normal);
		}
		#endif

		#ifdef pointLights
		for (int i = 0; i < #HOOK_POINT_LIGHTS; i++) {
			color += CalculatePointLight(uPointLights[i], normal);
		}
		#endif

		gl_FragColor = vec4(color.rgb, 1.0);

		#HOOK_FRAGMENT_END
	}
`},function(e,t,i){'use strict';i.d(t,'b',function(){return r}),i.d(t,'a',function(){return a});const r=`
	vec3 CalculatePointLight(PointLight light, vec3 normal) {
		vec3 lightDirection = normalize(light.position.xyz - vWorldPosition.xyz);

		// diffuse shading
		float diff = max(dot(normal, lightDirection), 0.0);
		// specular shading
		vec3 reflectDirection = reflect(-lightDirection, normal);

		// Fix the spec from showing on the backside by multiplying it by the lambert term
		float spec = diff * pow(max(dot(lightDirection, reflectDirection), 0.0), light.shininess.x);
		// attenuation
		float constant = 1.0;
		float linear = 0.09;
		float quadratic = 0.032;

		float dist = length(light.position.xyz);
		float attenuation = 1.0 / (constant + linear * dist + quadratic * (dist * dist));

		vec3 ambientColor = vec3(0.5);
		float ambientIntensity = 0.5;

		#ifdef ambientLight
		ambientColor = uAmbientLight.color.rgb;
		ambientIntensity = uAmbientLight.intensity.x;
		#endif

		// combine results
		vec3 ambient = (ambientColor * ambientIntensity) * vDiffuse;
		vec3 diffuse = diff * vDiffuse;
		vec3 specular = light.specularColor.rgb * spec * light.shininess.x;
		ambient  *= attenuation;
		diffuse  *= attenuation;
		specular *= attenuation;
		return (ambient + diffuse + specular);
	}
`,a=`
	vec3 CalculatePointLight(PointLight light, vec3 normal) {
		vec3 lightDirection = normalize(light.position - vWorldPosition.xyz);

		// diffuse shading
		float diff = max(dot(normal, lightDirection), 0.0);
		// specular shading
		vec3 reflectDirection = reflect(-lightDirection, normal);

		// Fix the spec from showing on the backside by multiplying it by the lambert term
		float spec = diff * pow(max(dot(lightDirection, reflectDirection), 0.0), light.shininess);
		// attenuation
		float constant = 1.0;
		float linear = 0.09;
		float quadratic = 0.032;

		float dist = length(light.position);
		float attenuation = 1.0 / (constant + linear * dist + quadratic * (dist * dist));

		vec3 ambientColor = vec3(0.5);
		float ambientIntensity = 0.5;

		#ifdef ambientLight
		ambientColor = uAmbientLight.color;
		ambientIntensity = uAmbientLight.intensity;
		#endif

		// combine results
		vec3 ambient = (ambientColor * ambientIntensity) * vDiffuse;
		vec3 diffuse = diff * vDiffuse;
		vec3 specular = light.specularColor * spec * light.shininess;
		ambient  *= attenuation;
		diffuse  *= attenuation;
		specular *= attenuation;
		return (ambient + diffuse + specular);
	}
`},function(e,t,i){'use strict';i.d(t,'b',function(){return o}),i.d(t,'a',function(){return s});var r=i(4),a=i(39),n=i(11);const o=`${r.a}
	${a.b}
	${a.c}
	#HOOK_DEFINES

	layout(std140) uniform;

	${n.a}

	uniform mat4 uProjectionMatrix;
	uniform mat4 uModelViewMatrix;
	uniform mat4 uModelMatrix;
	uniform mat3 uNormalMatrix;

	in vec3 aVertexPosition;
	out vec3 vPosition;
	out vec4 vWorldPosition;

	// Camera
	uniform vec3 uCameraPosition;

	#ifdef vertexColors
	in vec3 aVertexColor;
	#endif

	// Color
	uniform vec3 uDiffuse;
	out vec3 vDiffuse;

	// Normal
	#ifdef normals
	in vec3 aVertexNormal;
	out vec3 vNormal;
	#endif

	// Uv
	#ifdef uv
	in vec2 aUv;
	out vec2 vUv;
	#endif

	#HOOK_VERTEX_PRE

	void main(void){

		vDiffuse = uDiffuse;

		// Override for custom positioning
		vec3 transformed = vec3(0.0);

		#ifdef vertexColors
		vDiffuse = aVertexColor;
		#endif

		#ifdef uv
		vUv = aUv;
		#endif

		#HOOK_VERTEX_MAIN

		#ifdef normals
		vNormal = uNormalMatrix * aVertexNormal;
		#endif

		// Vertex position + offset
		vPosition = aVertexPosition + transformed;

		// Calculate world position of vertex with transformed
		vWorldPosition = uModelMatrix * vec4(aVertexPosition + transformed, 1.0);

		gl_Position = uProjectionView.projectionMatrix * uModelViewMatrix * vec4(vPosition, 1.0);

		#HOOK_VERTEX_END
	}
`,s=`

	${a.b}
	${a.c}
	#HOOK_DEFINES

	// Position
	uniform mat4 uProjectionMatrix;
	uniform mat4 uModelViewMatrix;
	uniform mat4 uModelMatrix;
	uniform mat3 uNormalMatrix;
	attribute vec3 aVertexPosition;
	varying vec3 vPosition;
	varying vec4 vWorldPosition;

	// Camera
	uniform vec3 uCameraPosition;

	#ifdef vertexColors
	attribute vec3 aVertexColor;
	#endif

	// Color
	uniform vec3 uDiffuse;
	varying vec3 vDiffuse;

	// Normal
	#ifdef normals
	attribute vec3 aVertexNormal;
	varying vec3 vNormal;
	#endif

	// Uv
	#ifdef uv
	attribute vec2 aUv;
	varying vec2 vUv;
	#endif

	#HOOK_VERTEX_PRE

	void main(void){

		vDiffuse = uDiffuse;

		// Override for custom positioning
		vec3 transformed = vec3(0.0);

		#ifdef vertexColors
		vDiffuse = aVertexColor;
		#endif

		#ifdef uv
		vUv = aUv;
		#endif

		#HOOK_VERTEX_MAIN

		#ifdef normals
		vNormal = uNormalMatrix * aVertexNormal;
		#endif

		// Vertex position + offset
		vPosition = aVertexPosition + transformed;

		// Calculate world position of vertex with transformed
		vWorldPosition = uModelMatrix * vec4(aVertexPosition + transformed, 1.0);

		gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(vPosition, 1.0);

		#HOOK_VERTEX_END
	}
`},function(e,t,i){'use strict';t.a=function(e,t){if(r.webgl2)return e;const i='vertex'===t?u:c;return i.forEach((t)=>{e='function'==typeof t.replace?t.replace(e):e.replace(t.match,t.replace)}),e};var r=i(0),a=i(4);const n=(e)=>new RegExp(`\\b${e}\\b`,'gi'),o=(e)=>new RegExp(`${e}`,'gi'),s=[{match:n('in'),replace:'attribute'},{match:n('out'),replace:'varying'}],d=[{match:n('in'),replace:'varying'},{match:o('out vec4 outgoingColor;'),replace:''},{match:n('outgoingColor'),replace:'gl_FragColor'},{match:n('textureProj'),replace:'texture2DProj'},{match:n('texture'),replace(e){const t=/\btexture\b/gi,i=/\btexture\b/i,r=new RegExp(/texture\(([^)]+)\)/,'i'),a=e.match(t);let n='';if(null===a)return e;for(const t of a){const t=e.match(r)[0];if(t){const i=t.replace('texture(','').split(',')[0];let r=e.match(`(.*?) ${i}`,'i')[1];switch(r=r.replace(/^\s+/g,''),r=r.split(' ')[1],r){case'sampler2D':{n='texture2D';break}case'samplerCube':{n='textureCube';break}default:}}e=e.replace(i,n)}return e}}],l=[{match:o(a.a),replace:''}],u=[...l,...s],c=[...l,...d]},function(e,t,i){'use strict';var r=i(8),a=i(14),n=i(0);let o;t.a=class{constructor(){o=n.get(),this.program=o.createProgram(),this.created=!1,this.uniformBlocks={},this.attributeLocations={}}link(e,t,i){if(this.compiledVertexShader=this.compile('vs',e),this.compiledFragmentShader=this.compile('fs',t),this.compiledVertexShader&&this.compiledFragmentShader){if(o.attachShader(this.program,this.compiledVertexShader),o.attachShader(this.program,this.compiledFragmentShader),i instanceof Array&&o instanceof WebGL2RenderingContext&&o.transformFeedbackVaryings(this.program,i,o.SEPARATE_ATTRIBS),o.linkProgram(this.program),o.validateProgram(this.program),!o.getProgramParameter(this.program,o.LINK_STATUS)){const e=o.getProgramInfoLog(this.program);Object(a.b)('Failed to initialise shaders',e)}this.created=!0}}compile(e,t){o=n.get();let i;return i='vs'===e?o.createShader(o.VERTEX_SHADER):o.createShader(o.FRAGMENT_SHADER),o.shaderSource(i,t),o.compileShader(i),o.getShaderParameter(i,o.COMPILE_STATUS)?i:(Object(a.b)(`Failed to compile '${e}' shader:`),Object(a.b)(o.getShaderInfoLog(i)),Object(a.b)(Object(r.addLineNumbers)(t)),!1)}setAttributeLocation(e){this.created&&(o=n.get(),this.attributeLocations[e]=o.getAttribLocation(this.program,e),o.enableVertexAttribArray(this.attributeLocations[e]))}setAttributePointer(e,t){o=n.get(),o.vertexAttribPointer(this.attributeLocations[e],t,o.FLOAT,!1,0,0)}setAttributeInstancedPointer(e,t){o=n.get(),o.vertexAttribPointer(this.attributeLocations[e],t,o.FLOAT,!1,0,0)}setUniformLocation(e,t){this.created&&(o=n.get(),e[t].location=o.getUniformLocation(this.program,t))}setUniformBlockLocation(e,t,i){o=n.get(),o instanceof WebGL2RenderingContext&&(this.uniformBlocks[e]=o.getUniformBlockIndex(this.program,e),o.uniformBlockBinding(this.program,this.uniformBlocks[e],i),o.bindBufferBase(o.UNIFORM_BUFFER,i,t))}bind(){o=n.get(),o.useProgram(this.program)}dispose(){o=n.get();let e;Object.keys(this.attributeLocations).forEach((t)=>{e=this.attributeLocations[t],o.disableVertexAttribArray(e)}),o.detachShader(this.program,this.compiledVertexShader),o.detachShader(this.program,this.compiledFragmentShader),o.deleteProgram(this.program)}}},function(e,t,i){'use strict';var r=i(15),a=i(23),n=i(25),o=i(8),s=i(26),d=i(14),l=i(0),c=i(24);let m;class f extends r.a{constructor(e){super(),this.onTextureLoaded=(e)=>{this.image=e,this.update(this.image),this.emit('loaded')},this.onTextureError=(e)=>{Object(d.b)(e),this.emit('error',e)},m=l.get(),this.src=null,this.magFilter=m.NEAREST,this.minFilter=m.NEAREST,this.wrapS=m.CLAMP_TO_EDGE,this.wrapT=m.CLAMP_TO_EDGE,this.resizeToPow2=!1,Object.assign(this,e);const{canvas:t}=Object(s.a)(1,1);this.texture=m.createTexture(),m.bindTexture(m.TEXTURE_2D,this.texture),m.texImage2D(m.TEXTURE_2D,0,m.RGBA,m.RGBA,m.UNSIGNED_BYTE,t),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MAG_FILTER,this.magFilter),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_MIN_FILTER,this.minFilter),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_S,this.wrapS),m.texParameteri(m.TEXTURE_2D,m.TEXTURE_WRAP_T,this.wrapT),m.bindTexture(m.TEXTURE_2D,null),this.src&&(this._isHdr='hdr'===this.src.split('.').pop(),this.load(this.src))}load(e){this._isHdr?Object(a.a)(e).then(this.onTextureLoaded).catch(this.onTextureError):Object(n.a)(e).then(this.onTextureLoaded).catch(this.onTextureError)}updateImage(e){this.src=e||this.src,this.load(this.src)}update(e){m=l.get(),m.bindTexture(m.TEXTURE_2D,this.texture),m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,!0),e instanceof c.a&&m instanceof WebGL2RenderingContext?(this.image=e,m.texImage2D(m.TEXTURE_2D,0,m.RGBA16F,e.width,e.height,0,m.RGBA,m.FLOAT,e.data)):(e instanceof HTMLCanvasElement||e instanceof HTMLImageElement)&&m.texImage2D(m.TEXTURE_2D,0,m.RGBA,m.RGBA,m.UNSIGNED_BYTE,e),m.bindTexture(m.TEXTURE_2D,null)}_resizeImage(e){if(!this.resizeToPow2||e instanceof c.a)return this.image;if(Object(o.isPowerOf2)(e.width)&&Object(o.isPowerOf2)(e.height))return e;const t=Object(o.nearestPowerOf2)(u(e.width,e.height)),{canvas:i,ctx:r}=Object(s.a)(t,t);return r.drawImage(e,0,0,t,t),i}dispose(){m=l.get(),m.deleteTexture(this.texture),this.texture=null}}t.a=f},function(e){function t(e,t,r,a,n,o){function s(t){var i=0;do t[i++]=e[a];while(++a<f&&i<t.length);return i}function d(t,i,r){var n=0;do t[i+n++]=e[a];while(++a<f&&n<r);return n}function l(e,t,i,r){var a=4*r,n=d(t,i,a);if(n<a)throw new Error('Error reading raw pixels: got '+n+' bytes, expected '+a)}for(var u=[,,,,],c=null,m=[,,],f=e.length,p,g,x;0<o;){if(s(u)<u.length)throw new Error('Error reading bytes: expected '+u.length);if(2!=u[0]||2!=u[1]||0!=(128&u[2]))return t[r++]=u[0],t[r++]=u[1],t[r++]=u[2],t[r++]=u[3],void l(e,t,r,n*o-1);if(((255&u[2])<<8|255&u[3])!=n)throw new Error('Wrong scanline width '+((255&u[2])<<8|255&u[3])+', expected '+n);null==c&&(c=Array(4*n)),p=0;for(var b=0;4>b;b++)for(g=(b+1)*n;p<g;){if(s(m)<m.length)throw new Error('Error reading 2-byte buffer');if(128<(255&m[0])){if(x=(255&m[0])-128,0==x||x>g-p)throw new Error('Bad scanline data');for(;0<x--;)c[p++]=m[1]}else{if(x=255&m[0],0==x||x>g-p)throw new Error('Bad scanline data');if(c[p++]=m[1],0<--x){if(d(c,p,x)<x)throw new Error('Error reading non-run data');p+=x}}}for(var b=0;b<n;b++)t[r+0]=c[b],t[r+1]=c[b+n],t[r+2]=c[b+2*n],t[r+3]=c[b+3*n],r+=4;o--}}e.exports=function(a){function n(){var e='';do{var t=a[s];if(t==l){++s;break}e+=String.fromCharCode(t)}while(++s<d);return e}a instanceof ArrayBuffer&&(a=new Uint8Array(a));for(var s=0,d=a.length,l=10,u=0,c=0,m=1,p=1,x=!1,h=0;20>h;h++){var i=n(),E;if(E=i.match('#\\?RADIANCE'));else if(E=i.match('FORMAT=32-bit_rle_rgbe'))x=!0;else if(E=i.match('EXPOSURE=\\s*([0-9]*[.][0-9]*)'))m=+E[1];else if(E=i.match('#.*'));else if(E=i.match('-Y ([0-9]+) \\+X ([0-9]+)')){c=+E[1],u=+E[2];break}}if(!x)throw new Error('File is not run length encoded!');var v=new Uint8Array(4*(u*c)),_=u,y=c;t(a,v,0,s,_,y);for(var T=new Float32Array(4*(u*c)),R=0;R<v.length;R+=4){var A=v[R+0]/255,r=v[R+1]/255,g=v[R+2]/255,b=v[R+3],e=o(2,b-128);A*=e,r*=e,g*=e;var f=R;T[f+0]=A,T[f+1]=r,T[f+2]=g,T[f+3]=1}return{shape:[u,c],exposure:m,gamma:p,data:T}}},function(e,t,i){'use strict';var r=i(15),a=i(0);let n;class o extends r.a{constructor(e){super(),n=a.get();n instanceof WebGL2RenderingContext&&(this.src=null,this.size=null,Object.assign(this,e),this.texture=n.createTexture(),n.activeTexture(n.TEXTURE0),n.bindTexture(n.TEXTURE_3D,this.texture),n.texParameteri(n.TEXTURE_3D,n.TEXTURE_BASE_LEVEL,0),n.texParameteri(n.TEXTURE_3D,n.TEXTURE_MAX_LEVEL,Math.log2(this.size)),n.texParameteri(n.TEXTURE_3D,n.TEXTURE_MIN_FILTER,n.LINEAR_MIPMAP_LINEAR),n.texParameteri(n.TEXTURE_3D,n.TEXTURE_MAG_FILTER,n.LINEAR),n.texImage3D(n.TEXTURE_3D,0,n.R8,this.size,this.size,this.size,0,n.RED,n.UNSIGNED_BYTE,this.src),n.generateMipmap(n.TEXTURE_3D))}dispose(){n=a.get();n instanceof WebGL2RenderingContext&&(n.deleteTexture(this.texture),this.texture=null)}}t.a=o},function(e,t,i){'use strict';var r=i(15),a=i(23),n=i(25),o=i(8),s=i(26),d=i(14),l=i(0),c=i(24);let m;class f extends r.a{constructor(e){super(),this.onTextureLoaded=(e)=>{this.images=e,this.update(this.images),this.emit('loaded')},this.onTextureError=(e)=>{Object(d.b)(e),this.emit('error',e)},m=l.get(),this.src=[,,,,,,].fill(''),this.magFilter=m.LINEAR,this.minFilter=m.LINEAR,this.wrapS=m.CLAMP_TO_EDGE,this.wrapT=m.CLAMP_TO_EDGE,this.resizeToPow2=!1,Object.assign(this,e),this.texture=m.createTexture(),this.images=[],this.loaders=[];const t=[],{canvas:r}=Object(s.a)(1,1);for(let a=0;6>a;a+=1)t.push(r);this.update(t),this._isHdr='hdr'===this.src[0].split('.').pop(),this.src.forEach((e,t)=>{this.loaders[t]=this.load(this.src[t])}),Promise.all(this.loaders).then(this.onTextureLoaded).catch(this.onTextureError)}load(e){return this._isHdr?Object(a.a)(e):Object(n.a)(e)}update(e){m=l.get(),m.bindTexture(m.TEXTURE_CUBE_MAP,this.texture);const t=[m.TEXTURE_CUBE_MAP_POSITIVE_X,m.TEXTURE_CUBE_MAP_NEGATIVE_X,m.TEXTURE_CUBE_MAP_POSITIVE_Y,m.TEXTURE_CUBE_MAP_NEGATIVE_Y,m.TEXTURE_CUBE_MAP_POSITIVE_Z,m.TEXTURE_CUBE_MAP_NEGATIVE_Z];for(let r=0;6>r;r+=1){const i=this._isHdr?e[r]:this._resizeImage(e[r]);m.pixelStorei(m.UNPACK_FLIP_Y_WEBGL,!1),i instanceof c.a?m instanceof WebGL2RenderingContext&&m.texImage2D(t[r],0,m.RGBA16F,i.width,i.height,0,m.RGBA,m.FLOAT,i.data):m.texImage2D(t[r],0,m.RGBA,m.RGBA,m.UNSIGNED_BYTE,i),m.texParameteri(m.TEXTURE_CUBE_MAP,m.TEXTURE_MAG_FILTER,this.magFilter),m.texParameteri(m.TEXTURE_CUBE_MAP,m.TEXTURE_MIN_FILTER,this.minFilter),m.texParameteri(m.TEXTURE_CUBE_MAP,m.TEXTURE_WRAP_S,this.wrapS),m.texParameteri(m.TEXTURE_CUBE_MAP,m.TEXTURE_WRAP_T,this.wrapT)}m.bindTexture(m.TEXTURE_CUBE_MAP,null)}_resizeImage(e){if(!this.resizeToPow2||e instanceof c.a)return e;if(Object(o.isPowerOf2)(e.width)&&Object(o.isPowerOf2)(e.height))return e;const t=Object(o.nearestPowerOf2)(u(e.width,e.height)),{canvas:i,ctx:r}=Object(s.a)(t,t);return r.drawImage(e,0,0,t,t),i}}t.a=f},function(e,t,i){'use strict';var r=i(15),a=i(26),n=i(0);let o;class s extends r.a{constructor(e){super(),this._onCanPlayThrough=()=>{this.emit('canplaythrough')},this._onEnded=()=>{this.emit('ended')},o=n.get(),this.src='',this.magFilter=o.NEAREST,this.minFilter=o.NEAREST,this.wrapS=o.CLAMP_TO_EDGE,this.wrapT=o.CLAMP_TO_EDGE,this.loop=!1,this.autoplay=!0,Object.assign(this,e),this.video=document.createElement('video'),this.video.src=this.src,this.video.loop=this.loop,this.video.autoplay=this.autoplay,this.video.setAttribute('webkitplaysinline','webkitplaysinline'),this.video.setAttribute('playsinline','playsinline'),this.video.addEventListener('canplaythrough',this._onCanPlayThrough,!0),this.video.addEventListener('ended',this._onEnded,!0),this._currentTime=0;const{canvas:t}=Object(a.a)(1,1);this.texture=o.createTexture(),o.bindTexture(o.TEXTURE_2D,this.texture),o.texImage2D(o.TEXTURE_2D,0,o.RGBA,o.RGBA,o.UNSIGNED_BYTE,t),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MAG_FILTER,this.magFilter),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_MIN_FILTER,this.minFilter),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_S,this.wrapS),o.texParameteri(o.TEXTURE_2D,o.TEXTURE_WRAP_T,this.wrapT),o.bindTexture(o.TEXTURE_2D,null)}update(){o=n.get(),this.video.readyState>=this.video.HAVE_CURRENT_DATA&&(this.video.currentTime!==this._currentTime&&(o.bindTexture(o.TEXTURE_2D,this.texture),o.pixelStorei(o.UNPACK_FLIP_Y_WEBGL,!0),o.texImage2D(o.TEXTURE_2D,0,o.RGBA,o.RGBA,o.UNSIGNED_BYTE,this.video),o.bindTexture(o.TEXTURE_2D,null)),this._currentTime=this.video.currentTime)}}t.a=s},function(e,t,i){'use strict';var r=i(7);class a extends r.a{constructor(e=1,t=1,r=1,i){const a=[-1,-1,1,1,-1,1,1,1,1,-1,1,1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,1,1,1,1,1,1,1,-1,-1,-1,-1,1,-1,-1,1,-1,1,-1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,-1,1,-1,-1,-1,-1,-1,1,-1,1,1,-1,1,-1];for(let n=0;n<a.length;n+=3)a[n]*=e,a[n+1]*=t,a[n+2]*=r;super(new Float32Array(a),new Uint16Array([0,1,2,0,2,3,4,5,6,4,6,7,8,9,10,8,10,11,12,13,14,12,14,15,16,17,18,16,18,19,20,21,22,20,22,23]),new Float32Array([0,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,1,0,0,1,0,0,1,0,0,1,0,0,-1,0,0,-1,0,0,-1,0,0,-1,0,0]),new Float32Array([0,0,1,0,1,1,0,1,1,0,1,1,0,1,0,0,0,1,0,0,1,0,1,1,1,1,0,1,0,0,1,0,1,0,1,1,0,1,0,0,0,0,1,0,1,1,0,1]),i)}}t.a=a},function(e,t,i){'use strict';var r=i(1),a=i(2);const n=r.e.create(),o=r.e.create();t.a=class{constructor(e,t,i,r,n,o){this.indices=[e,t,i],this.vertices=[r,n,o],this.uvs=[e,t,i],this.normal=new a.a,this.updateFaceNormal()}updateFaceNormal(){r.e.set(n,0,0,0),r.e.set(o,0,0,0),r.e.subtract(n,this.vertices[2].v,this.vertices[1].v),r.e.subtract(o,this.vertices[0].v,this.vertices[1].v),r.e.cross(n,n,o),r.e.normalize(n,n),this.normal.set(n[0],n[1],n[2])}}},function(e,t,i){'use strict';var r=i(7);class a extends r.a{constructor(e=1,t=1,i=1,r=1,a='XY',n){let o=[];const s=[];let d=[],l=[],c=0;const m=e/i,f=t/r,p=1/i,g=1/r;for(let b=0;b<r;b+=1)for(let n=0;n<i;n+=1){const x=m*n+0.5*-e,h=f*b+0.5*-t,E=n/i,u=b/r;switch(a){case'XZ':{o=o.concat([x,0,h]),o=o.concat([x+m,0,h]),o=o.concat([x+m,0,h+f]),o=o.concat([x,0,h+f]),d=d.concat([0,1,0]),d=d.concat([0,1,0]),d=d.concat([0,1,0]),d=d.concat([0,1,0]),l=l.concat([E,1-u]),l=l.concat([E+p,1-u]),l=l.concat([E+p,1-(u+g)]),l=l.concat([E,1-(u+g)]);break}case'YZ':{o=o.concat([0,h,x]),o=o.concat([0,h,x+m]),o=o.concat([0,h+f,x+m]),o=o.concat([0,h+f,x]),d=d.concat([1,0,0]),d=d.concat([1,0,0]),d=d.concat([1,0,0]),d=d.concat([1,0,0]),l=l.concat([1-E,u]),l=l.concat([1-(E+p),u]),l=l.concat([1-(E+p),u+g]),l=l.concat([1-E,u+g]);break}default:o=o.concat([x,h,0]),o=o.concat([x+m,h,0]),o=o.concat([x+m,h+f,0]),o=o.concat([x,h+f,0]),d=d.concat([0,0,1]),d=d.concat([0,0,1]),d=d.concat([0,0,1]),d=d.concat([0,0,1]),l=l.concat([E,u]),l=l.concat([E+p,u]),l=l.concat([E+p,u+g]),l=l.concat([E,u+g]);}s.push(4*c+0),s.push(4*c+1),s.push(4*c+2),s.push(4*c+0),s.push(4*c+2),s.push(4*c+3),c+=1}super(new Float32Array(o),new Uint16Array(s),new Float32Array(d),new Float32Array(l),n)}}t.a=a},function(e,t,i){'use strict';function r(){return`${u.a}
	precision ${n.capabilities.precision} float;
	in vec3 vColor;
	out vec4 outgoingColor;

	void main(void){
		outgoingColor = vec4(vColor, 1.0);
	}
	`}function a(){return`
	precision ${n.capabilities.precision} float;
	varying vec3 vColor;

	void main(void){
		gl_FragColor = vec4(vColor, 1.0);
	}
	`}var n=i(5),o=i(0),s=i(10),d=i(9),l=i(7),u=i(4),c=i(11);let m;const f=`${u.a}
	layout (location = 0) in vec3 aVertexPosition;
	layout (location = 1) in vec3 aVertexColor;

	${c.a}

	uniform mat4 uModelViewMatrix;

	out vec3 vColor;

	void main(void){
		vColor = aVertexColor;
		gl_Position = uProjectionView.projectionMatrix * uModelViewMatrix * vec4(aVertexPosition, 1.0);
	}
`,p=`
	attribute vec3 aVertexPosition;
	attribute vec3 aVertexColor;

	uniform mat4 uProjectionMatrix;
	uniform mat4 uModelViewMatrix;

	varying vec3 vColor;

	void main(void){
		vColor = aVertexColor;
		gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(aVertexPosition, 1.0);
	}
`;class g extends l.a{constructor(e){let t=[];t=t.concat([0,0,0,e,0,0]),t=t.concat([0,0,0,0,e,0]),t=t.concat([0,0,0,0,0,e]);const i=new Float32Array([1,0,0,1,0,0,0,1,0,0,1,0,0,0,1,0,0,1]);super(new Float32Array(t),void 0,void 0,void 0,i)}}class x extends d.a{constructor(e=1){const t=o.webgl2?f:p,i=o.webgl2?r():a();super(new g(e),new s.a({name:'AxisHelper',vertexShader:t,fragmentShader:i}))}draw(e){this.visible&&(m=o.get(),this.updateMatrix(e),this.material.program.bind(),this.material.setUniforms(e.projectionMatrix,this.modelViewMatrix,this.modelMatrix,e),n.extensions.vertexArrayObject?this.vao.bind():(this.bindAttributes(),this.bindAttributesInstanced(),this.bindIndexBuffer()),m.drawArrays(m.LINES,0,this.geometry.attributes.aVertexPosition.numItems),n.extensions.vertexArrayObject&&this.vao.unbind())}}t.a=x},function(e,t,i){'use strict';function r(){return`${c.a}
	precision ${n.capabilities.precision} float;
	out vec4 outgoingColor;

	void main(void){
		outgoingColor = vec4(1.0, 1.0, 0.0, 1.0);
	}
	`}function a(){return`
	precision ${n.capabilities.precision} float;

	void main(void){
		gl_FragColor = vec4(1.0, 1.0, 0.0, 1.0);
	}
	`}var n=i(5),o=i(3),s=i(0),d=i(10),l=i(9),u=i(7),c=i(4),m=i(11);let f;const p=`${c.a}
	${m.a}

	in vec3 aVertexPosition;

	uniform mat4 uModelViewMatrix;
	uniform mat3 uNormalMatrix;

	void main(void){
		gl_Position = uProjectionView.projectionMatrix * uModelViewMatrix * vec4(aVertexPosition, 1.0);
	}
`,g=`
	attribute vec3 aVertexPosition;

	uniform mat4 uProjectionMatrix;
	uniform mat4 uModelViewMatrix;
	uniform mat3 uNormalMatrix;

	void main(void){
		gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(aVertexPosition, 1.0);
	}
`;class x extends u.a{constructor(e=0.5){function t(e,t=1){r(-1*t,-1*t,e),r(-1*t,1*t,e),r(-1*t,1*t,e),r(1*t,1*t,e),r(1*t,1*t,e),r(1*t,-1*t,e),r(1*t,-1*t,e),r(-1*t,-1*t,e)}let i=[];const r=(e,t,r)=>{i=i.concat([e,t,r])},a=3.5,n=0.5,o=3;t(0,n),t(a,o),r(-1*n,-1*n,0),r(-1*o,-1*o,a),r(-1*n,1*n,0),r(-1*o,1*o,a),r(1*n,1*n,0),r(1*o,1*o,a),r(1*n,-1*n,0),r(1*o,-1*o,a),super(new Float32Array(i))}}class b extends l.a{constructor(e){const t=s.webgl2?p:g,i=s.webgl2?r():a();super(new x(e),new d.a({name:'CameraHelper',vertexShader:t,fragmentShader:i,drawType:o.DRAW_LINE_STRIP})),this.camera=e}update(){this.position.copy(this.camera.position),this.lookAt(this.camera.target)}draw(e){this.visible&&(f=s.get(),this.updateMatrix(e),this.material.program.bind(),this.material.setUniforms(e.projectionMatrix,this.modelViewMatrix,this.modelMatrix,e),n.extensions.vertexArrayObject?this.vao.bind():(this.bindAttributes(),this.bindAttributesInstanced(),this.bindIndexBuffer()),f.drawArrays(f.LINES,0,this.geometry.attributes.aVertexPosition.numItems),n.extensions.vertexArrayObject&&this.vao.unbind())}}t.a=b},function(e,t,i){'use strict';function r(){return`${c.a}
	precision ${n.capabilities.precision} float;
	out vec4 outgoingColor;

	void main(void){
		outgoingColor = vec4(vec3(0.5), 1.0);
	}
	`}function a(){return`
	precision ${n.capabilities.precision} float;

	void main(void){
		gl_FragColor = vec4(vec3(0.5), 1.0);
	}
	`}var n=i(5),o=i(0),s=i(10),d=i(9),l=i(7),u=i(8),c=i(4),m=i(11);let f;const p=`${c.a}
	${m.a}

	in vec3 aVertexPosition;

	uniform mat4 uModelViewMatrix;

	void main(void){
		gl_Position = uProjectionView.projectionMatrix * uModelViewMatrix * vec4(aVertexPosition, 1.0);
	}
`,g=`
	attribute vec3 aVertexPosition;

	uniform mat4 uProjectionMatrix;
	uniform mat4 uModelViewMatrix;

	void main(void){
		gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(aVertexPosition, 1.0);
	}
`;class x extends l.a{constructor(e,t){let r=[];const a=0.5*e;for(let n=0;n<t+1;n+=1){const e=Object(u.lerp)(-a,a,n/t),i=Object(u.lerp)(-a,a,n/t);r=r.concat([e,0,-a,i,0,a])}for(let n=0;n<t+1;n+=1){const e=Object(u.lerp)(-a,a,n/t),i=Object(u.lerp)(-a,a,n/t);r=r.concat([-a,0,e,a,0,i])}super(new Float32Array(r))}}class b extends d.a{constructor(e=1,t=10){const i=o.webgl2?p:g,n=o.webgl2?r():a();super(new x(e,t),new s.a({name:'GridHelper',vertexShader:i,fragmentShader:n}))}draw(e){this.visible&&(f=o.get(),this.updateMatrix(e),this.material.program.bind(),this.material.setUniforms(e.projectionMatrix,this.modelViewMatrix,this.modelMatrix,e),n.extensions.vertexArrayObject?this.vao.bind():(this.bindAttributes(),this.bindAttributesInstanced(),this.bindIndexBuffer()),f.drawArrays(f.LINES,0,this.geometry.attributes.aVertexPosition.numItems),n.extensions.vertexArrayObject&&this.vao.unbind())}}t.a=b},function(e,t,i){'use strict';function r(){return`${u.a}
	precision ${n.capabilities.precision} float;
	out vec4 outgoingColor;

	void main(void){
		outgoingColor = vec4(1.0);
	}
	`}function a(){return`
	precision ${n.capabilities.precision} float;

	void main(void){
		gl_FragColor = vec4(1.0);
	}
	`}var n=i(5),o=i(0),s=i(10),d=i(9),l=i(7),u=i(4),c=i(11);let m;const f=`${u.a}
	${c.a}

	in vec3 aVertexPosition;

	uniform mat4 uModelViewMatrix;
	uniform mat3 uNormalMatrix;

	void main(void){
		gl_Position = uProjectionView.projectionMatrix * uModelViewMatrix * vec4(aVertexPosition, 1.0);
	}
`,p=`
	attribute vec3 aVertexPosition;

	uniform mat4 uProjectionMatrix;
	uniform mat4 uModelViewMatrix;
	uniform mat3 uNormalMatrix;

	void main(void){
		gl_Position = uProjectionMatrix * uModelViewMatrix * vec4(aVertexPosition, 1.0);
	}
`;class g extends l.a{constructor(e,t=0.5){let r=[];const a=e.scale.x,n=e.scale.y,o=e.scale.z,s=e.geometry.bufferNormals.length/3;for(let d=0;d<s;d+=1){const i=3*d,s=a*e.geometry.bufferVertices[i],l=n*e.geometry.bufferVertices[i+1],u=o*e.geometry.bufferVertices[i+2],c=e.geometry.bufferNormals[i],m=e.geometry.bufferNormals[i+1],f=e.geometry.bufferNormals[i+2];r=r.concat([s,l,u,s+t*c,l+t*m,u+t*f])}super(new Float32Array(r))}}class x extends d.a{constructor(e,t=1){const i=o.webgl2?f:p,n=o.webgl2?r():a();super(new g(e,t),new s.a({name:'NormalsHelper',vertexShader:i,fragmentShader:n}))}draw(e){this.visible&&(m=o.get(),this.updateMatrix(e),this.material.program.bind(),this.material.setUniforms(e.projectionMatrix,this.modelViewMatrix,this.modelMatrix,e),n.extensions.vertexArrayObject?this.vao.bind():(this.bindAttributes(),this.bindAttributesInstanced(),this.bindIndexBuffer()),m.drawArrays(m.LINES,0,this.geometry.attributes.aVertexPosition.numItems),n.extensions.vertexArrayObject&&this.vao.unbind())}}t.a=x},function(e,t,i){'use strict';function r(){return`${f.a}
	precision ${o.capabilities.precision} float;
	uniform vec3 uColor;
	out vec4 outgoingColor;

	void main(void){
		if(length(gl_PointCoord - 0.5) > 0.5) {
			discard;
		}
		outgoingColor = vec4(uColor, 1.0);
	}
	`}function a(){return`
	precision ${o.capabilities.precision} float;
	uniform vec3 uColor;

	void main(void){
		if(length(gl_PointCoord - 0.5) > 0.5) {
			discard;
		}
		gl_FragColor = vec4(uColor, 1.0);
	}
	`}var n=i(1),o=i(5),s=i(0),d=i(10),l=i(9),u=i(7),c=i(13),m=i(8),f=i(4),p=i(11);let g;const x=`${f.a}
	${p.a}

	in vec3 aVertexPosition;

	uniform mat4 uModelViewMatrix;
	uniform float uSize;

	void main(void){
		vec4 mvPosition = uProjectionView.projectionMatrix * uModelViewMatrix * vec4(aVertexPosition, 1.0);
		gl_PointSize = uSize * (100.0 / length(mvPosition.xyz));
		gl_Position = mvPosition;
	}
`,b=`
	attribute vec3 aVertexPosition;

	uniform mat4 uProjectionMatrix;
	uniform mat4 uModelViewMatrix;
	uniform float uSize;

	void main(void){
		vec4 mvPosition = uProjectionMatrix * uModelViewMatrix * vec4(aVertexPosition, 1.0);
		gl_PointSize = uSize * (100.0 / length(mvPosition.xyz));
		gl_Position = mvPosition;
	}
`;class h extends u.a{constructor(e,t=0.5){const r=[],a=e.geometry.bufferVertices.length;for(let n=0;n<a;n+=1)r[n]=e.geometry.bufferVertices[n];super(new Float32Array(r))}}const E=n.b.create(),v=n.b.create();class _ extends l.a{constructor(e,t=1,i=65280,n='#ffffff'){const o=s.webgl2?x:b,l=s.webgl2?r():a();super(new h(e,t),new d.a({name:'VerticesHelper',vertexShader:o,fragmentShader:l,uniforms:{uSize:{type:'f',value:t},uColor:{type:'3f',value:new c.a(i).v}}})),this._labels=[],this._parentMesh=e;let u;const m=(e)=>{u=document.createElement('div'),u.style.position='absolute',u.style.pointerEvents='none',u.style.color=n,u.style.fontSize='16px',this._labels.push({indice:e,element:u}),document.body.appendChild(u)};this._parentMesh.geometry.faces.forEach((e)=>{m(e.indices[0]),m(e.indices[1]),m(e.indices[2])})}draw(e){if(!this.visible)return;g=s.get(),this.updateMatrix(e),n.b.identity(E),n.b.identity(v),n.b.mul(E,e.projectionMatrix,this.modelViewMatrix);let t,i;this._labels.forEach((e)=>{i=this._parentMesh.geometry.vertices[e.indice],t=Object(m.from3DTo2D)(i,E),e.element.style.left=`${t.x*window.innerWidth}px`,e.element.style.top=`${t.y*window.innerHeight}px`,e.element.innerHTML=`${e.indice}`}),this.material.program.bind(),this.material.setUniforms(e.projectionMatrix,this.modelViewMatrix,this.modelMatrix,e),o.extensions.vertexArrayObject?this.vao.bind():(this.bindAttributes(),this.bindAttributesInstanced(),this.bindIndexBuffer()),g.drawArrays(g.POINTS,0,this.geometry.attributes.aVertexPosition.numItems),o.extensions.vertexArrayObject&&this.vao.unbind()}}t.a=_},function(e,t,i){'use strict';var r=i(0),a=i(19);let n;class o{constructor(e){if(this.lights=e,n=r.get(),r.webgl2){const t=this.lights[0].data.length,i=Array(e.length*t),r=new Float32Array(i);this.uniformBuffer=new a.a(r),this._lightsData=new Float32Array(e[0].data.length*e.length)}}get length(){return this.lights.length}get(){return this.lights}update(){r.webgl2?(this.lights.forEach((e,t)=>{e.update(),this._lightsData.set(e.data,t*e.data.length)}),this.uniformBuffer.setValues(this._lightsData,0)):this.lights.forEach((e)=>{e.update()})}bind(){r.webgl2&&(n=r.get(),n.bindBuffer(n.UNIFORM_BUFFER,this.uniformBuffer.buffer),n.bufferSubData(n.UNIFORM_BUFFER,0,this.uniformBuffer.data),n.bindBuffer(n.UNIFORM_BUFFER,null))}}t.a=o},function(e,t,i){'use strict';var r=i(3),a=i(0),n=i(13),o=i(27);class s extends o.a{constructor(e={}){super(),this.type=r.LIGHT_AMBIENT,this.uniforms={color:{type:'3f',value:new n.a(4210752).v},intensity:{type:'f',value:0.1}},Object.assign(this.uniforms,e),a.webgl2&&(this.data=new Float32Array([...this.uniforms.color.value,0,this.uniforms.intensity.value,0,0,0]))}update(){a.webgl2&&(this.setValues(this.uniforms.color.value,0),this.setValues([this.uniforms.intensity.value],4))}}t.a=s},function(e,t,i){'use strict';var r=i(3),a=i(0),n=i(13),o=i(2),s=i(27);class d extends s.a{constructor(e={}){super(),this.type=r.LIGHT_DIRECTIONAL,this.uniforms={position:{type:'3f',value:new o.a(0,0,0).v},color:{type:'3f',value:new n.a(16777215).v},intensity:{type:'f',value:1}},Object.assign(this.uniforms,e),this.position=new o.a,a.webgl2&&(this.data=new Float32Array([...this.uniforms.position.value,0,...this.uniforms.color.value,0,this.uniforms.intensity.value,0,0,0]))}update(){a.webgl2?(this.setValues(this.position.v),this.setValues(this.uniforms.color.value,4),this.setValues([this.uniforms.intensity.value],8)):this.uniforms.position.value.set(this.position.v)}}t.a=d},function(e,t,i){'use strict';var r=i(3),a=i(0),n=i(13),o=i(2),s=i(27);class d extends s.a{constructor(e={}){super(),this.type=r.LIGHT_POINT,this.uniforms={position:{type:'3f',value:new o.a(0,0,0).v},color:{type:'3f',value:new n.a(16777215).v},specularColor:{type:'3f',value:new n.a(16777215).v},shininess:{type:'f',value:100},intensity:{type:'f',value:1}},Object.assign(this.uniforms,e),this.position=new o.a,a.webgl2&&(this.data=new Float32Array([...this.uniforms.position.value,0,...this.uniforms.color.value,0,...this.uniforms.specularColor.value,0,this.uniforms.shininess.value,0,0,0,this.uniforms.intensity.value,0,0,0]))}update(){a.webgl2?(this.setValues(this.position.v),this.setValues(this.uniforms.color.value,4),this.setValues(this.uniforms.specularColor.value,8),this.setValues([this.uniforms.shininess.value],12),this.setValues([this.uniforms.intensity.value],16)):this.uniforms.position.value.set(this.position.v)}}t.a=d},function(e,t,i){'use strict';var r=i(20),a=i(84),n=i(21),o=i(85),s=i(4),d=i(86),l=i(87),u=i(22),c=i(88),m=i(39),f=i(89),p=i(90),g=i(38),x=i(11),b=i(91),h=i(92);t.a={AmbientLight:r,Conditionals:a.a,DirectionalLights:n,EnvMapCube:o.a,EsVersion:s.a,Fog:d.a,Gamma:l.a,Lambert:u,Matcap:c.a,Math:m.a,Noise:f,Packing:p.a,PointLights:g,ProjectionView:x.a,Tonemap:b,Transpose:h.a}},function(e,t){'use strict';const i=`
float whenEquals(float x, float y) {
  return 1.0 - abs(sign(x - y));
};
`,r=`
int whenEqualsInt(int x, int y) {
  return 1 - abs(sign(x - y));
}
`,a=`
float whenLessThan(float x, float y) {
  return max(sign(y - x), 0.0);
}
`,n=`
float whenGreaterThan(float x, float y) {
  return max(sign(x - y), 0.0);
}
`;t.a={whenEquals:i,whenEqualsInt:r,whenLessThan:a,whenGreaterThan:n}},function(e,t){'use strict';t.a=`
/**
 * Samples cubemap environment map
 * @param  {vec3} wcNormal - normal in the world coordinate space
 * @param  {float} - flipEnvMap    -1.0 for left handed coorinate system oriented texture (usual case)
 *                                  1.0 for right handed coorinate system oriented texture
 * @return {vec4} - cubemap texture coordinate
 */
vec3 envMapCube(vec3 wcNormal, float flipEnvMap) {
	return vec3(flipEnvMap * wcNormal.x, wcNormal.y, wcNormal.z);
}

vec3 envMapCube(vec3 wcNormal) {
 //-1.0 for left handed coorinate system oriented texture (usual case)
 return envMapCube(wcNormal, -1.0);
}
`},function(e,t){'use strict';const i=`
float fogLinear(const float dist, const float start, const float end) {
  return 1.0 - clamp((end - dist) / (end - start), 0.0, 1.0);
}
`,r=`
float fogExp(
  const float dist,
  const float density
) {
  return 1.0 - clamp(exp(-density * dist), 0.0, 1.0);
}
`,a=`
float fogExp2(
  const float dist,
  const float density
) {
  const float LOG2 = -1.442695;
  float d = density * dist;
  return 1.0 - clamp(exp2(d * d * LOG2), 0.0, 1.0);
}
`;t.a={linear:i,exp:r,exp2:a}},function(e,t){'use strict';t.a=`
	const float gamma = 2.2;

	float toGamma(float v) {
	  return pow(v, 1.0 / gamma);
	}

	vec2 toGamma(vec2 v) {
	  return pow(v, vec2(1.0 / gamma));
	}

	vec3 toGamma(vec3 v) {
	  return pow(v, vec3(1.0 / gamma));
	}

	vec4 toGamma(vec4 v) {
	  return vec4(toGamma(v.rgb), v.a);
	}
`},function(e,t){'use strict';t.a=`
vec2 matcap(vec3 eye, vec3 normal) {
  vec3 reflected = reflect(eye, normal);
  float m = 2.8284271247461903 * sqrt( reflected.z+1.0 );
  return reflected.xy / m + 0.5;
}
`},function(e,t){'use strict';Object.defineProperty(t,'__esModule',{value:!0});const i=`
//
// GLSL textureless classic 2D noise "cnoise",
// with an RSL-style periodic variant "pnoise".
// Author:  Stefan Gustavson (stefan.gustavson@liu.se)
// Version: 2011-08-22
//
// Many thanks to Ian McEwan of Ashima Arts for the
// ideas for permutation and gradient selection.
//
// Copyright (c) 2011 Stefan Gustavson. All rights reserved.
// Distributed under the MIT license. See LICENSE file.
// https://github.com/ashima/webgl-noise
//

vec4 mod289(vec4 x)
{
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 permute(vec4 x)
{
  return mod289(((x*34.0)+1.0)*x);
}

vec4 taylorInvSqrt(vec4 r)
{
  return 1.79284291400159 - 0.85373472095314 * r;
}

vec2 fade(vec2 t) {
  return t*t*t*(t*(t*6.0-15.0)+10.0);
}

// Classic Perlin noise
float classicNoise2D(vec2 P)
{
  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);
  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);
  Pi = mod289(Pi); // To avoid truncation effects in permutation
  vec4 ix = Pi.xzxz;
  vec4 iy = Pi.yyww;
  vec4 fx = Pf.xzxz;
  vec4 fy = Pf.yyww;

  vec4 i = permute(permute(ix) + iy);

  vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;
  vec4 gy = abs(gx) - 0.5 ;
  vec4 tx = floor(gx + 0.5);
  gx = gx - tx;

  vec2 g00 = vec2(gx.x,gy.x);
  vec2 g10 = vec2(gx.y,gy.y);
  vec2 g01 = vec2(gx.z,gy.z);
  vec2 g11 = vec2(gx.w,gy.w);

  vec4 norm = taylorInvSqrt(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));
  g00 *= norm.x;
  g01 *= norm.y;
  g10 *= norm.z;
  g11 *= norm.w;

  float n00 = dot(g00, vec2(fx.x, fy.x));
  float n10 = dot(g10, vec2(fx.y, fy.y));
  float n01 = dot(g01, vec2(fx.z, fy.z));
  float n11 = dot(g11, vec2(fx.w, fy.w));

  vec2 fade_xy = fade(Pf.xy);
  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);
  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);
  return 2.3 * n_xy;
}
`;t.classicNoise2D=i;const r=`
//
// GLSL textureless classic 3D noise "cnoise",
// with an RSL-style periodic variant "pnoise".
// Author:  Stefan Gustavson (stefan.gustavson@liu.se)
// Version: 2011-10-11
//
// Many thanks to Ian McEwan of Ashima Arts for the
// ideas for permutation and gradient selection.
//
// Copyright (c) 2011 Stefan Gustavson. All rights reserved.
// Distributed under the MIT license. See LICENSE file.
// https://github.com/ashima/webgl-noise
//

vec3 mod289(vec3 x)
{
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 mod289(vec4 x)
{
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 permute(vec4 x)
{
  return mod289(((x*34.0)+1.0)*x);
}

vec4 taylorInvSqrt(vec4 r)
{
  return 1.79284291400159 - 0.85373472095314 * r;
}

vec3 fade(vec3 t) {
  return t*t*t*(t*(t*6.0-15.0)+10.0);
}

// Classic Perlin noise
float classicNoise3D(vec3 P)
{
  vec3 Pi0 = floor(P); // Integer part for indexing
  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1
  Pi0 = mod289(Pi0);
  Pi1 = mod289(Pi1);
  vec3 Pf0 = fract(P); // Fractional part for interpolation
  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0
  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
  vec4 iy = vec4(Pi0.yy, Pi1.yy);
  vec4 iz0 = Pi0.zzzz;
  vec4 iz1 = Pi1.zzzz;

  vec4 ixy = permute(permute(ix) + iy);
  vec4 ixy0 = permute(ixy + iz0);
  vec4 ixy1 = permute(ixy + iz1);

  vec4 gx0 = ixy0 * (1.0 / 7.0);
  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;
  gx0 = fract(gx0);
  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);
  vec4 sz0 = step(gz0, vec4(0.0));
  gx0 -= sz0 * (step(0.0, gx0) - 0.5);
  gy0 -= sz0 * (step(0.0, gy0) - 0.5);

  vec4 gx1 = ixy1 * (1.0 / 7.0);
  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;
  gx1 = fract(gx1);
  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);
  vec4 sz1 = step(gz1, vec4(0.0));
  gx1 -= sz1 * (step(0.0, gx1) - 0.5);
  gy1 -= sz1 * (step(0.0, gy1) - 0.5);

  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);
  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);
  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);
  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);
  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);
  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);
  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);
  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);

  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));
  g000 *= norm0.x;
  g010 *= norm0.y;
  g100 *= norm0.z;
  g110 *= norm0.w;
  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));
  g001 *= norm1.x;
  g011 *= norm1.y;
  g101 *= norm1.z;
  g111 *= norm1.w;

  float n000 = dot(g000, Pf0);
  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));
  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));
  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));
  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));
  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));
  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));
  float n111 = dot(g111, Pf1);

  vec3 fade_xyz = fade(Pf0);
  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);
  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);
  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);
  return 2.2 * n_xyz;
}
`;t.classicNoise3D=r;const a=`
//
// GLSL textureless classic 4D noise "cnoise",
// with an RSL-style periodic variant "pnoise".
// Author:  Stefan Gustavson (stefan.gustavson@liu.se)
// Version: 2011-08-22
//
// Many thanks to Ian McEwan of Ashima Arts for the
// ideas for permutation and gradient selection.
//
// Copyright (c) 2011 Stefan Gustavson. All rights reserved.
// Distributed under the MIT license. See LICENSE file.
// https://github.com/ashima/webgl-noise
//

vec4 mod289(vec4 x)
{
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 permute(vec4 x)
{
  return mod289(((x*34.0)+1.0)*x);
}

vec4 taylorInvSqrt(vec4 r)
{
  return 1.79284291400159 - 0.85373472095314 * r;
}

vec4 fade(vec4 t) {
  return t*t*t*(t*(t*6.0-15.0)+10.0);
}

// Classic Perlin noise
float classicNoise4D(vec4 P)
{
  vec4 Pi0 = floor(P); // Integer part for indexing
  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1
  Pi0 = mod289(Pi0);
  Pi1 = mod289(Pi1);
  vec4 Pf0 = fract(P); // Fractional part for interpolation
  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0
  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
  vec4 iy = vec4(Pi0.yy, Pi1.yy);
  vec4 iz0 = vec4(Pi0.zzzz);
  vec4 iz1 = vec4(Pi1.zzzz);
  vec4 iw0 = vec4(Pi0.wwww);
  vec4 iw1 = vec4(Pi1.wwww);

  vec4 ixy = permute(permute(ix) + iy);
  vec4 ixy0 = permute(ixy + iz0);
  vec4 ixy1 = permute(ixy + iz1);
  vec4 ixy00 = permute(ixy0 + iw0);
  vec4 ixy01 = permute(ixy0 + iw1);
  vec4 ixy10 = permute(ixy1 + iw0);
  vec4 ixy11 = permute(ixy1 + iw1);

  vec4 gx00 = ixy00 * (1.0 / 7.0);
  vec4 gy00 = floor(gx00) * (1.0 / 7.0);
  vec4 gz00 = floor(gy00) * (1.0 / 6.0);
  gx00 = fract(gx00) - 0.5;
  gy00 = fract(gy00) - 0.5;
  gz00 = fract(gz00) - 0.5;
  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);
  vec4 sw00 = step(gw00, vec4(0.0));
  gx00 -= sw00 * (step(0.0, gx00) - 0.5);
  gy00 -= sw00 * (step(0.0, gy00) - 0.5);

  vec4 gx01 = ixy01 * (1.0 / 7.0);
  vec4 gy01 = floor(gx01) * (1.0 / 7.0);
  vec4 gz01 = floor(gy01) * (1.0 / 6.0);
  gx01 = fract(gx01) - 0.5;
  gy01 = fract(gy01) - 0.5;
  gz01 = fract(gz01) - 0.5;
  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);
  vec4 sw01 = step(gw01, vec4(0.0));
  gx01 -= sw01 * (step(0.0, gx01) - 0.5);
  gy01 -= sw01 * (step(0.0, gy01) - 0.5);

  vec4 gx10 = ixy10 * (1.0 / 7.0);
  vec4 gy10 = floor(gx10) * (1.0 / 7.0);
  vec4 gz10 = floor(gy10) * (1.0 / 6.0);
  gx10 = fract(gx10) - 0.5;
  gy10 = fract(gy10) - 0.5;
  gz10 = fract(gz10) - 0.5;
  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);
  vec4 sw10 = step(gw10, vec4(0.0));
  gx10 -= sw10 * (step(0.0, gx10) - 0.5);
  gy10 -= sw10 * (step(0.0, gy10) - 0.5);

  vec4 gx11 = ixy11 * (1.0 / 7.0);
  vec4 gy11 = floor(gx11) * (1.0 / 7.0);
  vec4 gz11 = floor(gy11) * (1.0 / 6.0);
  gx11 = fract(gx11) - 0.5;
  gy11 = fract(gy11) - 0.5;
  gz11 = fract(gz11) - 0.5;
  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);
  vec4 sw11 = step(gw11, vec4(0.0));
  gx11 -= sw11 * (step(0.0, gx11) - 0.5);
  gy11 -= sw11 * (step(0.0, gy11) - 0.5);

  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);
  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);
  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);
  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);
  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);
  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);
  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);
  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);
  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);
  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);
  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);
  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);
  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);
  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);
  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);
  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);

  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));
  g0000 *= norm00.x;
  g0100 *= norm00.y;
  g1000 *= norm00.z;
  g1100 *= norm00.w;

  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));
  g0001 *= norm01.x;
  g0101 *= norm01.y;
  g1001 *= norm01.z;
  g1101 *= norm01.w;

  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));
  g0010 *= norm10.x;
  g0110 *= norm10.y;
  g1010 *= norm10.z;
  g1110 *= norm10.w;

  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));
  g0011 *= norm11.x;
  g0111 *= norm11.y;
  g1011 *= norm11.z;
  g1111 *= norm11.w;

  float n0000 = dot(g0000, Pf0);
  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));
  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));
  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));
  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));
  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));
  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));
  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));
  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));
  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));
  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));
  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));
  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));
  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));
  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));
  float n1111 = dot(g1111, Pf1);

  vec4 fade_xyzw = fade(Pf0);
  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);
  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);
  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);
  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);
  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);
  return 2.2 * n_xyzw;
}
`;t.classicNoise4D=a;const n=`
//
// GLSL textureless classic 2D noise "cnoise",
// with an RSL-style periodic variant "pnoise".
// Author:  Stefan Gustavson (stefan.gustavson@liu.se)
// Version: 2011-08-22
//
// Many thanks to Ian McEwan of Ashima Arts for the
// ideas for permutation and gradient selection.
//
// Copyright (c) 2011 Stefan Gustavson. All rights reserved.
// Distributed under the MIT license. See LICENSE file.
// https://github.com/ashima/webgl-noise
//

vec4 mod289(vec4 x)
{
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 permute(vec4 x)
{
  return mod289(((x*34.0)+1.0)*x);
}

vec4 taylorInvSqrt(vec4 r)
{
  return 1.79284291400159 - 0.85373472095314 * r;
}

vec2 fade(vec2 t) {
  return t*t*t*(t*(t*6.0-15.0)+10.0);
}

// Classic Perlin noise, periodic variant
float periodicNoise2D(vec2 P, vec2 rep)
{
  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);
  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);
  Pi = mod(Pi, rep.xyxy); // To create noise with explicit period
  Pi = mod289(Pi);        // To avoid truncation effects in permutation
  vec4 ix = Pi.xzxz;
  vec4 iy = Pi.yyww;
  vec4 fx = Pf.xzxz;
  vec4 fy = Pf.yyww;

  vec4 i = permute(permute(ix) + iy);

  vec4 gx = fract(i * (1.0 / 41.0)) * 2.0 - 1.0 ;
  vec4 gy = abs(gx) - 0.5 ;
  vec4 tx = floor(gx + 0.5);
  gx = gx - tx;

  vec2 g00 = vec2(gx.x,gy.x);
  vec2 g10 = vec2(gx.y,gy.y);
  vec2 g01 = vec2(gx.z,gy.z);
  vec2 g11 = vec2(gx.w,gy.w);

  vec4 norm = taylorInvSqrt(vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11)));
  g00 *= norm.x;
  g01 *= norm.y;
  g10 *= norm.z;
  g11 *= norm.w;

  float n00 = dot(g00, vec2(fx.x, fy.x));
  float n10 = dot(g10, vec2(fx.y, fy.y));
  float n01 = dot(g01, vec2(fx.z, fy.z));
  float n11 = dot(g11, vec2(fx.w, fy.w));

  vec2 fade_xy = fade(Pf.xy);
  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);
  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);
  return 2.3 * n_xy;
}
`;t.periodicNoise2D=n;const o=`
//
// GLSL textureless classic 3D noise "cnoise",
// with an RSL-style periodic variant "pnoise".
// Author:  Stefan Gustavson (stefan.gustavson@liu.se)
// Version: 2011-10-11
//
// Many thanks to Ian McEwan of Ashima Arts for the
// ideas for permutation and gradient selection.
//
// Copyright (c) 2011 Stefan Gustavson. All rights reserved.
// Distributed under the MIT license. See LICENSE file.
// https://github.com/ashima/webgl-noise
//

vec3 mod289(vec3 x)
{
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 mod289(vec4 x)
{
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 permute(vec4 x)
{
  return mod289(((x*34.0)+1.0)*x);
}

vec4 taylorInvSqrt(vec4 r)
{
  return 1.79284291400159 - 0.85373472095314 * r;
}

vec3 fade(vec3 t) {
  return t*t*t*(t*(t*6.0-15.0)+10.0);
}

// Classic Perlin noise, periodic variant
float periodicNoise3D(vec3 P, vec3 rep)
{
  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period
  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period
  Pi0 = mod289(Pi0);
  Pi1 = mod289(Pi1);
  vec3 Pf0 = fract(P); // Fractional part for interpolation
  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0
  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
  vec4 iy = vec4(Pi0.yy, Pi1.yy);
  vec4 iz0 = Pi0.zzzz;
  vec4 iz1 = Pi1.zzzz;

  vec4 ixy = permute(permute(ix) + iy);
  vec4 ixy0 = permute(ixy + iz0);
  vec4 ixy1 = permute(ixy + iz1);

  vec4 gx0 = ixy0 * (1.0 / 7.0);
  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;
  gx0 = fract(gx0);
  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);
  vec4 sz0 = step(gz0, vec4(0.0));
  gx0 -= sz0 * (step(0.0, gx0) - 0.5);
  gy0 -= sz0 * (step(0.0, gy0) - 0.5);

  vec4 gx1 = ixy1 * (1.0 / 7.0);
  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;
  gx1 = fract(gx1);
  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);
  vec4 sz1 = step(gz1, vec4(0.0));
  gx1 -= sz1 * (step(0.0, gx1) - 0.5);
  gy1 -= sz1 * (step(0.0, gy1) - 0.5);

  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);
  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);
  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);
  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);
  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);
  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);
  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);
  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);

  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));
  g000 *= norm0.x;
  g010 *= norm0.y;
  g100 *= norm0.z;
  g110 *= norm0.w;
  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));
  g001 *= norm1.x;
  g011 *= norm1.y;
  g101 *= norm1.z;
  g111 *= norm1.w;

  float n000 = dot(g000, Pf0);
  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));
  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));
  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));
  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));
  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));
  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));
  float n111 = dot(g111, Pf1);

  vec3 fade_xyz = fade(Pf0);
  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);
  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);
  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);
  return 2.2 * n_xyz;
}
`;t.periodicNoise3D=o;const s=`
//
// GLSL textureless classic 4D noise "cnoise",
// with an RSL-style periodic variant "pnoise".
// Author:  Stefan Gustavson (stefan.gustavson@liu.se)
// Version: 2011-08-22
//
// Many thanks to Ian McEwan of Ashima Arts for the
// ideas for permutation and gradient selection.
//
// Copyright (c) 2011 Stefan Gustavson. All rights reserved.
// Distributed under the MIT license. See LICENSE file.
// https://github.com/ashima/webgl-noise
//

vec4 mod289(vec4 x)
{
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 permute(vec4 x)
{
  return mod289(((x*34.0)+1.0)*x);
}

vec4 taylorInvSqrt(vec4 r)
{
  return 1.79284291400159 - 0.85373472095314 * r;
}

vec4 fade(vec4 t) {
  return t*t*t*(t*(t*6.0-15.0)+10.0);
}

// Classic Perlin noise, periodic version
float periodicNoise4D(vec4 P, vec4 rep)
{
  vec4 Pi0 = mod(floor(P), rep); // Integer part modulo rep
  vec4 Pi1 = mod(Pi0 + 1.0, rep); // Integer part + 1 mod rep
  Pi0 = mod289(Pi0);
  Pi1 = mod289(Pi1);
  vec4 Pf0 = fract(P); // Fractional part for interpolation
  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0
  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);
  vec4 iy = vec4(Pi0.yy, Pi1.yy);
  vec4 iz0 = vec4(Pi0.zzzz);
  vec4 iz1 = vec4(Pi1.zzzz);
  vec4 iw0 = vec4(Pi0.wwww);
  vec4 iw1 = vec4(Pi1.wwww);

  vec4 ixy = permute(permute(ix) + iy);
  vec4 ixy0 = permute(ixy + iz0);
  vec4 ixy1 = permute(ixy + iz1);
  vec4 ixy00 = permute(ixy0 + iw0);
  vec4 ixy01 = permute(ixy0 + iw1);
  vec4 ixy10 = permute(ixy1 + iw0);
  vec4 ixy11 = permute(ixy1 + iw1);

  vec4 gx00 = ixy00 * (1.0 / 7.0);
  vec4 gy00 = floor(gx00) * (1.0 / 7.0);
  vec4 gz00 = floor(gy00) * (1.0 / 6.0);
  gx00 = fract(gx00) - 0.5;
  gy00 = fract(gy00) - 0.5;
  gz00 = fract(gz00) - 0.5;
  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);
  vec4 sw00 = step(gw00, vec4(0.0));
  gx00 -= sw00 * (step(0.0, gx00) - 0.5);
  gy00 -= sw00 * (step(0.0, gy00) - 0.5);

  vec4 gx01 = ixy01 * (1.0 / 7.0);
  vec4 gy01 = floor(gx01) * (1.0 / 7.0);
  vec4 gz01 = floor(gy01) * (1.0 / 6.0);
  gx01 = fract(gx01) - 0.5;
  gy01 = fract(gy01) - 0.5;
  gz01 = fract(gz01) - 0.5;
  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);
  vec4 sw01 = step(gw01, vec4(0.0));
  gx01 -= sw01 * (step(0.0, gx01) - 0.5);
  gy01 -= sw01 * (step(0.0, gy01) - 0.5);

  vec4 gx10 = ixy10 * (1.0 / 7.0);
  vec4 gy10 = floor(gx10) * (1.0 / 7.0);
  vec4 gz10 = floor(gy10) * (1.0 / 6.0);
  gx10 = fract(gx10) - 0.5;
  gy10 = fract(gy10) - 0.5;
  gz10 = fract(gz10) - 0.5;
  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);
  vec4 sw10 = step(gw10, vec4(0.0));
  gx10 -= sw10 * (step(0.0, gx10) - 0.5);
  gy10 -= sw10 * (step(0.0, gy10) - 0.5);

  vec4 gx11 = ixy11 * (1.0 / 7.0);
  vec4 gy11 = floor(gx11) * (1.0 / 7.0);
  vec4 gz11 = floor(gy11) * (1.0 / 6.0);
  gx11 = fract(gx11) - 0.5;
  gy11 = fract(gy11) - 0.5;
  gz11 = fract(gz11) - 0.5;
  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);
  vec4 sw11 = step(gw11, vec4(0.0));
  gx11 -= sw11 * (step(0.0, gx11) - 0.5);
  gy11 -= sw11 * (step(0.0, gy11) - 0.5);

  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);
  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);
  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);
  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);
  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);
  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);
  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);
  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);
  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);
  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);
  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);
  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);
  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);
  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);
  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);
  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);

  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));
  g0000 *= norm00.x;
  g0100 *= norm00.y;
  g1000 *= norm00.z;
  g1100 *= norm00.w;

  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));
  g0001 *= norm01.x;
  g0101 *= norm01.y;
  g1001 *= norm01.z;
  g1101 *= norm01.w;

  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));
  g0010 *= norm10.x;
  g0110 *= norm10.y;
  g1010 *= norm10.z;
  g1110 *= norm10.w;

  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));
  g0011 *= norm11.x;
  g0111 *= norm11.y;
  g1011 *= norm11.z;
  g1111 *= norm11.w;

  float n0000 = dot(g0000, Pf0);
  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));
  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));
  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));
  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));
  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));
  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));
  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));
  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));
  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));
  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));
  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));
  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));
  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));
  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));
  float n1111 = dot(g1111, Pf1);

  vec4 fade_xyzw = fade(Pf0);
  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);
  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);
  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);
  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);
  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);
  return 2.2 * n_xyzw;
}
`;t.periodicNoise4D=s;const d=`
//
// Description : Array and textureless GLSL 2D simplex noise function.
//      Author : Ian McEwan, Ashima Arts.
//  Maintainer : ijm
//     Lastmod : 20110822 (ijm)
//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.
//               Distributed under the MIT License. See LICENSE file.
//               https://github.com/ashima/webgl-noise
//

vec3 mod289(vec3 x) {
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec2 mod289(vec2 x) {
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec3 permute(vec3 x) {
  return mod289(((x*34.0)+1.0)*x);
}

float simplexNoise2D(vec2 v)
  {
  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0
                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)
                     -0.577350269189626,  // -1.0 + 2.0 * C.x
                      0.024390243902439); // 1.0 / 41.0
// First corner
  vec2 i  = floor(v + dot(v, C.yy) );
  vec2 x0 = v -   i + dot(i, C.xx);

// Other corners
  vec2 i1;
  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0
  //i1.y = 1.0 - i1.x;
  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);
  // x0 = x0 - 0.0 + 0.0 * C.xx ;
  // x1 = x0 - i1 + 1.0 * C.xx ;
  // x2 = x0 - 1.0 + 2.0 * C.xx ;
  vec4 x12 = x0.xyxy + C.xxzz;
  x12.xy -= i1;

// Permutations
  i = mod289(i); // Avoid truncation effects in permutation
  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))
    + i.x + vec3(0.0, i1.x, 1.0 ));

  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);
  m = m*m ;
  m = m*m ;

// Gradients: 41 points uniformly over a line, mapped onto a diamond.
// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)

  vec3 x = 2.0 * fract(p * C.www) - 1.0;
  vec3 h = abs(x) - 0.5;
  vec3 ox = floor(x + 0.5);
  vec3 a0 = x - ox;

// Normalise gradients implicitly by scaling m
// Approximation of: m *= inversesqrt( a0*a0 + h*h );
  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );

// Compute final noise value at P
  vec3 g;
  g.x  = a0.x  * x0.x  + h.x  * x0.y;
  g.yz = a0.yz * x12.xz + h.yz * x12.yw;
  return 130.0 * dot(m, g);
}
`;t.simplexNoise2D=d;const l=`
//
// Description : Array and textureless GLSL 2D/3D/4D simplex
//               noise functions.
//      Author : Ian McEwan, Ashima Arts.
//  Maintainer : ijm
//     Lastmod : 20110822 (ijm)
//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.
//               Distributed under the MIT License. See LICENSE file.
//               https://github.com/ashima/webgl-noise
//

vec3 mod289(vec3 x) {
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 mod289(vec4 x) {
  return x - floor(x * (1.0 / 289.0)) * 289.0;
}

vec4 permute(vec4 x) {
     return mod289(((x*34.0)+1.0)*x);
}

vec4 taylorInvSqrt(vec4 r)
{
  return 1.79284291400159 - 0.85373472095314 * r;
}

float simplexNoise3D(vec3 v)
  {
  const vec2  C = vec2(1.0/6.0, 1.0/3.0) ;
  const vec4  D = vec4(0.0, 0.5, 1.0, 2.0);

// First corner
  vec3 i  = floor(v + dot(v, C.yyy) );
  vec3 x0 =   v - i + dot(i, C.xxx) ;

// Other corners
  vec3 g = step(x0.yzx, x0.xyz);
  vec3 l = 1.0 - g;
  vec3 i1 = min( g.xyz, l.zxy );
  vec3 i2 = max( g.xyz, l.zxy );

  //   x0 = x0 - 0.0 + 0.0 * C.xxx;
  //   x1 = x0 - i1  + 1.0 * C.xxx;
  //   x2 = x0 - i2  + 2.0 * C.xxx;
  //   x3 = x0 - 1.0 + 3.0 * C.xxx;
  vec3 x1 = x0 - i1 + C.xxx;
  vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y
  vec3 x3 = x0 - D.yyy;      // -1.0+3.0*C.x = -0.5 = -D.y

// Permutations
  i = mod289(i);
  vec4 p = permute( permute( permute(
             i.z + vec4(0.0, i1.z, i2.z, 1.0 ))
           + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))
           + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));

// Gradients: 7x7 points over a square, mapped onto an octahedron.
// The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)
  float n_ = 0.142857142857; // 1.0/7.0
  vec3  ns = n_ * D.wyz - D.xzx;

  vec4 j = p - 49.0 * floor(p * ns.z * ns.z);  //  mod(p,7*7)

  vec4 x_ = floor(j * ns.z);
  vec4 y_ = floor(j - 7.0 * x_ );    // mod(j,N)

  vec4 x = x_ *ns.x + ns.yyyy;
  vec4 y = y_ *ns.x + ns.yyyy;
  vec4 h = 1.0 - abs(x) - abs(y);

  vec4 b0 = vec4( x.xy, y.xy );
  vec4 b1 = vec4( x.zw, y.zw );

  //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;
  //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;
  vec4 s0 = floor(b0)*2.0 + 1.0;
  vec4 s1 = floor(b1)*2.0 + 1.0;
  vec4 sh = -step(h, vec4(0.0));

  vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;
  vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;

  vec3 p0 = vec3(a0.xy,h.x);
  vec3 p1 = vec3(a0.zw,h.y);
  vec3 p2 = vec3(a1.xy,h.z);
  vec3 p3 = vec3(a1.zw,h.w);

//Normalise gradients
  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));
  p0 *= norm.x;
  p1 *= norm.y;
  p2 *= norm.z;
  p3 *= norm.w;

// Mix final noise value
  vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);
  m = m * m;
  return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1),
                                dot(p2,x2), dot(p3,x3) ) );
  }
`;t.simplexNoise3D=l;const u=`
//
// Description : Array and textureless GLSL 2D/3D/4D simplex
//               noise functions.
//      Author : Ian McEwan, Ashima Arts.
//  Maintainer : ijm
//     Lastmod : 20110822 (ijm)
//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.
//               Distributed under the MIT License. See LICENSE file.
//               https://github.com/ashima/webgl-noise
//

vec4 mod289(vec4 x) {
  return x - floor(x * (1.0 / 289.0)) * 289.0; }

float mod289(float x) {
  return x - floor(x * (1.0 / 289.0)) * 289.0; }

vec4 permute(vec4 x) {
     return mod289(((x*34.0)+1.0)*x);
}

float permute(float x) {
     return mod289(((x*34.0)+1.0)*x);
}

vec4 taylorInvSqrt(vec4 r)
{
  return 1.79284291400159 - 0.85373472095314 * r;
}

float taylorInvSqrt(float r)
{
  return 1.79284291400159 - 0.85373472095314 * r;
}

vec4 grad4(float j, vec4 ip)
  {
  const vec4 ones = vec4(1.0, 1.0, 1.0, -1.0);
  vec4 p,s;

  p.xyz = floor( fract (vec3(j) * ip.xyz) * 7.0) * ip.z - 1.0;
  p.w = 1.5 - dot(abs(p.xyz), ones.xyz);
  s = vec4(lessThan(p, vec4(0.0)));
  p.xyz = p.xyz + (s.xyz*2.0 - 1.0) * s.www;

  return p;
  }

// (sqrt(5) - 1)/4 = F4, used once below
#define F4 0.309016994374947451

float simplexNoise4D(vec4 v)
  {
  const vec4  C = vec4( 0.138196601125011,  // (5 - sqrt(5))/20  G4
                        0.276393202250021,  // 2 * G4
                        0.414589803375032,  // 3 * G4
                       -0.447213595499958); // -1 + 4 * G4

// First corner
  vec4 i  = floor(v + dot(v, vec4(F4)) );
  vec4 x0 = v -   i + dot(i, C.xxxx);

// Other corners

// Rank sorting originally contributed by Bill Licea-Kane, AMD (formerly ATI)
  vec4 i0;
  vec3 isX = step( x0.yzw, x0.xxx );
  vec3 isYZ = step( x0.zww, x0.yyz );
//  i0.x = dot( isX, vec3( 1.0 ) );
  i0.x = isX.x + isX.y + isX.z;
  i0.yzw = 1.0 - isX;
//  i0.y += dot( isYZ.xy, vec2( 1.0 ) );
  i0.y += isYZ.x + isYZ.y;
  i0.zw += 1.0 - isYZ.xy;
  i0.z += isYZ.z;
  i0.w += 1.0 - isYZ.z;

  // i0 now contains the unique values 0,1,2,3 in each channel
  vec4 i3 = clamp( i0, 0.0, 1.0 );
  vec4 i2 = clamp( i0-1.0, 0.0, 1.0 );
  vec4 i1 = clamp( i0-2.0, 0.0, 1.0 );

  //  x0 = x0 - 0.0 + 0.0 * C.xxxx
  //  x1 = x0 - i1  + 1.0 * C.xxxx
  //  x2 = x0 - i2  + 2.0 * C.xxxx
  //  x3 = x0 - i3  + 3.0 * C.xxxx
  //  x4 = x0 - 1.0 + 4.0 * C.xxxx
  vec4 x1 = x0 - i1 + C.xxxx;
  vec4 x2 = x0 - i2 + C.yyyy;
  vec4 x3 = x0 - i3 + C.zzzz;
  vec4 x4 = x0 + C.wwww;

// Permutations
  i = mod289(i);
  float j0 = permute( permute( permute( permute(i.w) + i.z) + i.y) + i.x);
  vec4 j1 = permute( permute( permute( permute (
             i.w + vec4(i1.w, i2.w, i3.w, 1.0 ))
           + i.z + vec4(i1.z, i2.z, i3.z, 1.0 ))
           + i.y + vec4(i1.y, i2.y, i3.y, 1.0 ))
           + i.x + vec4(i1.x, i2.x, i3.x, 1.0 ));

// Gradients: 7x7x6 points over a cube, mapped onto a 4-cross polytope
// 7*7*6 = 294, which is close to the ring size 17*17 = 289.
  vec4 ip = vec4(1.0/294.0, 1.0/49.0, 1.0/7.0, 0.0) ;

  vec4 p0 = grad4(j0,   ip);
  vec4 p1 = grad4(j1.x, ip);
  vec4 p2 = grad4(j1.y, ip);
  vec4 p3 = grad4(j1.z, ip);
  vec4 p4 = grad4(j1.w, ip);

// Normalise gradients
  vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));
  p0 *= norm.x;
  p1 *= norm.y;
  p2 *= norm.z;
  p3 *= norm.w;
  p4 *= taylorInvSqrt(dot(p4,p4));

// Mix contributions from the five corners
  vec3 m0 = max(0.6 - vec3(dot(x0,x0), dot(x1,x1), dot(x2,x2)), 0.0);
  vec2 m1 = max(0.6 - vec2(dot(x3,x3), dot(x4,x4)            ), 0.0);
  m0 = m0 * m0;
  m1 = m1 * m1;
  return 49.0 * ( dot(m0*m0, vec3( dot( p0, x0 ), dot( p1, x1 ), dot( p2, x2 )))
               + dot(m1*m1, vec2( dot( p3, x3 ), dot( p4, x4 ) ) ) ) ;

  }
`;t.simplexNoise4D=u},function(e,t){'use strict';const i=`
	vec3 packNormalToRGB(const in vec3 normal) {
	  return normalize(normal) * 0.5 + 0.5;
	}
`;t.a={packNormalToRGB:i}},function(e,t){'use strict';Object.defineProperty(t,'__esModule',{value:!0});const i=`
	vec3 tonemapReinhard(vec3 color) {
	  return color / (color + vec3(1.0));
	}
`;t.tonemapReinhard=i},function(e,t){'use strict';t.a=`
	float transpose(float m) {
	  return m;
	}

	mat2 transpose(mat2 m) {
	  return mat2(m[0][0], m[1][0],
	              m[0][1], m[1][1]);
	}

	mat3 transpose(mat3 m) {
	  return mat3(m[0][0], m[1][0], m[2][0],
	              m[0][1], m[1][1], m[2][1],
	              m[0][2], m[1][2], m[2][2]);
	}

	mat4 transpose(mat4 m) {
	  return mat4(m[0][0], m[1][0], m[2][0], m[3][0],
	              m[0][1], m[1][1], m[2][1], m[3][1],
	              m[0][2], m[1][2], m[2][2], m[3][2],
	              m[0][3], m[1][3], m[2][3], m[3][3]);
	}
`},function(e,t,i){'use strict';var r=i(94),a=i.n(r),n=i(96),o=i.n(n),s=i(3),d=i(15),l=i(10),u=i(9),c=i(42),m=i(43);class f{constructor(e,t,i=50){this.origin=e,this.lookat=t;let r=[],n=[];e.forEach((e)=>{r=r.concat(e)}),t.forEach((e)=>{n=n.concat(e)}),this.curves={origin:new a.a(r),lookat:new a.a(n)}}get(e=0){const t=this.curves.origin.get(e),i=this.curves.lookat.get(e);return{origin:t,lookat:i}}rebuild(){this.curves.origin.update(),this.curves.lookat.update()}destroy(){this.curves.origin=null,this.curves.lookat=null}}class p extends d.a{constructor(e,t,i,r=50,a=100,n=!1,s=!1,d=!1){super(),this._rebuild=()=>{this.dolly.rebuild(),this.updateLine('origin',this.dolly.curves.origin.getLUT(this.steps)),this.updateLine('lookat',this.dolly.curves.lookat.getLUT(this.steps)),this.updatePoints('origin',this.dolly.curves.origin.points),this.updatePoints('lookat',this.dolly.curves.lookat.points),this.emit('rebuild')},this.id=o()(),this.dolly=e,this.scene=t,this.gui=i.addFolder(`Dolly ${this.id}`),n&&this.gui.open(),this.steps=r,this.range=a,this.lines={origin:null,lookat:null},this.points={origin:[],lookat:[]},this.createPoints('origin',this.dolly.origin),this.createPoints('lookat',this.dolly.lookat),this.createLine('origin',this.dolly.curves.origin.getLUT(this.steps)),this.createLine('lookat',this.dolly.curves.lookat.getLUT(this.steps)),this.guiOrigin=this.gui.addFolder(`origin`),this.guiLookat=this.gui.addFolder(`lookat`),s&&this.guiOrigin.open(),d&&this.guiLookat.open(),this.guiLookat.open(),this.dolly.curves.origin.points.forEach((e,t)=>{const i=this.guiOrigin.addFolder(`${t}`);i.open(),i.add(e,'x',-this.range,this.range).onChange(this._rebuild),i.add(e,'y',-this.range,this.range).onChange(this._rebuild),i.add(e,'z',-this.range,this.range).onChange(this._rebuild)}),this.dolly.curves.lookat.points.forEach((e,t)=>{const i=this.guiLookat.addFolder(`${t}`);i.open(),i.add(e,'x',-this.range,this.range).onChange(this._rebuild),i.add(e,'y',-this.range,this.range).onChange(this._rebuild),i.add(e,'z',-this.range,this.range).onChange(this._rebuild)})}flatten(e){let t=[];return e.forEach((e)=>{t=t.concat([e.x,e.y,e.z])}),t}createPoints(e,t){t.forEach((t,r)=>{this.points[e][r]=new u.a(new m.a(0.2,4,5),new l.a({drawType:s.DRAW_LINES})),this.points[e][r].position.set(t.x,t.y,t.z),this.scene.add(this.points[e][r])})}updatePoints(e,t){t.forEach((t,r)=>{this.points[e][r].position.set(t.x,t.y,t.z)})}updateLine(e,t){const r=this.lines[e].geometry.vertices.length/2;let a=0,n,o;for(let s=0;s<r;s+=1)a=2*s,s<r&&(n=t[s],o=t[s+1],this.lines[e].geometry.vertices[a].set(n.x,n.y,n.z),this.lines[e].geometry.vertices[a+1].set(o.x,o.y,o.z));this.lines[e].geometry.updateVertices()}createLine(e,t){const i=new Float32Array(this.flatten(t));this.lines[e]=new u.a(new c.a(i),new l.a({drawType:s.DRAW_LINES})),this.scene.add(this.lines[e])}destroy(){Object.keys(this.lines).forEach((e)=>{this.scene.remove(this.lines[e],!0)}),Object.keys(this.points).forEach((e)=>{this.points[e].forEach((e)=>{this.scene.remove(e,!0)})}),this.scene=null}}t.a=class{constructor(e){this.update=()=>{const{origin:e,lookat:t}=this.dollies[this.dolly].get(this.time);this.camera.position.set(e.x,e.y,e.z),this.camera.lookAt(t.x,t.y,t.z)},this.id=o()(),Object.assign(this,e),this.dollies=[],this.helpers=[],this.dolly='',this.time=0,this.gui&&(this.guiFolder=this.gui.addFolder(`Camera Dolly ${this.id}`),this.guiFolder.open(),this.guiFolder.add(this,'export'))}add(e,t){this.dollies[e]=new f(t.origin,t.lookat,this.curveSteps),this.set(e),this.guiFolder&&(this.helpers[e]=new p(this.dollies[e],this.scene,this.gui,this.curveSteps,this.guiSliderRange,this.guiOpen,this.guiOpenOrigin,this.guiOpenLookat),this.helpers[e].on('rebuild',this.update))}export(){const e=JSON.stringify({origin:this.dollies[this.dolly].curves.origin.points,lookat:this.dollies[this.dolly].curves.lookat.points},void 0,2);window.prompt('Copy to clipboard: Ctrl+C, Enter',e)}set(e){this.dolly=e}destroy(){Object.keys(this.dollies).forEach((e)=>{this.dollies[e].destroy()}),Object.keys(this.helpers).forEach((e)=>{this.helpers[e].destroy()})}}},function(e,t,i){e.exports=i(44)},function(e,t,i){(function(){'use strict';var t=i(45),r=function(e){this.curves=[],this._3d=!1,!e||(this.curves=e,this._3d=this.curves[0]._3d)};r.prototype={valueOf:function(){return this.toString()},toString:function(){return'['+this.curves.map(function(e){return t.pointsToString(e.points)}).join(', ')+']'},addCurve:function(e){this.curves.push(e),this._3d=this._3d||e._3d},length:function(){return this.curves.map(function(e){return e.length()}).reduce(function(e,t){return e+t})},curve:function(e){return this.curves[e]},bbox:function(){for(var e=this.curves,r=e[0].bbox(),a=1;a<e.length;a++)t.expandbox(r,e[a].bbox());return r},offset:function(e){var t=[];return this.curves.forEach(function(i){t=t.concat(i.offset(e))}),new r(t)}},e.exports=r})()},function(e,t,i){var r=i(97),a=i(99),n=r(),o=[1|n[0],n[1],n[2],n[3],n[4],n[5]],s=16383&(n[6]<<8|n[7]),d=0,l=0;e.exports=function(e,t,r){var u=t&&r||0,i=t||[];e=e||{};var c=void 0===e.clockseq?s:e.clockseq,m=void 0===e.msecs?new Date().getTime():e.msecs,f=void 0===e.nsecs?l+1:e.nsecs,p=m-d+(f-l)/1e4;if(0>p&&void 0===e.clockseq&&(c=16383&c+1),(0>p||m>d)&&void 0===e.nsecs&&(f=0),1e4<=f)throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');d=m,l=f,s=c,m+=1.22192928e13;var g=(1e4*(268435455&m)+f)%4294967296;i[u++]=255&g>>>24,i[u++]=255&g>>>16,i[u++]=255&g>>>8,i[u++]=255&g;var x=268435455&1e4*(m/4294967296);i[u++]=255&x>>>8,i[u++]=255&x,i[u++]=16|15&x>>>24,i[u++]=255&x>>>16,i[u++]=128|c>>>8,i[u++]=255&c;for(var b=e.node||o,h=0;6>h;++h)i[u+h]=b[h];return t?t:a(i)}},function(e,t,i){(function(t){var i=t.crypto||t.msCrypto,r;if(i&&i.getRandomValues){var a=new Uint8Array(16);r=function(){return i.getRandomValues(a),a}}if(!r){var n=Array(16);r=function(){for(var e=0,t;16>e;e++)0==(3&e)&&(t=4294967296*Math.random()),n[e]=255&t>>>((3&e)<<3);return n}}e.exports=r}).call(t,i(98))},function(e){var t=function(){return this}();try{t=t||Function('return this')()||(1,eval)('this')}catch(i){'object'==typeof window&&(t=window)}e.exports=t},function(e){for(var t=[],r=0;256>r;++r)t[r]=(r+256).toString(16).substr(1);e.exports=function(e,r){var a=r||0,i=t;return i[e[a++]]+i[e[a++]]+i[e[a++]]+i[e[a++]]+'-'+i[e[a++]]+i[e[a++]]+'-'+i[e[a++]]+i[e[a++]]+'-'+i[e[a++]]+i[e[a++]]+'-'+i[e[a++]]+i[e[a++]]+i[e[a++]]+i[e[a++]]+i[e[a++]]+i[e[a++]]}},function(e,t){'use strict';let i,r;const a=window.performance||Date;t.a=class{constructor(e=!1){this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.isRunning=e}start(){this.startTime=a.now(),this.oldTime=this.startTime,this.elapsedTime=0,this.isRunning=!0}stop(){this.getElapsedTime(),this.isRunning=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){return i=0,this.autoStart&&!this.isRunning&&this.start(),this.isRunning&&(r=a.now(),i=(r-this.oldTime)/1e3,this.oldTime=r,this.elapsedTime+=i),i}}},function(e){(function(){'use strict';var t={};e.exports=t,t.Mesh=function(e){var t=[],r=[],a=[],n={};n.verts=[],n.norms=[],n.textures=[],n.hashindices={},n.indices=[],n.index=0;for(var o=e.split('\n'),s=/^v\s/,d=/^vn\s/,l=/^vt\s/,u=/^f\s/,c=/\s+/,m=0;m<o.length;m++){var i=o[m].trim(),f=i.split(c);if(f.shift(),s.test(i))t.push.apply(t,f);else if(d.test(i))r.push.apply(r,f);else if(l.test(i))a.push.apply(a,f);else if(u.test(i))for(var p=!1,g=0,x=f.length;g<x;g++){if(3!==g||p||(g=2,p=!0),f[g]in n.hashindices)n.indices.push(n.hashindices[f[g]]);else{var b=f[g].split('/');n.verts.push(+t[3*(b[0]-1)+0]),n.verts.push(+t[3*(b[0]-1)+1]),n.verts.push(+t[3*(b[0]-1)+2]),a.length&&(n.textures.push(+a[2*(b[1]-1)+0]),n.textures.push(+a[2*(b[1]-1)+1])),n.norms.push(+r[3*(b[2]-1)+0]),n.norms.push(+r[3*(b[2]-1)+1]),n.norms.push(+r[3*(b[2]-1)+2]),n.hashindices[f[g]]=n.index,n.indices.push(n.index),n.index+=1}3===g&&p&&n.indices.push(n.hashindices[f[0]])}}this.vertices=n.verts,this.vertexNormals=n.norms,this.textures=n.textures,this.indices=n.indices};var i=function(){var e=this;this.xmlhttp=new XMLHttpRequest,this.get=function(t,i){e.xmlhttp.onreadystatechange=function(){4===e.xmlhttp.readyState&&i(e.xmlhttp.responseText,e.xmlhttp.status)},e.xmlhttp.open('GET',t,!0),e.xmlhttp.send()}};t.downloadMeshes=function(e,r,a){var n=Object.keys(e).length,o=!1;for(var s in void 0===a&&(a={}),e)e.hasOwnProperty(s)&&new i().get(e[s],function(e){return function(i,s){if(200===s?a[e]=new t.Mesh(i):(o=!0,console.error('An error has occurred and the mesh "'+e+'" could not be downloaded.')),n--,0===n){if(o)throw console.error('An error has occurred and one or meshes has not been downloaded. The execution of the script has terminated.'),'';r(a)}}}(s))};var r=function(e,t,i,r){var a=e.createBuffer(),n=t===e.ARRAY_BUFFER?Float32Array:Uint16Array;return e.bindBuffer(t,a),e.bufferData(t,new n(i),e.STATIC_DRAW),a.itemSize=r,a.numItems=i.length/r,a};t.initMeshBuffers=function(e,t){t.normalBuffer=r(e,e.ARRAY_BUFFER,t.vertexNormals,3),t.textureBuffer=r(e,e.ARRAY_BUFFER,t.textures,2),t.vertexBuffer=r(e,e.ARRAY_BUFFER,t.vertices,3),t.indexBuffer=r(e,e.ELEMENT_ARRAY_BUFFER,t.indices,1)},t.deleteMeshBuffers=function(e,t){e.deleteBuffer(t.normalBuffer),e.deleteBuffer(t.textureBuffer),e.deleteBuffer(t.vertexBuffer),e.deleteBuffer(t.indexBuffer)}})()},function(t,i,r){'use strict';var a=r(8),o=r(12),s=r(2);const c='MODE_DRAG',p='MODE_PAN',g='MODE_ZOOM',b=new s.a(0,1,0),h=1e-4;i.a=class{constructor(t,i){this._onTouchStart=(e)=>{if(e.preventDefault(),e.touches)switch(e.touches.length){case 1:this._mode=c,this._offset.y=this._rotation.y,this._offset.x=this._rotation.x;break;case 2:{this._mode=g,this._radiusOffset=this._radius;break}default:this._mode=p,this._offset.y=this.target.y,this._offset.x=this.target.x;}else switch(e.which){case 3:this._mode=p,this._offset.y=this.target.y,this._offset.x=this.target.x;break;default:this._mode=c,this._offset.y=this._rotation.y,this._offset.x=this._rotation.x;}this._start.y=e.pageX/this._width,this._start.x=e.pageY/this._height,this._targetOffset.copy(this.target),this._radiusOffset=this._radius,this.isDown=!0},this._onTouchMove=(e)=>{if(this.isDown){switch(this.isDragging=!0,this._mode){case p:{if(!this.pan)return;const t=e.pageX/this._width,i=e.pageY/this._height;this._direction.copy(this._camera.position).subtract(this.target).normalize();const r=this._direction.cross(b),a=this._targetOffset.x+-(this._start.y-t)*this.panSpeed*r.x,n=this._targetOffset.y+-(this._start.x-i)*this.panSpeed,o=this._targetOffset.z+-(this._start.y-t)*this.panSpeed*r.z;this.target.set(a,n,o);break}case g:{if(!this.zoom)return;const t=e.touches[0].pageX-e.touches[1].pageX,i=e.touches[0].pageY-e.touches[1].pageY,r=n(t*t+i*i),a=this._lastZoomDistance>r?1:-1;this._zoomConstraint(100*a),this._lastZoomDistance=r;break}default:{const t=e.pageX/this._width,i=e.pageY/this._height;this._rotation.x=this._offset.x+-(this._start.x-i)*this.rotationSpeed,this._rotation.y=this._offset.y+(this._start.y-t)*this.rotationSpeed,this._rotation.x=Object(a.clamp)(this._rotation.x,-f/2,f/2)}}this.update()}},this._onTouchEnd=()=>{this.isDown=!1,this.isDragging=!1},this._onContextMenu=(e)=>{e.preventDefault()},this._onMouseWheel=(e)=>{let t=0;e.wheelDelta?t=e.wheelDelta:e.detail&&(t=e.detail),this._zoomConstraint(-t)},this._onKeypress=(e)=>{switch(e.keyCode){case 114:this.reset();break;default:}},this.rotationSpeed=5,this.panSpeed=10,this.zoom=!0,this.pan=!0,this.smoothing=!1,this.easing=0.1,this.isDragging=!1,this._camera=t,this._element=i,this._zoomMin=0.1,this._zoomMax=Infinity,this._radius=u(t.position.x,t.position.z),this._radiusOffset=0,this._defaultRadius=u(t.position.x,t.position.z),this.rotation=new o.a,this._rotation=new o.a,this._rotation.x=e(t.position.y-0,+this._radius-0),this._rotation.y=e(t.position.z-0,t.position.x-0),this._defaultRotation=new o.a,this._defaultRotation.x=e(t.position.y-0,+this._radius-0),this._defaultRotation.y=e(t.position.z-0,t.position.x-0);const m=this._radius*l(this._rotation.x),h=this._radius*d(this._rotation.x),r=l(this._rotation.y)*h,x=d(this._rotation.y)*h;this._x=r,this._y=m,this._z=x,this._start=new o.a,this._offset=new o.a,this._offsetPan=new o.a,this.target=new s.a,this._targetOffset=new s.a,this._direction=new s.a,this._lastZoomDistance=0,this._width=window.innerWidth,this._height=window.innerHeight,this._element.addEventListener('mousedown',this._onTouchStart,!1),this._element.addEventListener('mousemove',this._onTouchMove,!1),this._element.addEventListener('mouseup',this._onTouchEnd,!1),this._element.addEventListener('touchstart',this._onTouchStart,!1),this._element.addEventListener('touchmove',this._onTouchMove,!1),this._element.addEventListener('touchend',this._onTouchEnd,!1),this._element.addEventListener('contextmenu',this._onContextMenu,!1),window.addEventListener('mousewheel',this._onMouseWheel,!1),window.addEventListener('keypress',this._onKeypress,!1)}_zoomConstraint(e){if(this.zoom){this._radius+=e/1e3*3,this._radius=Object(a.clamp)(this._radius,this._zoomMin,this._zoomMax),this.update()}}update(){this.smoothing?(this.rotation.x+=(this._rotation.x-this.rotation.x)*this.easing,this.rotation.y+=(this._rotation.y-this.rotation.y)*this.easing,m(this.rotation.x-this._rotation.x)<h&&(this.rotation.x=this._rotation.x),m(this.rotation.y-this._rotation.y)<h&&(this.rotation.y=this._rotation.y)):(this.rotation.x=this._rotation.x,this.rotation.y=this._rotation.y);const e=this._radius*l(this.rotation.x),t=this._radius*d(this.rotation.x),i=l(this.rotation.y)*t,r=d(this.rotation.y)*t;this._x=i,this._y=e,this._z=r,this._camera.position.set(this._x,this._y,this._z).add(this.target),this._camera.lookAt(this.target.x,this.target.y,this.target.z)}reset(){this.target.set(0,0,0),this._rotation.y=this._defaultRotation.y,this._rotation.x=this._defaultRotation.x,this._radius=this._defaultRadius,this.update()}dispose(){this._element.removeEventListener('mousedown',this._onTouchStart),this._element.removeEventListener('mousemove',this._onTouchMove),this._element.removeEventListener('mouseup',this._onTouchEnd),this._element.removeEventListener('touchstart',this._onTouchStart),this._element.removeEventListener('touchmove',this._onTouchMove),this._element.removeEventListener('touchend',this._onTouchEnd),this._element.removeEventListener('contextmenu',this._onContextMenu),window.removeEventListener('mousewheel',this._onMouseWheel),window.removeEventListener('keypress',this._onKeypress),this._camera=null,this._element=null}}},function(e,t,i){'use strict';var r=i(28);t.a=function(e){return new Promise((t,i)=>{Object(r.a)(e).then((e)=>{const i=JSON.parse(e);t(i)}).catch(i)})}},function(e,t,i){'use strict';var r=i(46),a=i(28);t.a=function(e){return new Promise((t,i)=>{Object(a.a)(e).then((e)=>{const i=Object(r.a)(e);t(i)}).catch(i)})}}])});
//# sourceMappingURL=ixviii.medium.min.js.map